{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchmarks_external/src/largetable/largetable_benchmark.es6","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","benchmarks_external/src/largetable/largetable_benchmark.js"],"names":[],"mappings":"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","file":"benchmarks_external/src/largetable/largetable_benchmark.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {getIntParameter, getStringParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nvar totalRows = getIntParameter('rows');\nvar totalColumns = getIntParameter('columns');\nvar benchmarkType = getStringParameter('benchmarkType');\n\nexport function main() {\n  angular.bootstrap(document.querySelector('largetable'), ['app']);\n}\n\nangular.module('app', [])\n.config(function($compileProvider) {\n  if ($compileProvider.debugInfoEnabled) {\n    $compileProvider.debugInfoEnabled(false);\n  }\n})\n.filter('noop', function() {\n  return function(input) {\n    return input;\n  };\n})\n.directive('largetable', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'largetable-js-template.html',\n    controller: 'DataController'\n  };\n})\n.controller('DataController', function($scope) {\n  bindAction('#destroyDom', destroyDom);\n  bindAction('#createDom', createDom);\n\n  function destroyDom() {\n    $scope.$apply(function() {\n      $scope.benchmarkType = 'none';\n    });\n  }\n\n  function createDom() {\n    $scope.$apply(function() {\n      $scope.benchmarkType = benchmarkType;\n    });\n  }\n\n  var data = $scope.data = [];\n\n  function iGetter() { return this.i; }\n  function jGetter() { return this.j; }\n\n  for (var i=0; i<totalRows; i++) {\n    data[i] = [];\n    for (var j=0; j<totalColumns; j++) {\n      data[i][j] = {\n        i: i, j: j,\n        iFn: iGetter,\n        jFn: jGetter\n      };\n    }\n  }\n})\n.directive('baselineBindingTable', function() {\n  return {\n    restrict: 'E',\n    link: function ($scope, $element) {\n      var i, j, row, cell, comment;\n      var template = document.createElement('span');\n      template.setAttribute('ng-repeat', 'foo in foos');\n      template.classList.add('ng-scope');\n      template.appendChild(document.createElement('span'));\n      template.appendChild(document.createTextNode(':'));\n      template.appendChild(document.createElement('span'));\n      template.appendChild(document.createTextNode('|'));\n\n      for (i = 0; i < totalRows; i++) {\n        row = document.createElement('div');\n        $element[0].appendChild(row);\n        for (j = 0; j < totalColumns; j++) {\n          cell = template.cloneNode(true);\n          row.appendChild(cell);\n          cell.childNodes[0].textContent = i;\n          cell.childNodes[2].textContent = j;\n          cell.ng3992 = 'xxx';\n          comment = document.createComment('ngRepeat end: bar in foo');\n          row.appendChild(comment);\n        }\n\n        comment = document.createComment('ngRepeat end: foo in foos');\n        $element[0].appendChild(comment);\n      }\n    }\n  };\n})\n.directive('baselineInterpolationTable', function() {\n  return {\n    restrict: 'E',\n    link: function ($scope, $element) {\n      var i, j, row, cell, comment;\n      var template = document.createElement('span');\n      template.setAttribute('ng-repeat', 'foo in foos');\n      template.classList.add('ng-scope');\n\n      for (i = 0; i < totalRows; i++) {\n        row = document.createElement('div');\n        $element[0].appendChild(row);\n        for (j = 0; j < totalColumns; j++) {\n          cell = template.cloneNode(true);\n          row.appendChild(cell);\n          cell.textContent = '' + i + ':' + j + '|';\n          cell.ng3992 = 'xxx';\n          comment = document.createComment('ngRepeat end: bar in foo');\n          row.appendChild(comment);\n        }\n\n        comment = document.createComment('ngRepeat end: foo in foos');\n        $element[0].appendChild(comment);\n      }\n    }\n  };\n})\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {getIntParameter,\n  getStringParameter,\n  bindAction} from 'angular2/src/test_lib/benchmark_util';\nvar totalRows = getIntParameter('rows');\nvar totalColumns = getIntParameter('columns');\nvar benchmarkType = getStringParameter('benchmarkType');\nexport function main() {\n  angular.bootstrap(document.querySelector('largetable'), ['app']);\n}\nangular.module('app', []).config(function($compileProvider) {\n  if ($compileProvider.debugInfoEnabled) {\n    $compileProvider.debugInfoEnabled(false);\n  }\n}).filter('noop', function() {\n  return function(input) {\n    return input;\n  };\n}).directive('largetable', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'largetable-js-template.html',\n    controller: 'DataController'\n  };\n}).controller('DataController', function($scope) {\n  bindAction('#destroyDom', destroyDom);\n  bindAction('#createDom', createDom);\n  function destroyDom() {\n    $scope.$apply(function() {\n      $scope.benchmarkType = 'none';\n    });\n  }\n  function createDom() {\n    $scope.$apply(function() {\n      $scope.benchmarkType = benchmarkType;\n    });\n  }\n  var data = $scope.data = [];\n  function iGetter() {\n    return this.i;\n  }\n  function jGetter() {\n    return this.j;\n  }\n  for (var i = 0; i < totalRows; i++) {\n    data[i] = [];\n    for (var j = 0; j < totalColumns; j++) {\n      data[i][j] = {\n        i: i,\n        j: j,\n        iFn: iGetter,\n        jFn: jGetter\n      };\n    }\n  }\n}).directive('baselineBindingTable', function() {\n  return {\n    restrict: 'E',\n    link: function($scope, $element) {\n      var i,\n          j,\n          row,\n          cell,\n          comment;\n      var template = document.createElement('span');\n      template.setAttribute('ng-repeat', 'foo in foos');\n      template.classList.add('ng-scope');\n      template.appendChild(document.createElement('span'));\n      template.appendChild(document.createTextNode(':'));\n      template.appendChild(document.createElement('span'));\n      template.appendChild(document.createTextNode('|'));\n      for (i = 0; i < totalRows; i++) {\n        row = document.createElement('div');\n        $element[0].appendChild(row);\n        for (j = 0; j < totalColumns; j++) {\n          cell = template.cloneNode(true);\n          row.appendChild(cell);\n          cell.childNodes[0].textContent = i;\n          cell.childNodes[2].textContent = j;\n          cell.ng3992 = 'xxx';\n          comment = document.createComment('ngRepeat end: bar in foo');\n          row.appendChild(comment);\n        }\n        comment = document.createComment('ngRepeat end: foo in foos');\n        $element[0].appendChild(comment);\n      }\n    }\n  };\n}).directive('baselineInterpolationTable', function() {\n  return {\n    restrict: 'E',\n    link: function($scope, $element) {\n      var i,\n          j,\n          row,\n          cell,\n          comment;\n      var template = document.createElement('span');\n      template.setAttribute('ng-repeat', 'foo in foos');\n      template.classList.add('ng-scope');\n      for (i = 0; i < totalRows; i++) {\n        row = document.createElement('div');\n        $element[0].appendChild(row);\n        for (j = 0; j < totalColumns; j++) {\n          cell = template.cloneNode(true);\n          row.appendChild(cell);\n          cell.textContent = '' + i + ':' + j + '|';\n          cell.ng3992 = 'xxx';\n          comment = document.createComment('ngRepeat end: bar in foo');\n          row.appendChild(comment);\n        }\n        comment = document.createComment('ngRepeat end: foo in foos');\n        $element[0].appendChild(comment);\n      }\n    }\n  };\n});\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/benchmarks_external/src/largetable/largetable_benchmark.map\n\n//# sourceMappingURL=./largetable_benchmark.map"]}