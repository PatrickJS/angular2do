{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchmarks_external/src/compiler/compiler_benchmark.es6","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","benchmarks_external/src/compiler/compiler_benchmark.js"],"names":[],"mappings":"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","file":"benchmarks_external/src/compiler/compiler_benchmark.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","// compiler benchmark in AngularJS 1.x\nimport {getIntParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nexport function main() {\n  var ngEl = document.createElement('div');\n  angular.bootstrap(ngEl, ['app']);\n}\n\nfunction loadTemplate(templateId, repeatCount) {\n  var template = document.querySelectorAll(`#${templateId}`)[0];\n  var content = template.innerHTML;\n  var result = '';\n  for (var i=0; i<repeatCount; i++) {\n    result += content;\n  }\n  // replace [] binding syntax\n  result = result.replace(/[\\[\\]]/g, '');\n\n  // Use a DIV as container as Angular 1.3 does not know <template> elements...\n  var div = document.createElement('div');\n  div.innerHTML = result;\n  return div;\n}\n\nangular.module('app', [])\n.directive('dir0', ['$parse', function($parse) {\n  return {\n    compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr0);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      }\n    }\n  };\n}])\n.directive('dir1', ['$parse', function($parse) {\n  return {\n    compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr1);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      }\n    }\n  };\n}])\n.directive('dir2', ['$parse', function($parse) {\n  return {\n    compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr2);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      }\n    }\n  };\n}])\n.directive('dir3', ['$parse', function($parse) {\n  return {\n    compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr3);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      }\n    }\n  };\n}])\n.directive('dir4', ['$parse', function($parse) {\n  return {\n    compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr4);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      }\n    }\n  };\n}])\n.run(['$compile', function($compile) {\n  var count = getIntParameter('elements');\n  var templateNoBindings = loadTemplate('templateNoBindings', count);\n  var templateWithBindings = loadTemplate('templateWithBindings', count);\n\n  bindAction('#compileWithBindings', compileWithBindings);\n  bindAction('#compileNoBindings', compileNoBindings);\n\n  function compileNoBindings() {\n    // Need to clone every time as the compiler might modify the template!\n    var cloned = templateNoBindings.cloneNode(true);\n    $compile(cloned);\n  }\n\n  function compileWithBindings() {\n    // Need to clone every time as the compiler might modify the template!\n    var cloned = templateWithBindings.cloneNode(true);\n    $compile(cloned);\n  }\n}]);\n\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {getIntParameter,\n  bindAction} from 'angular2/src/test_lib/benchmark_util';\nexport function main() {\n  var ngEl = document.createElement('div');\n  angular.bootstrap(ngEl, ['app']);\n}\nfunction loadTemplate(templateId, repeatCount) {\n  var template = document.querySelectorAll(`#${templateId}`)[0];\n  var content = template.innerHTML;\n  var result = '';\n  for (var i = 0; i < repeatCount; i++) {\n    result += content;\n  }\n  result = result.replace(/[\\[\\]]/g, '');\n  var div = document.createElement('div');\n  div.innerHTML = result;\n  return div;\n}\nangular.module('app', []).directive('dir0', ['$parse', function($parse) {\n  return {compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr0);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      };\n    }};\n}]).directive('dir1', ['$parse', function($parse) {\n  return {compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr1);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      };\n    }};\n}]).directive('dir2', ['$parse', function($parse) {\n  return {compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr2);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      };\n    }};\n}]).directive('dir3', ['$parse', function($parse) {\n  return {compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr3);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      };\n    }};\n}]).directive('dir4', ['$parse', function($parse) {\n  return {compile: function($element, $attrs) {\n      var expr = $parse($attrs.attr4);\n      return function($scope) {\n        $scope.$watch(expr, angular.noop);\n      };\n    }};\n}]).run(['$compile', function($compile) {\n  var count = getIntParameter('elements');\n  var templateNoBindings = loadTemplate('templateNoBindings', count);\n  var templateWithBindings = loadTemplate('templateWithBindings', count);\n  bindAction('#compileWithBindings', compileWithBindings);\n  bindAction('#compileNoBindings', compileNoBindings);\n  function compileNoBindings() {\n    var cloned = templateNoBindings.cloneNode(true);\n    $compile(cloned);\n  }\n  function compileWithBindings() {\n    var cloned = templateWithBindings.cloneNode(true);\n    $compile(cloned);\n  }\n}]);\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/benchmarks_external/src/compiler/compiler_benchmark.map\n\n//# sourceMappingURL=./compiler_benchmark.map"]}