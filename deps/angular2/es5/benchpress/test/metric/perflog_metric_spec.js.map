{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/metric/perflog_metric_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","benchpress/test/metric/@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"benchpress/test/metric/perflog_metric_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport { List, ListWrapper } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\n\nimport { Metric, PerflogMetric, WebDriverExtension, bind, Injector } from 'benchpress/benchpress';\n\nimport { TraceEventFactory } from '../trace_event_factory';\n\nexport function main() {\n  var commandLog;\n  var eventFactory = new TraceEventFactory('timeline', 'pid0');\n\n  function createMetric(perfLogs) {\n    commandLog = [];\n    return new Injector([\n      PerflogMetric.BINDINGS,\n      bind(PerflogMetric.SET_TIMEOUT).toValue( (fn, millis) => {\n        ListWrapper.push(commandLog, ['setTimeout', millis]);\n        fn();\n      }),\n      bind(WebDriverExtension).toValue(new MockDriverExtension(perfLogs, commandLog))\n    ]).get(PerflogMetric);\n  }\n\n  describe('perflog metric', () => {\n\n    it('should describe itself', () => {\n      expect(createMetric([[]]).describe()['script']).toBe('script execution time in ms');\n    });\n\n    describe('beginMeasure', () => {\n\n      it('should mark the timeline', (done) => {\n        var metric = createMetric([[]]);\n        metric.beginMeasure().then((_) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0']]);\n\n          done();\n        });\n      });\n\n    });\n\n    describe('endMeasure', () => {\n\n      it('should mark and aggregate events in between the marks', (done) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.start('script', 4),\n            eventFactory.end('script', 6),\n            eventFactory.markEnd('benchpress0', 10)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(2);\n\n            done();\n        });\n      });\n\n      it('should restart timing', (done) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.markEnd('benchpress0', 1),\n            eventFactory.markStart('benchpress1', 2),\n          ], [\n            eventFactory.markEnd('benchpress1', 3)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n\n            done();\n        });\n      });\n\n      it('should loop and aggregate until the end mark is present', (done) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 1) ],\n          [ eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress0', 10) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(3);\n\n            done();\n        });\n      });\n\n      it('should store events after the end mark for the next call', (done) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.markEnd('benchpress0', 1), eventFactory.markStart('benchpress1', 1),\n            eventFactory.start('script', 1), eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress1', 6) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (data) => {\n            expect(data['script']).toBe(0);\n            return metric.endMeasure(true)\n          })\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(3);\n\n            done();\n        });\n      });\n\n    });\n\n    describe('aggregation', () => {\n\n      function aggregate(events) {\n        ListWrapper.insert(events, 0, eventFactory.markStart('benchpress0', 0));\n        ListWrapper.push(events, eventFactory.markEnd('benchpress0', 10));\n        var metric = createMetric([events]);\n        return metric\n          .beginMeasure().then( (_) => metric.endMeasure(false) );\n      }\n\n\n      it('should report a single interval', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['script']).toBe(5);\n          done();\n        });\n      });\n\n      it('should sum up multiple intervals', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5),\n          eventFactory.start('script', 10),\n          eventFactory.end('script', 17)\n        ]).then((data) => {\n          expect(data['script']).toBe(12);\n          done();\n        });\n      });\n\n      it('should ignore not started intervals', (done) => {\n        aggregate([\n          eventFactory.end('script', 10)\n        ]).then((data) => {\n          expect(data['script']).toBe(0);\n          done();\n        });\n      });\n\n      it('should ignore not ended intervals', (done) => {\n        aggregate([\n          eventFactory.start('script', 10)\n        ]).then((data) => {\n          expect(data['script']).toBe(0);\n          done();\n        });\n      });\n\n      it('should ignore events from different processed as the start mark', (done) => {\n        var otherProcessEventFactory = new TraceEventFactory('timeline', 'pid1');\n        var metric = createMetric([[\n          eventFactory.markStart('benchpress0', 0),\n          eventFactory.start('script', 0, null),\n          eventFactory.end('script', 5, null),\n          otherProcessEventFactory.start('script', 10, null),\n          otherProcessEventFactory.end('script', 17, null),\n          eventFactory.markEnd('benchpress0', 20)\n        ]]);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then((data) => {\n            expect(data['script']).toBe(5);\n            done();\n          });\n      });\n\n      ['script', 'gcTime', 'render'].forEach( (metricName) => {\n        it(`should support ${metricName} metric`, (done) => {\n          aggregate([\n            eventFactory.start(metricName, 0),\n            eventFactory.end(metricName, 5)\n          ]).then((data) => {\n            expect(data[metricName]).toBe(5);\n            done();\n          });\n        });\n      });\n\n      it('should support gcAmount metric', (done) => {\n        aggregate([\n          eventFactory.start('gc', 0, {'usedHeapSize': 2500}),\n          eventFactory.end('gc', 5, {'usedHeapSize': 1000})\n        ]).then((data) => {\n          expect(data['gcAmount']).toBe(1.5);\n          done();\n        });\n      });\n\n      it('should subtract gcTime in script from script time', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.start('gc', 1, {'usedHeapSize': 1000}),\n          eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['script']).toBe(2);\n          done();\n        });\n      });\n\n      describe('gcTimeInScript / gcAmountInScript', () => {\n\n        it('should detect gc during script execution with begin/end events', (done) => {\n          aggregate([\n            eventFactory.start('script', 0),\n            eventFactory.start('gc', 1, {'usedHeapSize': 10000}),\n            eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n            eventFactory.end('script', 5)\n          ]).then((data) => {\n            expect(data['gcTimeInScript']).toBe(3);\n            expect(data['gcAmountInScript']).toBe(10.0);\n            done();\n          });\n        });\n\n        it('should detect gc during script execution with complete events', (done) => {\n          aggregate([\n            eventFactory.complete('script', 0, 5),\n            eventFactory.start('gc', 1, {'usedHeapSize': 10000}),\n            eventFactory.end('gc', 4, {'usedHeapSize': 0})\n          ]).then((data) => {\n            expect(data['gcTimeInScript']).toBe(3);\n            expect(data['gcAmountInScript']).toBe(10.0);\n            done();\n          });\n        });\n\n        it('should ignore gc outside of script execution', (done) => {\n          aggregate([\n            eventFactory.start('gc', 1, {'usedHeapSize': 10}),\n            eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n            eventFactory.start('script', 0),\n            eventFactory.end('script', 5)\n          ]).then((data) => {\n            expect(data['gcTimeInScript']).toEqual(0.0);\n            expect(data['gcAmountInScript']).toEqual(0.0);\n            done();\n          });\n        });\n\n      });\n\n    });\n\n  });\n}\n\nclass MockDriverExtension extends WebDriverExtension {\n  _perfLogs:List;\n  _commandLog:List;\n  constructor(perfLogs, commandLog) {\n    super();\n    this._perfLogs = perfLogs;\n    this._commandLog = commandLog;\n  }\n\n  timeBegin(name):Promise {\n    ListWrapper.push(this._commandLog, ['timeBegin', name]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  timeEnd(name, restartName):Promise {\n    ListWrapper.push(this._commandLog, ['timeEnd', name, restartName]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  readPerfLog():Promise {\n    ListWrapper.push(this._commandLog, 'readPerfLog');\n    if (this._perfLogs.length > 0) {\n      var next = this._perfLogs[0];\n      ListWrapper.removeAt(this._perfLogs, 0);\n      return PromiseWrapper.resolve(next);\n    } else {\n      return PromiseWrapper.resolve([]);\n    }\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}