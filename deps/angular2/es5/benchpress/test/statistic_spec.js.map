{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/statistic_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"benchpress/test/statistic_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, ddescribe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport { Statistic } from 'benchpress/src/statistic';\n\nimport { NaN } from 'angular2/src/facade/math';\n\nexport function main() {\n  describe('statistic', () => {\n\n    it('should calculate the mean', () => {\n      expect(Statistic.calculateMean([])).toBeNaN();\n      expect(Statistic.calculateMean([1,2,3])).toBe(2.0);\n    });\n\n    it('should calculate the standard deviation', () => {\n      expect(Statistic.calculateStandardDeviation([], NaN)).toBeNaN();\n      expect(Statistic.calculateStandardDeviation([1], 1)).toBe(0.0);\n      expect(Statistic.calculateStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9], 5)).toBe(2.0);\n    });\n\n    it('should calculate the coefficient of variation', () => {\n      expect(Statistic.calculateCoefficientOfVariation([], NaN)).toBeNaN();\n      expect(Statistic.calculateCoefficientOfVariation([1], 1)).toBe(0.0);\n      expect(Statistic.calculateCoefficientOfVariation([2, 4, 4, 4, 5, 5, 7, 9], 5)).toBe(40.0);\n    });\n\n    it('should calculate the regression slope', () => {\n      expect(Statistic.calculateRegressionSlope([], NaN, [], NaN)).toBeNaN();\n      expect(Statistic.calculateRegressionSlope([1], 1, [2], 2)).toBeNaN();\n      expect(Statistic.calculateRegressionSlope([1,2], 1.5, [2,4], 3)).toBe(2.0);\n    });\n\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}