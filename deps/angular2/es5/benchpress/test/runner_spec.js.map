{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/runner_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/7","benchpress/test/@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/13"],"names":[],"mappings":"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","file":"benchpress/test/runner_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\nimport {\n  Runner, Sampler, SampleDescription,\n  Validator, bind, Injector, Metric,\n  Options, WebDriverAdapter\n} from 'benchpress/benchpress';\nimport { isBlank } from 'angular2/src/facade/lang';\nimport { Promise, PromiseWrapper } from 'angular2/src/facade/async';\n\nexport function main() {\n  describe('runner', () => {\n    var injector;\n    var runner;\n\n    function createRunner(defaultBindings = null) {\n      if (isBlank(defaultBindings)) {\n        defaultBindings = [];\n      }\n      runner = new Runner([\n        defaultBindings,\n        bind(Sampler).toFactory(\n          (_injector) => {\n            injector = _injector;\n            return new MockSampler();\n          }, [Injector]\n        ),\n        bind(Metric).toFactory( () => new MockMetric(), []),\n        bind(Validator).toFactory( () => new MockValidator(), []),\n        bind(WebDriverAdapter).toFactory( () => new MockWebDriverAdapter(), [])\n      ]);\n      return runner;\n    }\n\n    it('should set SampleDescription.id', (done) => {\n      createRunner().sample({id: 'someId'})\n        .then( (_) => injector.asyncGet(SampleDescription) )\n        .then( (desc) => {\n          expect(desc.id).toBe('someId');\n          done();\n        });\n    });\n\n    it('should merge SampleDescription.description', (done) => {\n      createRunner([\n        bind(Options.DEFAULT_DESCRIPTION).toValue({'a': 1})\n      ]).sample({id: 'someId', bindings: [\n        bind(Options.SAMPLE_DESCRIPTION).toValue({'b': 2})\n      ]}).then( (_) => injector.asyncGet(SampleDescription) )\n         .then( (desc) => {\n\n        expect(desc.description).toEqual({\n          'forceGc': false,\n          'userAgent': 'someUserAgent',\n          'a': 1,\n          'b': 2,\n          'v': 11\n        });\n        done();\n      });\n    });\n\n    it('should fill SampleDescription.metrics from the Metric', (done) => {\n      createRunner().sample({id: 'someId'})\n        .then( (_) => injector.asyncGet(SampleDescription) )\n        .then( (desc) => {\n\n        expect(desc.metrics).toEqual({ 'm1': 'some metric' });\n        done();\n      });\n    });\n\n    it('should bind Options.EXECUTE', (done) => {\n      var execute = () => {};\n      createRunner().sample({id: 'someId', execute: execute}).then( (_) => {\n        expect(injector.get(Options.EXECUTE)).toEqual(execute);\n        done();\n      });\n    });\n\n    it('should bind Options.PREPARE', (done) => {\n      var prepare = () => {};\n      createRunner().sample({id: 'someId', prepare: prepare}).then( (_) => {\n        expect(injector.get(Options.PREPARE)).toEqual(prepare);\n        done();\n      });\n    });\n\n    it('should overwrite bindings per sample call', (done) => {\n      createRunner([\n        bind(Options.DEFAULT_DESCRIPTION).toValue({'a': 1}),\n      ]).sample({id: 'someId', bindings: [\n        bind(Options.DEFAULT_DESCRIPTION).toValue({'a': 2}),\n      ]}).then( (_) => injector.asyncGet(SampleDescription) )\n         .then( (desc) => {\n\n        expect(injector.get(SampleDescription).description['a']).toBe(2);\n        done();\n      });\n\n    });\n\n  });\n}\n\nclass MockWebDriverAdapter extends WebDriverAdapter {\n  executeScript(script):Promise {\n    return PromiseWrapper.resolve('someUserAgent');\n  }\n}\n\nclass MockValidator extends Validator {\n  constructor() {\n    super();\n  }\n  describe() {\n    return { 'v': 11 };\n  }\n}\n\nclass MockMetric extends Metric {\n  constructor() {\n    super();\n  }\n  describe() {\n    return { 'm1': 'some metric' };\n  }\n}\n\nclass MockSampler extends Sampler {\n  constructor() {\n    super();\n  }\n  sample():Promise {\n    return PromiseWrapper.resolve(23);\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","return assert.returnType(($__placeholder__0), $__placeholder__1)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}