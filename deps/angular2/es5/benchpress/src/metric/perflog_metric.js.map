{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","benchpress/src/metric/perflog_metric.js","benchpress/src/metric/@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/13","benchpress/src/metric/@traceur/generated/TemplateParser/9","benchpress/src/metric/@traceur/generated/TemplateParser/25","benchpress/src/metric/@traceur/generated/TemplateParser/10","benchpress/src/metric/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"benchpress/src/metric/perflog_metric.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import { PromiseWrapper, Promise } from 'angular2/src/facade/async';\nimport { isPresent, isBlank, int, BaseException, StringWrapper, Math } from 'angular2/src/facade/lang';\nimport { ListWrapper, StringMap, StringMapWrapper } from 'angular2/src/facade/collection';\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { WebDriverExtension } from '../web_driver_extension';\nimport { Metric } from '../metric';\n\n/**\n * A metric that reads out the performance log\n */\nexport class PerflogMetric extends Metric {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get SET_TIMEOUT() { return _SET_TIMEOUT; }\n\n  _driverExtension:WebDriverExtension;\n  _remainingEvents:List;\n  _measureCount:int;\n  _setTimeout:Function;\n\n  constructor(driverExtension:WebDriverExtension, setTimeout:Function) {\n    super();\n    this._driverExtension = driverExtension;\n    this._remainingEvents = [];\n    this._measureCount = 0;\n    this._setTimeout = setTimeout;\n  }\n\n  describe():StringMap {\n    return {\n      'script': 'script execution time in ms',\n      'render': 'render time in ms',\n      'gcTime': 'gc time in ms',\n      'gcAmount': 'gc amount in kbytes',\n      'gcTimeInScript': 'gc time during script execution in ms',\n      'gcAmountInScript': 'gc amount during script execution in kbytes'\n    };\n  }\n\n  beginMeasure():Promise {\n    return this._driverExtension.timeBegin(this._markName(this._measureCount++));\n  }\n\n  endMeasure(restart:boolean):Promise<Object> {\n    var markName = this._markName(this._measureCount-1);\n    var nextMarkName = restart ? this._markName(this._measureCount++) : null;\n    return this._driverExtension.timeEnd(markName, nextMarkName)\n      .then( (_) => this._readUntilEndMark(markName) );\n  }\n\n  _readUntilEndMark(markName:string, loopCount:int = 0, startEvent = null) {\n    if (loopCount > _MAX_RETRY_COUNT) {\n      throw new BaseException(`Tried too often to get the ending mark: ${loopCount}`);\n    }\n    return this._driverExtension.readPerfLog().then( (events) => {\n      this._addEvents(events);\n      var result = this._aggregateEvents(\n        this._remainingEvents, markName\n      );\n      if (isPresent(result)) {\n        this._remainingEvents = events;\n        return result;\n      }\n      var completer = PromiseWrapper.completer();\n      this._setTimeout(\n        () => completer.complete(this._readUntilEndMark(markName, loopCount+1)),\n        100\n      );\n      return completer.promise;\n    });\n  }\n\n  _addEvents(events) {\n    var needSort = false;\n    ListWrapper.forEach(events, (event) => {\n      if (StringWrapper.equals(event['ph'], 'X')) {\n        needSort = true;\n        var startEvent = {};\n        var endEvent = {};\n        StringMapWrapper.forEach(event, (value, prop) => {\n          startEvent[prop] = value;\n          endEvent[prop] = value;\n        });\n        startEvent['ph'] = 'B';\n        endEvent['ph'] = 'E';\n        endEvent['ts'] = startEvent['ts'] + startEvent['dur'];\n        ListWrapper.push(this._remainingEvents, startEvent);\n        ListWrapper.push(this._remainingEvents, endEvent);\n      } else {\n        ListWrapper.push(this._remainingEvents, event);\n      }\n    });\n    if (needSort) {\n      // Need to sort because of the ph==='X' events\n      ListWrapper.sort(this._remainingEvents, (a,b) => {\n        var diff = a['ts'] - b['ts'];\n        return diff > 0\n            ? 1\n            : diff < 0\n                ? -1\n                : 0;\n      });\n    }\n  }\n\n  _aggregateEvents(events, markName) {\n    var result = {\n      'script': 0,\n      'render': 0,\n      'gcTime': 0,\n      'gcAmount': 0,\n      'gcTimeInScript': 0,\n      'gcAmountInScript': 0\n    };\n\n    var markStartEvent = null;\n    var markEndEvent = null;\n\n    var intervalStarts = {};\n    events.forEach( (event) => {\n      var ph = event['ph'];\n      var name = event['name'];\n      if (StringWrapper.equals(ph, 'b') && StringWrapper.equals(name, markName)) {\n        markStartEvent = event;\n      } else if (StringWrapper.equals(ph, 'e') && StringWrapper.equals(name, markName)) {\n        markEndEvent = event;\n      }\n      if (isPresent(markStartEvent) && isBlank(markEndEvent) && event['pid'] === markStartEvent['pid']) {\n        if (StringWrapper.equals(ph, 'B')) {\n          intervalStarts[name] = event;\n        } else if (StringWrapper.equals(ph, 'E') && isPresent(intervalStarts[name])) {\n          var startEvent = intervalStarts[name];\n          var duration = event['ts'] - startEvent['ts'];\n          intervalStarts[name] = null;\n          if (StringWrapper.equals(name, 'gc')) {\n            result['gcTime'] += duration;\n            result['gcAmount'] += (startEvent['args']['usedHeapSize'] - event['args']['usedHeapSize']) / 1000;\n            if (isPresent(intervalStarts['script'])) {\n              result['gcTimeInScript'] += duration;\n              result['gcAmountInScript'] += result['gcAmount'];\n            }\n          } else {\n            result[name] += duration;\n          }\n        }\n      }\n    });\n    result['script'] -= result['gcTimeInScript'];\n    return isPresent(markStartEvent) && isPresent(markEndEvent) ? result : null;\n  }\n\n  _markName(index) {\n    return `${_MARK_NAME_PREFIX}${index}`;\n  }\n}\n\nvar _MAX_RETRY_COUNT = 20;\nvar _MARK_NAME_PREFIX = 'benchpress';\nvar _SET_TIMEOUT = new OpaqueToken('PerflogMetric.setTimeout');\nvar _BINDINGS = [\n  bind(PerflogMetric).toFactory(\n    (driverExtension, setTimeout) => new PerflogMetric(driverExtension, setTimeout),\n    [WebDriverExtension, _SET_TIMEOUT]\n  ),\n  bind(_SET_TIMEOUT).toValue( (fn, millis) => PromiseWrapper.setTimeout(fn, millis) )\n];","assert.argumentTypes($__placeholder__0)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}