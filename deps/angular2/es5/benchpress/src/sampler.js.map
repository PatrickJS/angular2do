{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/sampler.js","benchpress/src/@traceur/generated/TemplateParser/9","benchpress/src/@traceur/generated/TemplateParser/25","benchpress/src/@traceur/generated/TemplateParser/10","benchpress/src/@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"benchpress/src/sampler.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import { isPresent, isBlank, Date, DateWrapper } from 'angular2/src/facade/lang';\nimport { Promise, PromiseWrapper } from 'angular2/src/facade/async';\nimport { StringMapWrapper, StringMap, List, ListWrapper } from 'angular2/src/facade/collection';\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { Metric } from './metric';\nimport { Validator } from './validator';\nimport { Reporter } from './reporter';\nimport { WebDriverExtension } from './web_driver_extension';\nimport { WebDriverAdapter } from './web_driver_adapter';\n\nimport { Options } from './sample_options';\nimport { MeasureValues} from './measure_values';\n\n/**\n * The Sampler owns the sample loop:\n * 1. calls the prepare/execute callbacks,\n * 2. gets data from the metric\n * 3. asks the validator for a valid sample\n * 4. reports the new data to the reporter\n * 5. loop until there is a valid sample\n */\nexport class Sampler {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get TIME() { return _TIME; }\n\n  _driver:WebDriverAdapter;\n  _driverExtension:WebDriverExtension;\n  _metric:Metric;\n  _reporter:Reporter;\n  _validator:Validator;\n  _forceGc:boolean;\n  _prepare:Function;\n  _execute:Function;\n  _time:Function;\n\n  constructor({\n    driver, driverExtension, metric, reporter, validator, forceGc, prepare, execute, time\n  }:{\n    driver: WebDriverAdapter,\n    driverExtension: WebDriverExtension, metric: Metric, reporter: Reporter,\n    validator: Validator, prepare: Function, execute: Function, time: Function\n  }={}) {\n    this._driver = driver;\n    this._driverExtension = driverExtension;\n    this._metric = metric;\n    this._reporter = reporter;\n    this._validator = validator;\n    this._forceGc = forceGc;\n    this._prepare = prepare;\n    this._execute = execute;\n    this._time = time;\n  }\n\n  sample():Promise<SampleState> {\n    var loop;\n    loop = (lastState) => {\n      return this._iterate(lastState)\n        .then( (newState) => {\n          if (isPresent(newState.validSample)) {\n            return newState;\n          } else {\n            return loop(newState);\n          }\n        });\n    }\n    return this._gcIfNeeded().then( (_) => loop(new SampleState([], null)) );\n  }\n\n  _gcIfNeeded() {\n    if (this._forceGc) {\n      return this._driverExtension.gc();\n    } else {\n      return PromiseWrapper.resolve(null);\n    }\n  }\n\n  _iterate(lastState) {\n    var resultPromise;\n    if (isPresent(this._prepare)) {\n      resultPromise = this._driver.waitFor(this._prepare)\n        .then( (_) => this._gcIfNeeded() );\n    } else {\n      resultPromise = PromiseWrapper.resolve(null);\n    }\n    if (isPresent(this._prepare) || lastState.completeSample.length === 0) {\n      resultPromise = resultPromise.then( (_) => this._metric.beginMeasure() );\n    }\n    return resultPromise\n      .then( (_) => this._driver.waitFor(this._execute) )\n      .then( (_) => this._gcIfNeeded() )\n      .then( (_) => this._metric.endMeasure(isBlank(this._prepare)) )\n      .then( (measureValues) => this._report(lastState, measureValues) );\n  }\n\n  _report(state:SampleState, metricValues:StringMap):Promise<SampleState> {\n    var measureValues = new MeasureValues(state.completeSample.length, this._time(), metricValues);\n    var completeSample = ListWrapper.concat(state.completeSample, [measureValues]);\n    var validSample = this._validator.validate(completeSample);\n    var resultPromise = this._reporter.reportMeasureValues(measureValues);\n    if (isPresent(validSample)) {\n      resultPromise = resultPromise.then( (_) => this._reporter.reportSample(completeSample, validSample) )\n    }\n    return resultPromise.then( (_) => new SampleState(completeSample, validSample) );\n  }\n\n}\n\nexport class SampleState {\n  completeSample:List;\n  validSample:List;\n\n  constructor(completeSample: List, validSample: List) {\n    this.completeSample = completeSample;\n    this.validSample = validSample;\n  }\n}\n\nvar _TIME = new OpaqueToken('Sampler.time');\n\nvar _BINDINGS = [\n  bind(Sampler).toFactory(\n    (driver, driverExtension, metric, reporter, validator, forceGc, prepare, execute, time) => new Sampler({\n      driver: driver,\n      driverExtension: driverExtension,\n      reporter: reporter,\n      validator: validator,\n      metric: metric,\n      forceGc: forceGc,\n      // TODO(tbosch): DI right now does not support null/undefined objects\n      // Mostly because the cache would have to be initialized with a\n      // special null object, which is expensive.\n      prepare: prepare !== false ? prepare : null,\n      execute: execute,\n      time: time\n    }),\n    [WebDriverAdapter, WebDriverExtension, Metric, Reporter, Validator, Options.FORCE_GC, Options.PREPARE, Options.EXECUTE, _TIME]\n  ),\n  bind(Options.FORCE_GC).toValue(false),\n  bind(Options.PREPARE).toValue(false),\n  bind(_TIME).toValue( () => DateWrapper.now() )\n];\n","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.argumentTypes($__placeholder__0)"]}