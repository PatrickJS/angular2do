{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/src/webdriver/selenium_webdriver_adapter.es6","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","benchpress/src/webdriver/@traceur/generated/TemplateParser/9","benchpress/src/webdriver/@traceur/generated/TemplateParser/8","benchpress/src/webdriver/@traceur/generated/TemplateParser/7","benchpress/src/webdriver/@traceur/generated/TemplateParser/10","benchpress/src/webdriver/selenium_webdriver_adapter.js"],"names":[],"mappings":"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","file":"benchpress/src/webdriver/selenium_webdriver_adapter.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import { Promise, PromiseWrapper } from 'angular2/src/facade/async';\nimport { bind } from 'angular2/di';\nimport { WebDriverAdapter } from '../web_driver_adapter';\n\nimport webdriver from 'selenium-webdriver';\n\n/**\n * Adapter for the selenium-webdriver.\n */\nexport class SeleniumWebDriverAdapter extends WebDriverAdapter {\n  _driver:any;\n\n  constructor(driver) {\n    super();\n    this._driver = driver;\n  }\n\n  _convertPromise(thenable) {\n    var completer = PromiseWrapper.completer();\n    thenable.then(\n      // selenium-webdriver uses an own Node.js context,\n      // so we need to convert data into objects of this context.\n      // (e.g. otherwise instanceof checks of rtts_assert would fail)\n      (data) => completer.complete(convertToLocalProcess(data)),\n      completer.reject\n    );\n    return completer.promise;\n  }\n\n  waitFor(callback):Promise {\n    return this._convertPromise(this._driver.controlFlow().execute(callback));\n  }\n\n  executeScript(script:string):Promise {\n    return this._convertPromise(this._driver.executeScript(script));\n  }\n\n  capabilities():Promise {\n    return this._convertPromise(\n      this._driver.getCapabilities().then( (capsObject) => capsObject.toJSON() )\n    );\n  }\n\n  logs(type:string):Promise {\n    // Needed as selenium-webdriver does not forward\n    // performance logs in the correct way via manage().logs\n    return this._convertPromise(this._driver.schedule(\n      new webdriver.Command(webdriver.CommandName.GET_LOG).\n          setParameter('type', type),\n      'WebDriver.manage().logs().get(' + type + ')'));\n  }\n\n}\n\nfunction convertToLocalProcess(data) {\n  var serialized = JSON.stringify(data);\n  if (''+serialized === 'undefined') {\n    return undefined;\n  }\n  return JSON.parse(serialized);\n}","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","import {assert} from \"rtts_assert/rtts_assert\";\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {bind} from 'angular2/di';\nimport {WebDriverAdapter} from '../web_driver_adapter';\nimport webdriver from 'selenium-webdriver';\nexport class SeleniumWebDriverAdapter extends WebDriverAdapter {\n  constructor(driver) {\n    super();\n    this._driver = driver;\n  }\n  _convertPromise(thenable) {\n    var completer = PromiseWrapper.completer();\n    thenable.then((data) => completer.complete(convertToLocalProcess(data)), completer.reject);\n    return completer.promise;\n  }\n  waitFor(callback) {\n    return assert.returnType((this._convertPromise(this._driver.controlFlow().execute(callback))), Promise);\n  }\n  executeScript(script) {\n    assert.argumentTypes(script, assert.type.string);\n    return assert.returnType((this._convertPromise(this._driver.executeScript(script))), Promise);\n  }\n  capabilities() {\n    return assert.returnType((this._convertPromise(this._driver.getCapabilities().then((capsObject) => capsObject.toJSON()))), Promise);\n  }\n  logs(type) {\n    assert.argumentTypes(type, assert.type.string);\n    return assert.returnType((this._convertPromise(this._driver.schedule(new webdriver.Command(webdriver.CommandName.GET_LOG).setParameter('type', type), 'WebDriver.manage().logs().get(' + type + ')'))), Promise);\n  }\n}\nObject.defineProperty(SeleniumWebDriverAdapter.prototype.executeScript, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(SeleniumWebDriverAdapter.prototype.logs, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction convertToLocalProcess(data) {\n  var serialized = JSON.stringify(data);\n  if ('' + serialized === 'undefined') {\n    return undefined;\n  }\n  return JSON.parse(serialized);\n}\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/benchpress/src/webdriver/selenium_webdriver_adapter.map\n\n//# sourceMappingURL=./selenium_webdriver_adapter.map"]}