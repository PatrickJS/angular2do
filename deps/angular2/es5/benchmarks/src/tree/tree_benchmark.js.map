{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchmarks/src/tree/tree_benchmark.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","benchmarks/src/tree/@traceur/generated/TemplateParser/8","benchmarks/src/tree/@traceur/generated/TemplateParser/10","benchmarks/src/tree/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"benchmarks/src/tree/tree_benchmark.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {Parser, Lexer, ChangeDetector, ChangeDetection, jitChangeDetection}\n  from 'angular2/change_detection';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\n\nimport {bootstrap, Component, Viewport, Template, ViewContainer, Compiler} from 'angular2/angular2';\n\nimport {CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {ShadowDomStrategy, NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {DOM, document, window, Element, gc} from 'angular2/src/facade/dom';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {getIntParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {XHRImpl} from 'angular2/src/core/compiler/xhr/xhr_impl';\n\nimport {If} from 'angular2/directives';\n\nfunction setupReflector() {\n  // TODO: Put the general calls to reflector.register... in a shared file\n  // as they are needed in all benchmarks...\n\n  reflector.registerType(AppComponent, {\n    'factory': () => new AppComponent(),\n    'parameters': [],\n    'annotations' : [\n      new Component({selector: 'app'}),\n      new Template({\n        directives: [TreeComponent],\n        inline: `<tree [data]='initData'></tree>`\n      })]\n  });\n\n  reflector.registerType(TreeComponent, {\n    'factory': () => new TreeComponent(),\n    'parameters': [],\n    'annotations' : [\n      new Component({\n        selector: 'tree',\n        bind: {'data': 'data'}\n      }),\n      new Template({\n        directives: [TreeComponent, If],\n        inline: `<span> {{data.value}} <span template='if data.right != null'><tree [data]='data.right'></tree></span><span template='if data.left != null'><tree [data]='data.left'></tree></span></span>`\n      })]\n  });\n\n  reflector.registerType(If, {\n    'factory': (vp) => new If(vp),\n    'parameters': [[ViewContainer]],\n    'annotations' : [new Viewport({\n      selector: '[if]',\n      bind: {\n        'condition': 'if'\n      }\n    })]\n  });\n\n  reflector.registerType(Compiler, {\n    'factory': (cd, templateLoader, reader, parser, compilerCache, strategy, resolver) =>\n      new Compiler(cd, templateLoader, reader, parser, compilerCache, strategy, resolver),\n    'parameters': [[ChangeDetection], [TemplateLoader], [DirectiveMetadataReader],\n                   [Parser], [CompilerCache], [ShadowDomStrategy], [TemplateResolver]],\n    'annotations': []\n  });\n\n  reflector.registerType(CompilerCache, {\n    'factory': () => new CompilerCache(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(Parser, {\n    'factory': (lexer) => new Parser(lexer),\n    'parameters': [[Lexer]],\n    'annotations': []\n  });\n\n  reflector.registerType(TemplateLoader, {\n    'factory': (xhr) => new TemplateLoader(xhr),\n    'parameters': [[XHR]],\n    'annotations': []\n  });\n\n  reflector.registerType(TemplateResolver, {\n    'factory': () => new TemplateResolver(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(XHR, {\n    'factory': () => new XHRImpl(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(DirectiveMetadataReader, {\n    'factory': () => new DirectiveMetadataReader(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(ShadowDomStrategy, {\n    'factory': () => new NativeShadowDomStrategy(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(Lexer, {\n    'factory': () => new Lexer(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(ExceptionHandler, {\n    \"factory\": () => new ExceptionHandler(),\n    \"parameters\": [],\n    \"annotations\": []\n  });\n\n  reflector.registerType(LifeCycle, {\n    \"factory\": (exHandler, cd) => new LifeCycle(exHandler, cd),\n    \"parameters\": [[ExceptionHandler, ChangeDetector]],\n    \"annotations\": []\n  });\n\n\n  reflector.registerGetters({\n    'value': (a) => a.value,\n    'left': (a) => a.left,\n    'right': (a) => a.right,\n    'initData': (a) => a.initData,\n    'data': (a) => a.data,\n    'condition': (a) => a.condition,\n  });\n\n  reflector.registerSetters({\n    'value': (a,v) => a.value = v,\n    'left': (a,v) => a.left = v,\n    'right': (a,v) => a.right = v,\n    'initData': (a,v) => a.initData = v,\n    'data': (a,v) => a.data = v,\n    'condition': (a,v) => a.condition = v,\n  });\n}\n\nexport function main() {\n var maxDepth = getIntParameter('depth');\n\n setupReflector();\n\n  var app;\n  var lifeCycle;\n  var baselineRootTreeComponent;\n  var count = 0;\n\n  function ng2DestroyDom() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    app.initData = new TreeNode('', null, null);\n    lifeCycle.tick();\n  }\n\n  function profile(create, destroy, name) {\n    return function() {\n      window.console.profile(name + ' w GC');\n      var duration = 0;\n      var count = 0;\n      while(count++ < 150) {\n        gc();\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n\n      window.console.profile(name + ' w/o GC');\n      duration = 0;\n      count = 0;\n      while(count++ < 150) {\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w/o GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n    };\n  }\n\n  function ng2CreateDom() {\n    var values = count++ % 2 == 0 ?\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*'] :\n      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '-'];\n\n    app.initData = buildTree(maxDepth, values, 0);\n    lifeCycle.tick();\n  }\n\n  function noop() {}\n\n  function initNg2() {\n    bootstrap(AppComponent).then((injector) => {\n      lifeCycle = injector.get(LifeCycle);\n\n      app = injector.get(AppComponent);\n      bindAction('#ng2DestroyDom', ng2DestroyDom);\n      bindAction('#ng2CreateDom', ng2CreateDom);\n      bindAction('#ng2UpdateDomProfile', profile(ng2CreateDom, noop, 'ng2-update'));\n      bindAction('#ng2CreateDomProfile', profile(ng2CreateDom, ng2DestroyDom, 'ng2-create'));\n    });\n  }\n\n  function baselineDestroyDom() {\n    baselineRootTreeComponent.update(new TreeNode('', null, null));\n  }\n\n  function baselineCreateDom() {\n    var values = count++ % 2 == 0 ?\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*'] :\n      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '-'];\n\n    baselineRootTreeComponent.update(buildTree(maxDepth, values, 0));\n  }\n\n  function initBaseline() {\n    var tree = DOM.createElement('tree');\n    DOM.appendChild(DOM.querySelector(document, 'baseline'), tree);\n    baselineRootTreeComponent = new BaseLineTreeComponent(tree);\n\n    bindAction('#baselineDestroyDom', baselineDestroyDom);\n    bindAction('#baselineCreateDom', baselineCreateDom);\n\n    bindAction('#baselineUpdateDomProfile', profile(baselineCreateDom, noop, 'baseline-update'));\n    bindAction('#baselineCreateDomProfile', profile(baselineCreateDom, baselineDestroyDom, 'baseline-create'));\n  }\n\n  initNg2();\n  initBaseline();\n}\n\nclass TreeNode {\n  value:string;\n  left:TreeNode;\n  right:TreeNode;\n  constructor(value, left, right) {\n    this.value = value;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction buildTree(maxDepth, values, curDepth) {\n  if (maxDepth === curDepth) return new TreeNode('', null, null);\n  return new TreeNode(\n      values[curDepth],\n      buildTree(maxDepth, values, curDepth+1),\n      buildTree(maxDepth, values, curDepth+1));\n}\n\nvar BASELINE_TREE_TEMPLATE = DOM.createTemplate(\n    '<span>_<template class=\"ng-binding\"></template><template class=\"ng-binding\"></template></span>');\nvar BASELINE_IF_TEMPLATE = DOM.createTemplate(\n    '<span template=\"if\"><tree></tree></span>');\n// http://jsperf.com/nextsibling-vs-childnodes\n\nclass BaseLineTreeComponent {\n  element:Element;\n  value:BaseLineInterpolation;\n  left:BaseLineIf;\n  right:BaseLineIf;\n  constructor(element) {\n    this.element = element;\n    var clone = DOM.clone(BASELINE_TREE_TEMPLATE.content.firstChild);\n    var shadowRoot = this.element.createShadowRoot();\n    DOM.appendChild(shadowRoot, clone);\n\n    var child = clone.firstChild;\n    this.value = new BaseLineInterpolation(child);\n    child = DOM.nextSibling(child);\n    this.left = new BaseLineIf(child);\n    child = DOM.nextSibling(child);\n    this.right = new BaseLineIf(child);\n  }\n  update(value:TreeNode) {\n    this.value.update(value.value);\n    this.left.update(value.left);\n    this.right.update(value.right);\n  }\n}\n\nclass BaseLineInterpolation {\n  value:string;\n  textNode;\n  constructor(textNode) {\n    this.value = null;\n    this.textNode = textNode;\n  }\n  update(value:string) {\n    if (this.value !== value) {\n      this.value = value;\n      DOM.setText(this.textNode, value + ' ');\n    }\n  }\n}\n\nclass BaseLineIf {\n  condition:boolean;\n  component:BaseLineTreeComponent;\n  anchor:Element;\n  constructor(anchor) {\n    this.anchor = anchor;\n    this.condition = false;\n    this.component = null;\n  }\n  update(value:TreeNode) {\n    var newCondition = isPresent(value);\n    if (this.condition !== newCondition) {\n      this.condition = newCondition;\n      if (isPresent(this.component)) {\n        this.component.element.remove();\n        this.component = null;\n      }\n      if (this.condition) {\n        var element = DOM.firstChild(DOM.clone(BASELINE_IF_TEMPLATE).content);\n        this.anchor.parentNode.insertBefore(element, DOM.nextSibling(this.anchor));\n        this.component = new BaseLineTreeComponent(DOM.firstChild(element));\n      }\n    }\n    if (isPresent(this.component)) {\n      this.component.update(value);\n    }\n  }\n}\n\nclass AppComponent {\n  initData:TreeNode;\n  constructor() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    this.initData = new TreeNode('', null, null);\n  }\n}\n\nclass TreeComponent {\n  data:TreeNode;\n}\n\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}