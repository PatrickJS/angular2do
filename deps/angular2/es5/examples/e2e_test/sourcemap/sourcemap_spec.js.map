{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","examples/e2e_test/sourcemap/sourcemap_spec.es6","examples/e2e_test/sourcemap/sourcemap_spec.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,IAAoB,UAAS,SAAQ;;;;ACApD,OAAO;AACD,UAAM,IAAmB;AACzB,UAAM;SCFH,CAAA,OAAM,AAAE,CAAA,IAAG,CAAC;gBACL,CAAA,OAAM,AAAE,CAAA,YAAW,CAAC;AAEpC,aAAO,AAAE,CAAA,YAAW,CAAG,UAAU,AAAE,CAAA;AAC7B,UAAA,CAAA,GAAE,EAAI,oCAAkC,CAAC;AAE7C,SAAE,AAAC,CAAA,oBAAmB,CAAG,UAAQ,AAAG,CAAA;AAClC,gBAAM,IAAI,AAAE,CAAA,GAAE,CAAC,CAAC;AAGhB,gBAAM,cAAe,AAAC,CAAA,KAAI,CAAC,CAAC;AAC5B,gBAAM,OAAO,AAAC,EAAC,KAAK,AAAC,EAAC,IAAK,AAAC,CAAA,SAAQ,CAAC,KAAM,AAAC,CAAA,SAAS,IAAG,CAAG;AACrD,cAAA,CAAA,SAAQ,EAAI,KAAG,CAAC;AAChB,cAAA,CAAA,WAAU,EAAI,KAAG,CAAC;AACtB,eAAG,QAAS,AAAC,CAAA,SAAS,GAAE,CAAG;AACrB,gBAAA,CAAA,KAAI,EAAI,CAAA,+BAA8B,KAAM,AAAC,CAAA,GAAE,QAAQ,CAAC,CAAC;AAC7D,iBAAI,KAAI,CAAG;AACT,wBAAQ,EAAI,CAAA,QAAO,AAAE,CAAA,KAAI,CAAE,CAAA,CAAC,CAAC,CAAC;AAC9B,0BAAU,EAAI,CAAA,QAAQ,AAAC,CAAA,KAAI,CAAE,CAAA,CAAC,CAAC,CAAC;cAClC;AAAA,YACF,CAAC,CAAC;AAEF,iBAAK,AAAE,CAAA,SAAQ,CAAC,IAAI,SAAS,AAAC,EAAC,CAAC;AAChC,iBAAK,AAAE,CAAA,WAAU,CAAC,IAAI,SAAS,AAAC,EAAC,CAAC;AAE9B,cAAA,CAAA,aAAY,EAAI,CAAA,EAAC,aAAa,AAC9B,CAAA,sDAAqD,CAAC,CAAC;AACvD,cAAA,CAAA,OAAM,EAAI,IAAI,CAAA,SAAQ,kBAAkB,AAAE,CAAA,IAAG,MAAO,AAAC,CAAA,aAAY,CAAC,CAAC,CAAC;AAEpE,cAAA,CAAA,gBAAe,EAAI,CAAA,OAAM,oBAAoB,AAAE,CAAA;AACjD,iBAAG,CAAG,UAAQ;AACd,mBAAK,CAAG,YAAU;AAAA,YACpB,CAAC,CAAC;AAEE,cAAA,CAAA,eAAc,EAAI,CAAA,EAAC,aAAa,AAAE,CAAA,yCAAwC,CACzE,EAAA,QAAO,CAAG,QAAM,CAAC,CAAC,MAAO,AAAC,CAAA,IAAG,CAAC,CAAC;AACpC,iBAAM,AAAC,CAAA,eAAc,CAAE,gBAAe,KAAK,EAAI,EAAA,CAAC,CAAC,QACrC,AAAC,CAAA,+CAA8C,CAAC,CAAC;UAC/D,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IDtC6B;EAC3B,CAAA;ADDI,CAAC,CAAC;AG+B8B","file":"examples/e2e_test/sourcemap/sourcemap_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","var fs = require('fs');\nvar sourceMap = require('source-map');\n\ndescribe('sourcemaps', function () {\n  var URL = 'examples/src/sourcemap/index.html';\n\n  it('should map sources', function() {\n    browser.get(URL);\n    // TODO(tbosch): Bug in ChromeDriver: Need to execute at least one command\n    // so that the browser logs can be read out!\n    browser.executeScript('1+1');\n    browser.manage().logs().get('browser').then(function(logs) {\n      var errorLine = null;\n      var errorColumn = null;\n      logs.forEach(function(log) {\n        var match = /Test\\.run\\s+\\(.+:(\\d+):(\\d+)/m.exec(log.message);\n        if (match) {\n          errorLine = parseInt(match[1]);\n          errorColumn = parseInt(match[2]);\n        }\n      });\n\n      expect(errorLine).not.toBeNull();\n      expect(errorColumn).not.toBeNull();\n\n      var sourceMapData = fs.readFileSync(\n          'dist/js/prod/es5/examples/src/sourcemap/index.js.map');\n      var decoder = new sourceMap.SourceMapConsumer(JSON.parse(sourceMapData));\n\n      var originalPosition = decoder.originalPositionFor({\n        line: errorLine,\n        column: errorColumn\n      });\n\n      var sourceCodeLines = fs.readFileSync('modules/examples/src/sourcemap/index.js',\n          {encoding: 'UTF-8'}).split('\\n');\n      expect(sourceCodeLines[originalPosition.line - 1])\n          .toMatch(/throw new BaseException\\(\\'Sourcemap test\\'\\)/);\n    });\n  });\n});\n","var fs = require('fs');\nvar sourceMap = require('source-map');\ndescribe('sourcemaps', function() {\n  var URL = 'examples/src/sourcemap/index.html';\n  it('should map sources', function() {\n    browser.get(URL);\n    browser.executeScript('1+1');\n    browser.manage().logs().get('browser').then(function(logs) {\n      var errorLine = null;\n      var errorColumn = null;\n      logs.forEach(function(log) {\n        var match = /Test\\.run\\s+\\(.+:(\\d+):(\\d+)/m.exec(log.message);\n        if (match) {\n          errorLine = parseInt(match[1]);\n          errorColumn = parseInt(match[2]);\n        }\n      });\n      expect(errorLine).not.toBeNull();\n      expect(errorColumn).not.toBeNull();\n      var sourceMapData = fs.readFileSync('dist/js/prod/es5/examples/src/sourcemap/index.js.map');\n      var decoder = new sourceMap.SourceMapConsumer(JSON.parse(sourceMapData));\n      var originalPosition = decoder.originalPositionFor({\n        line: errorLine,\n        column: errorColumn\n      });\n      var sourceCodeLines = fs.readFileSync('modules/examples/src/sourcemap/index.js', {encoding: 'UTF-8'}).split('\\n');\n      expect(sourceCodeLines[originalPosition.line - 1]).toMatch(/throw new BaseException\\(\\'Sourcemap test\\'\\)/);\n    });\n  });\n});\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/examples/e2e_test/sourcemap/sourcemap_spec.map\n\n//# sourceMappingURL=./sourcemap_spec.map"]}