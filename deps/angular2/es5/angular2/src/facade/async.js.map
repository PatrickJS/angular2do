{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/24","angular2/src/facade/async.es6","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/facade/@traceur/generated/TemplateParser/9","angular2/src/facade/@traceur/generated/TemplateParser/8","angular2/src/facade/@traceur/generated/TemplateParser/7","angular2/src/facade/@traceur/generated/TemplateParser/10","angular2/src/facade/async.js"],"names":[],"mappings":"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","file":"angular2/src/facade/async.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__export($__placeholder__0, $__placeholder__1)","import {int, global} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\n\nexport var Promise = global.Promise;\n\nexport class PromiseWrapper {\n  static resolve(obj):Promise {\n    return Promise.resolve(obj);\n  }\n\n  static reject(obj):Promise {\n    return Promise.reject(obj);\n  }\n\n  static all(promises:List):Promise {\n    if (promises.length == 0) return Promise.resolve([]);\n    return Promise.all(promises);\n  }\n\n  static then(promise:Promise, success:Function, rejection:Function):Promise {\n    return promise.then(success, rejection);\n  }\n\n  static completer() {\n    var resolve;\n    var reject;\n\n    var p = new Promise(function(res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n\n    return {\n      promise: p,\n      complete: resolve,\n      reject: reject\n    };\n  }\n\n  static setTimeout(fn:Function, millis:int) {\n    global.setTimeout(fn, millis);\n  }\n\n  static isPromise(maybePromise):boolean {\n    return maybePromise instanceof Promise;\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","import {assert} from \"rtts_assert/rtts_assert\";\nimport {int,\n  global} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\nexport var Promise = global.Promise;\nexport class PromiseWrapper {\n  static resolve(obj) {\n    return assert.returnType((Promise.resolve(obj)), Promise);\n  }\n  static reject(obj) {\n    return assert.returnType((Promise.reject(obj)), Promise);\n  }\n  static all(promises) {\n    assert.argumentTypes(promises, List);\n    if (promises.length == 0)\n      return assert.returnType((Promise.resolve([])), Promise);\n    return assert.returnType((Promise.all(promises)), Promise);\n  }\n  static then(promise, success, rejection) {\n    assert.argumentTypes(promise, Promise, success, Function, rejection, Function);\n    return assert.returnType((promise.then(success, rejection)), Promise);\n  }\n  static completer() {\n    var resolve;\n    var reject;\n    var p = new Promise(function(res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n    return {\n      promise: p,\n      complete: resolve,\n      reject: reject\n    };\n  }\n  static setTimeout(fn, millis) {\n    assert.argumentTypes(fn, Function, millis, int);\n    global.setTimeout(fn, millis);\n  }\n  static isPromise(maybePromise) {\n    return assert.returnType((maybePromise instanceof Promise), assert.type.boolean);\n  }\n}\nObject.defineProperty(PromiseWrapper.all, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nObject.defineProperty(PromiseWrapper.then, \"parameters\", {get: function() {\n    return [[Promise], [Function], [Function]];\n  }});\nObject.defineProperty(PromiseWrapper.setTimeout, \"parameters\", {get: function() {\n    return [[Function], [int]];\n  }});\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/angular2/src/facade/async.map\n\n//# sourceMappingURL=./async.map"]}