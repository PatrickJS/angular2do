{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/24","angular2/src/facade/dom.es6","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/facade/@traceur/generated/TemplateParser/8","angular2/src/facade/@traceur/generated/TemplateParser/3888","angular2/src/facade/@traceur/generated/TemplateParser/7","angular2/src/facade/@traceur/generated/TemplateParser/9","angular2/src/facade/@traceur/generated/TemplateParser/3889","angular2/src/facade/@traceur/generated/TemplateParser/3918","angular2/src/facade/@traceur/generated/TemplateParser/3922","angular2/src/facade/@traceur/generated/TemplateParser/3923","angular2/src/facade/@traceur/generated/TemplateParser/3924","angular2/src/facade/@traceur/generated/TemplateParser/3925","angular2/src/facade/@traceur/generated/TemplateParser/10","angular2/src/facade/dom.js"],"names":[],"mappings":"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","file":"angular2/src/facade/dom.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__export($__placeholder__0, $__placeholder__1)","import {List, MapWrapper, ListWrapper} from 'angular2/src/facade/collection';\n\nexport var window = frames.window;\nexport var DocumentFragment = window.DocumentFragment;\nexport var Node = window.Node;\nexport var NodeList = window.NodeList;\nexport var Text = window.Text;\nexport var Element = window.HTMLElement;\nexport var TemplateElement = window.HTMLTemplateElement;\nexport var StyleElement = window.HTMLStyleElement;\nexport var document = window.document;\nexport var location = window.location;\nexport var gc = window.gc ? () => window.gc() : () => null;\nexport var CssRule = window.CSSRule;\nexport var CssKeyframesRule = window.CSSKeyframesRule;\n\nexport class DOM {\n  static query(selector) {\n    return document.querySelector(selector);\n  }\n  static querySelector(el, selector:string):Node {\n    return el.querySelector(selector);\n  }\n  static querySelectorAll(el, selector:string):NodeList {\n    return el.querySelectorAll(selector);\n  }\n  static on(el, evt, listener) {\n    el.addEventListener(evt, listener, false);\n  }\n  static dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  static createMouseEvent(eventType) {\n    var evt = new MouseEvent(eventType);\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  static createEvent(eventType) {\n    return new Event(eventType, true);\n  }\n  static getInnerHTML(el) {\n    return el.innerHTML;\n  }\n  static getOuterHTML(el) {\n    return el.outerHTML;\n  }\n  static nodeName(node:Node):string {\n    return node.nodeName;\n  }\n  static nodeValue(node:Node):string {\n    return node.nodeValue;\n  }\n  static type(node:Element):string {\n    return node.type;\n  }\n  static content(node:TemplateElement):Node {\n    return node.content;\n  }\n  static firstChild(el):Node {\n    return el.firstChild;\n  }\n  static nextSibling(el):Node {\n    return el.nextSibling;\n  }\n  static parentElement(el) {\n    return el.parentElement;\n  }\n  static childNodes(el):NodeList {\n    return el.childNodes;\n  }\n  static childNodesAsList(el):List {\n    var childNodes = el.childNodes;\n    var res = ListWrapper.createFixedSize(childNodes.length);\n    for (var i=0; i<childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n  static clearNodes(el) {\n    el.innerHTML = \"\";\n  }\n  static appendChild(el, node) {\n    el.appendChild(node);\n  }\n  static removeChild(el, node) {\n    el.removeChild(node);\n  }\n  static remove(el: Element): Element {\n    var parent = el.parentNode;\n    parent.removeChild(el);\n    return el;\n  }\n  static insertBefore(el, node) {\n    el.parentNode.insertBefore(node, el);\n  }\n  static insertAllBefore(el, nodes) {\n    ListWrapper.forEach(nodes, (n) => {\n      el.parentNode.insertBefore(n, el);\n    });\n  }\n  static insertAfter(el, node) {\n    el.parentNode.insertBefore(node, el.nextSibling);\n  }\n  static setInnerHTML(el, value) {\n    el.innerHTML = value;\n  }\n  static getText(el: Element) {\n    return el.textContent;\n  }\n  // TODO(vicb): removed Element type because it does not support StyleElement\n  static setText(el, value:string) {\n    el.textContent = value;\n  }\n  static getValue(el: Element) {\n    return el.value;\n  }\n  static setValue(el: Element, value:string) {\n    el.value = value;\n  }\n  static getChecked(el: Element) {\n    return el.checked;\n  }\n  static setChecked(el: Element, value:boolean) {\n    el.checked = value;\n  }\n  static createTemplate(html) {\n    var t = document.createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n  static createElement(tagName, doc=document) {\n    return doc.createElement(tagName);\n  }\n  static createTextNode(text: string, doc=document) {\n    return doc.createTextNode(text);\n  }\n  static createScriptTag(attrName:string, attrValue:string, doc=document) {\n    var el = doc.createElement(\"SCRIPT\");\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n  static createStyleElement(css:string, doc=document):StyleElement {\n    var style = doc.createElement('STYLE');\n    style.innerText = css;\n    return style;\n  }\n  static clone(node:Node) {\n    return node.cloneNode(true);\n  }\n  static hasProperty(element:Element, name:string) {\n    return name in element;\n  }\n  static getElementsByClassName(element:Element, name:string) {\n    return element.getElementsByClassName(name);\n  }\n  static getElementsByTagName(element:Element, name:string) {\n    return element.getElementsByTagName(name);\n  }\n  static classList(element:Element):List {\n    return Array.prototype.slice.call(element.classList, 0);\n  }\n  static addClass(element:Element, classname:string) {\n    element.classList.add(classname);\n  }\n  static removeClass(element:Element, classname:string) {\n    element.classList.remove(classname);\n  }\n  static hasClass(element:Element, classname:string) {\n    return element.classList.contains(classname);\n  }\n  static setStyle(element:Element, stylename:string, stylevalue:string) {\n    element.style[stylename] = stylevalue;\n  }\n  static removeStyle(element:Element, stylename:string) {\n    element.style[stylename] = null;\n  }\n  static getStyle(element:Element, stylename:string) {\n    return element.style[stylename];\n  }\n  static tagName(element:Element):string {\n    return element.tagName;\n  }\n  static attributeMap(element:Element) {\n    var res = MapWrapper.create();\n    var elAttrs = element.attributes;\n    for (var i = 0; i < elAttrs.length; i++) {\n      var attrib = elAttrs[i];\n      MapWrapper.set(res, attrib.name, attrib.value);\n    }\n    return res;\n  }\n  static getAttribute(element:Element, attribute:string) {\n    return element.getAttribute(attribute);\n  }\n  static setAttribute(element:Element, name:string, value:string) {\n    element.setAttribute(name, value);\n  }\n  static removeAttribute(element:Element, attribute:string) {\n    return element.removeAttribute(attribute);\n  }\n  static templateAwareRoot(el:Element):Node {\n    return el instanceof TemplateElement ? el.content : el;\n  }\n  static createHtmlDocument() {\n    return document.implementation.createHTMLDocument();\n  }\n  static defaultDoc() {\n    return document;\n  }\n  static elementMatches(n, selector:string):boolean {\n    return n instanceof Element && n.matches(selector);\n  }\n  static isTemplateElement(el:any):boolean {\n    return el instanceof TemplateElement;\n  }\n  static isTextNode(node:Node):boolean {\n    return node.nodeType === Node.TEXT_NODE;\n  }\n  static isElementNode(node:Node):boolean {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  static importIntoDoc(node:Node) {\n    return document.importNode(node, true);\n  }\n}\n\nexport class CSSRuleWrapper {\n  static isPageRule(rule) {\n    return rule.type === CSSRule.PAGE_RULE;\n  }\n  static isStyleRule(rule) {\n    return rule.type === CSSRule.STYLE_RULE;\n  }\n  static isMediaRule(rule) {\n    return rule.type === CSSRule.MEDIA_RULE;\n  }\n  static isKeyframesRule(rule) {\n    return rule.type === CSSRule.KEYFRAMES_RULE;\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","assert.type.any","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","import {assert} from \"rtts_assert/rtts_assert\";\nimport {List,\n  MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nexport var window = frames.window;\nexport var DocumentFragment = window.DocumentFragment;\nexport var Node = window.Node;\nexport var NodeList = window.NodeList;\nexport var Text = window.Text;\nexport var Element = window.HTMLElement;\nexport var TemplateElement = window.HTMLTemplateElement;\nexport var StyleElement = window.HTMLStyleElement;\nexport var document = window.document;\nexport var location = window.location;\nexport var gc = window.gc ? () => window.gc() : () => null;\nexport var CssRule = window.CSSRule;\nexport var CssKeyframesRule = window.CSSKeyframesRule;\nexport class DOM {\n  static query(selector) {\n    return document.querySelector(selector);\n  }\n  static querySelector(el, selector) {\n    assert.argumentTypes(el, assert.type.any, selector, assert.type.string);\n    return assert.returnType((el.querySelector(selector)), Node);\n  }\n  static querySelectorAll(el, selector) {\n    assert.argumentTypes(el, assert.type.any, selector, assert.type.string);\n    return assert.returnType((el.querySelectorAll(selector)), NodeList);\n  }\n  static on(el, evt, listener) {\n    el.addEventListener(evt, listener, false);\n  }\n  static dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  static createMouseEvent(eventType) {\n    var evt = new MouseEvent(eventType);\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  static createEvent(eventType) {\n    return new Event(eventType, true);\n  }\n  static getInnerHTML(el) {\n    return el.innerHTML;\n  }\n  static getOuterHTML(el) {\n    return el.outerHTML;\n  }\n  static nodeName(node) {\n    assert.argumentTypes(node, Node);\n    return assert.returnType((node.nodeName), assert.type.string);\n  }\n  static nodeValue(node) {\n    assert.argumentTypes(node, Node);\n    return assert.returnType((node.nodeValue), assert.type.string);\n  }\n  static type(node) {\n    assert.argumentTypes(node, Element);\n    return assert.returnType((node.type), assert.type.string);\n  }\n  static content(node) {\n    assert.argumentTypes(node, TemplateElement);\n    return assert.returnType((node.content), Node);\n  }\n  static firstChild(el) {\n    return assert.returnType((el.firstChild), Node);\n  }\n  static nextSibling(el) {\n    return assert.returnType((el.nextSibling), Node);\n  }\n  static parentElement(el) {\n    return el.parentElement;\n  }\n  static childNodes(el) {\n    return assert.returnType((el.childNodes), NodeList);\n  }\n  static childNodesAsList(el) {\n    var childNodes = el.childNodes;\n    var res = ListWrapper.createFixedSize(childNodes.length);\n    for (var i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return assert.returnType((res), List);\n  }\n  static clearNodes(el) {\n    el.innerHTML = \"\";\n  }\n  static appendChild(el, node) {\n    el.appendChild(node);\n  }\n  static removeChild(el, node) {\n    el.removeChild(node);\n  }\n  static remove(el) {\n    assert.argumentTypes(el, Element);\n    var parent = el.parentNode;\n    parent.removeChild(el);\n    return assert.returnType((el), Element);\n  }\n  static insertBefore(el, node) {\n    el.parentNode.insertBefore(node, el);\n  }\n  static insertAllBefore(el, nodes) {\n    ListWrapper.forEach(nodes, (n) => {\n      el.parentNode.insertBefore(n, el);\n    });\n  }\n  static insertAfter(el, node) {\n    el.parentNode.insertBefore(node, el.nextSibling);\n  }\n  static setInnerHTML(el, value) {\n    el.innerHTML = value;\n  }\n  static getText(el) {\n    assert.argumentTypes(el, Element);\n    return el.textContent;\n  }\n  static setText(el, value) {\n    assert.argumentTypes(el, assert.type.any, value, assert.type.string);\n    el.textContent = value;\n  }\n  static getValue(el) {\n    assert.argumentTypes(el, Element);\n    return el.value;\n  }\n  static setValue(el, value) {\n    assert.argumentTypes(el, Element, value, assert.type.string);\n    el.value = value;\n  }\n  static getChecked(el) {\n    assert.argumentTypes(el, Element);\n    return el.checked;\n  }\n  static setChecked(el, value) {\n    assert.argumentTypes(el, Element, value, assert.type.boolean);\n    el.checked = value;\n  }\n  static createTemplate(html) {\n    var t = document.createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n  static createElement(tagName, doc = document) {\n    return doc.createElement(tagName);\n  }\n  static createTextNode(text, doc = document) {\n    assert.argumentTypes(text, assert.type.string, doc, assert.type.any);\n    return doc.createTextNode(text);\n  }\n  static createScriptTag(attrName, attrValue, doc = document) {\n    assert.argumentTypes(attrName, assert.type.string, attrValue, assert.type.string, doc, assert.type.any);\n    var el = doc.createElement(\"SCRIPT\");\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n  static createStyleElement(css, doc = document) {\n    assert.argumentTypes(css, assert.type.string, doc, assert.type.any);\n    var style = doc.createElement('STYLE');\n    style.innerText = css;\n    return assert.returnType((style), StyleElement);\n  }\n  static clone(node) {\n    assert.argumentTypes(node, Node);\n    return node.cloneNode(true);\n  }\n  static hasProperty(element, name) {\n    assert.argumentTypes(element, Element, name, assert.type.string);\n    return name in element;\n  }\n  static getElementsByClassName(element, name) {\n    assert.argumentTypes(element, Element, name, assert.type.string);\n    return element.getElementsByClassName(name);\n  }\n  static getElementsByTagName(element, name) {\n    assert.argumentTypes(element, Element, name, assert.type.string);\n    return element.getElementsByTagName(name);\n  }\n  static classList(element) {\n    assert.argumentTypes(element, Element);\n    return assert.returnType((Array.prototype.slice.call(element.classList, 0)), List);\n  }\n  static addClass(element, classname) {\n    assert.argumentTypes(element, Element, classname, assert.type.string);\n    element.classList.add(classname);\n  }\n  static removeClass(element, classname) {\n    assert.argumentTypes(element, Element, classname, assert.type.string);\n    element.classList.remove(classname);\n  }\n  static hasClass(element, classname) {\n    assert.argumentTypes(element, Element, classname, assert.type.string);\n    return element.classList.contains(classname);\n  }\n  static setStyle(element, stylename, stylevalue) {\n    assert.argumentTypes(element, Element, stylename, assert.type.string, stylevalue, assert.type.string);\n    element.style[stylename] = stylevalue;\n  }\n  static removeStyle(element, stylename) {\n    assert.argumentTypes(element, Element, stylename, assert.type.string);\n    element.style[stylename] = null;\n  }\n  static getStyle(element, stylename) {\n    assert.argumentTypes(element, Element, stylename, assert.type.string);\n    return element.style[stylename];\n  }\n  static tagName(element) {\n    assert.argumentTypes(element, Element);\n    return assert.returnType((element.tagName), assert.type.string);\n  }\n  static attributeMap(element) {\n    assert.argumentTypes(element, Element);\n    var res = MapWrapper.create();\n    var elAttrs = element.attributes;\n    for (var i = 0; i < elAttrs.length; i++) {\n      var attrib = elAttrs[i];\n      MapWrapper.set(res, attrib.name, attrib.value);\n    }\n    return res;\n  }\n  static getAttribute(element, attribute) {\n    assert.argumentTypes(element, Element, attribute, assert.type.string);\n    return element.getAttribute(attribute);\n  }\n  static setAttribute(element, name, value) {\n    assert.argumentTypes(element, Element, name, assert.type.string, value, assert.type.string);\n    element.setAttribute(name, value);\n  }\n  static removeAttribute(element, attribute) {\n    assert.argumentTypes(element, Element, attribute, assert.type.string);\n    return element.removeAttribute(attribute);\n  }\n  static templateAwareRoot(el) {\n    assert.argumentTypes(el, Element);\n    return assert.returnType((el instanceof TemplateElement ? el.content : el), Node);\n  }\n  static createHtmlDocument() {\n    return document.implementation.createHTMLDocument();\n  }\n  static defaultDoc() {\n    return document;\n  }\n  static elementMatches(n, selector) {\n    assert.argumentTypes(n, assert.type.any, selector, assert.type.string);\n    return assert.returnType((n instanceof Element && n.matches(selector)), assert.type.boolean);\n  }\n  static isTemplateElement(el) {\n    assert.argumentTypes(el, assert.type.any);\n    return assert.returnType((el instanceof TemplateElement), assert.type.boolean);\n  }\n  static isTextNode(node) {\n    assert.argumentTypes(node, Node);\n    return assert.returnType((node.nodeType === Node.TEXT_NODE), assert.type.boolean);\n  }\n  static isElementNode(node) {\n    assert.argumentTypes(node, Node);\n    return assert.returnType((node.nodeType === Node.ELEMENT_NODE), assert.type.boolean);\n  }\n  static importIntoDoc(node) {\n    assert.argumentTypes(node, Node);\n    return document.importNode(node, true);\n  }\n}\nObject.defineProperty(DOM.querySelector, \"parameters\", {get: function() {\n    return [[], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.querySelectorAll, \"parameters\", {get: function() {\n    return [[], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.nodeName, \"parameters\", {get: function() {\n    return [[Node]];\n  }});\nObject.defineProperty(DOM.nodeValue, \"parameters\", {get: function() {\n    return [[Node]];\n  }});\nObject.defineProperty(DOM.type, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.content, \"parameters\", {get: function() {\n    return [[TemplateElement]];\n  }});\nObject.defineProperty(DOM.remove, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.getText, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.setText, \"parameters\", {get: function() {\n    return [[], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.getValue, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.setValue, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.getChecked, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.setChecked, \"parameters\", {get: function() {\n    return [[Element], [assert.type.boolean]];\n  }});\nObject.defineProperty(DOM.createTextNode, \"parameters\", {get: function() {\n    return [[assert.type.string], []];\n  }});\nObject.defineProperty(DOM.createScriptTag, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], []];\n  }});\nObject.defineProperty(DOM.createStyleElement, \"parameters\", {get: function() {\n    return [[assert.type.string], []];\n  }});\nObject.defineProperty(DOM.clone, \"parameters\", {get: function() {\n    return [[Node]];\n  }});\nObject.defineProperty(DOM.hasProperty, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.getElementsByClassName, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.getElementsByTagName, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.classList, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.addClass, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.removeClass, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.hasClass, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.setStyle, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.removeStyle, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.getStyle, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.tagName, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.attributeMap, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.getAttribute, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.setAttribute, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.removeAttribute, \"parameters\", {get: function() {\n    return [[Element], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.templateAwareRoot, \"parameters\", {get: function() {\n    return [[Element]];\n  }});\nObject.defineProperty(DOM.elementMatches, \"parameters\", {get: function() {\n    return [[], [assert.type.string]];\n  }});\nObject.defineProperty(DOM.isTemplateElement, \"parameters\", {get: function() {\n    return [[assert.type.any]];\n  }});\nObject.defineProperty(DOM.isTextNode, \"parameters\", {get: function() {\n    return [[Node]];\n  }});\nObject.defineProperty(DOM.isElementNode, \"parameters\", {get: function() {\n    return [[Node]];\n  }});\nObject.defineProperty(DOM.importIntoDoc, \"parameters\", {get: function() {\n    return [[Node]];\n  }});\nexport class CSSRuleWrapper {\n  static isPageRule(rule) {\n    return rule.type === CSSRule.PAGE_RULE;\n  }\n  static isStyleRule(rule) {\n    return rule.type === CSSRule.STYLE_RULE;\n  }\n  static isMediaRule(rule) {\n    return rule.type === CSSRule.MEDIA_RULE;\n  }\n  static isKeyframesRule(rule) {\n    return rule.type === CSSRule.KEYFRAMES_RULE;\n  }\n}\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/angular2/src/facade/dom.map\n\n//# sourceMappingURL=./dom.map"]}