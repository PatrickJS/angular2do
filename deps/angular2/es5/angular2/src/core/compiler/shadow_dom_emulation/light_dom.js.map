{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/core/compiler/shadow_dom_emulation/light_dom.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","@traceur/generated/TemplateParser/29","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/9","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/25","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/shadow_dom_emulation/light_dom.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {Element, Node, DOM} from 'angular2/src/facade/dom';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent} from 'angular2/src/facade/lang';\n\nimport {View} from '../view';\nimport {ElementInjector} from '../element_injector';\nimport {ViewContainer} from '../view_container';\nimport {Content} from './content_tag';\n\nexport class SourceLightDom {}\nexport class DestinationLightDom {}\n\n\nclass _Root {\n  node:Node;\n  injector:ElementInjector;\n\n  constructor(node, injector) {\n    this.node = node;\n    this.injector = injector;\n  }\n}\n\n// TODO: LightDom should implement SourceLightDom and DestinationLightDom\n// once interfaces are supported\nexport class LightDom {\n  // The light DOM of the element is enclosed inside the lightDomView\n  lightDomView:View;\n  // The shadow DOM\n  shadowDomView:View;\n  // The nodes of the light DOM\n  nodes:List<Node>;\n  roots:List<_Root>;\n\n  constructor(lightDomView:View, shadowDomView:View, element:Element) {\n    this.lightDomView = lightDomView;\n    this.shadowDomView = shadowDomView;\n    this.nodes = DOM.childNodesAsList(element);\n    this.roots = null;\n  }\n\n  redistribute() {\n    var tags = this.contentTags();\n    if (tags.length > 0) {\n      redistributeNodes(tags, this.expandedDomNodes());\n    }\n  }\n\n  contentTags(): List<Content> {\n    return this._collectAllContentTags(this.shadowDomView, []);\n  }\n\n  // Collects the Content directives from the view and all its child views\n  _collectAllContentTags(view: View, acc:List<Content>):List<Content> {\n    var eis = view.elementInjectors;\n    for (var i = 0; i < eis.length; ++i) {\n      var ei = eis[i];\n      if (isBlank(ei)) continue;\n\n      if (ei.hasDirective(Content)) {\n        ListWrapper.push(acc, ei.get(Content));\n\n      } else if (ei.hasPreBuiltObject(ViewContainer)) {\n        var vc = ei.get(ViewContainer);\n        ListWrapper.forEach(vc.contentTagContainers(), (view) => {\n          this._collectAllContentTags(view, acc);\n        });\n      }\n    }\n    return acc;\n  }\n\n  // Collects the nodes of the light DOM by merging:\n  // - nodes from enclosed ViewContainers,\n  // - nodes from enclosed content tags,\n  // - plain DOM nodes\n  expandedDomNodes():List {\n    var res = [];\n\n    var roots = this._roots();\n    for (var i = 0; i < roots.length; ++i) {\n\n      var root = roots[i];\n      var ei = root.injector;\n\n      if (isPresent(ei) && ei.hasPreBuiltObject(ViewContainer)) {\n        var vc = root.injector.get(ViewContainer);\n        res = ListWrapper.concat(res, vc.nodes());\n\n      } else if (isPresent(ei) && ei.hasDirective(Content)) {\n        var content = root.injector.get(Content);\n        res = ListWrapper.concat(res, content.nodes());\n\n      } else {\n        ListWrapper.push(res, root.node);\n      }\n    }\n    return res;\n  }\n\n  // Returns a list of Roots for all the nodes of the light DOM.\n  // The Root object contains the DOM node and its corresponding injector (could be null).\n  _roots() {\n    if (isPresent(this.roots)) return this.roots;\n\n    var viewInj = this.lightDomView.elementInjectors;\n    this.roots = ListWrapper.map(this.nodes, (n) =>\n      new _Root(n, ListWrapper.find(viewInj,\n        (inj) => isPresent(inj) ? inj.forElement(n) : false)));\n\n    return this.roots;\n  }\n}\n\n// Projects the light DOM into the shadow DOM\nfunction redistributeNodes(contents:List<Content>, nodes:List<Node>) {\n  for (var i = 0; i < contents.length; ++i) {\n    var content = contents[i];\n    var select = content.select;\n    var matchSelector = (n) => DOM.elementMatches(n, select);\n\n    if (isBlank(select)) {\n      content.insert(nodes);\n      ListWrapper.clear(nodes);\n\n    } else {\n      var matchingNodes = ListWrapper.filter(nodes, matchSelector);\n      content.insert(matchingNodes);\n      ListWrapper.removeAll(nodes, matchingNodes);\n    }\n  }\n}\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","$__placeholder__0 = $__placeholder__1","assert.argumentTypes($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}