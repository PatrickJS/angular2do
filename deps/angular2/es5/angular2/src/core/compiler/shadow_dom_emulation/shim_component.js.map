{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/core/compiler/shadow_dom_emulation/shim_component.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/7","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/9","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/385","angular2/src/core/compiler/shadow_dom_emulation/@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/shadow_dom_emulation/shim_component.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {Element, DOM} from 'angular2/src/facade/dom';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {int, isBlank, Type} from 'angular2/src/facade/lang';\n\nimport {ShadowCss} from './shadow_css';\n\n/**\n * Used to shim component CSS & DOM\n */\nexport class ShimComponent {\n  constructor(component: Type) {\n  }\n\n  shimCssText(cssText: string): string {\n    return null\n  }\n\n  shimContentElement(element: Element) {}\n\n  shimHostElement(element: Element) {}\n}\n\n/**\n * Native components does not need to the shim.\n *\n * All methods are no-ops.\n */\nexport class ShimNativeComponent extends ShimComponent {\n  constructor(component: Type) {\n    super(component);\n  };\n\n  shimCssText(cssText: string): string {\n    return cssText;\n  }\n\n  shimContentElement(element: Element) {\n  }\n\n  shimHostElement(element: Element) {\n  }\n}\n\nvar _componentCache: Map<Type, int> = MapWrapper.create();\nvar _componentId: int = 0;\n\n// Reset the component cache - used for tests only\nexport function resetShimComponentCache() {\n  MapWrapper.clear(_componentCache);\n  _componentId = 0;\n}\n\n/**\n * Emulated components need to be shimmed:\n * - An attribute needs to be added to the host,\n * - An attribute needs to be added to all nodes in their content,\n * - The CSS needs to be scoped.\n */\nexport class ShimEmulatedComponent extends ShimComponent {\n  _cmpId: int;\n\n  constructor(component: Type) {\n    super(component);\n\n    // Generates a unique ID for components\n    var componentId = MapWrapper.get(_componentCache, component);\n    if (isBlank(componentId)) {\n      componentId = _componentId++;\n      MapWrapper.set(_componentCache, component, componentId);\n    }\n    this._cmpId = componentId;\n  };\n\n  // Scope the CSS\n  shimCssText(cssText: string): string {\n    var shadowCss = new ShadowCss();\n    return shadowCss.shimCssText(cssText, this._getContentAttribute(), this._getHostAttribute());\n  }\n\n  // Add an attribute on a content element\n  shimContentElement(element: Element) {\n    DOM.setAttribute(element, this._getContentAttribute(), '');\n  }\n\n  // Add an attribute to the host\n  shimHostElement(element: Element) {\n    DOM.setAttribute(element, this._getHostAttribute(), '');\n  }\n\n  // Return the attribute to be added to the component\n  _getHostAttribute() {\n    return `_nghost-${this._cmpId}`;\n  }\n\n  // Returns the attribute to be added on every single nodes in the component\n  _getContentAttribute() {\n    return `_ngcontent-${this._cmpId}`;\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","assert.type($__placeholder__0, $__placeholder__1)","assert.genericType($__placeholder__0)"]}