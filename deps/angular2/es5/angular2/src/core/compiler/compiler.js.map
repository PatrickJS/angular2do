{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/compiler.js","angular2/src/core/compiler/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/@traceur/generated/TemplateParser/9","angular2/src/core/compiler/@traceur/generated/TemplateParser/10","angular2/src/core/compiler/@traceur/generated/TemplateParser/25","angular2/src/core/compiler/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/compiler.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Type, isBlank, isPresent, BaseException, normalizeBlank, stringify} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM, Element} from 'angular2/src/facade/dom';\n\nimport {ChangeDetection, Parser} from 'angular2/change_detection';\n\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {ProtoView} from './view';\nimport {CompilePipeline} from './pipeline/compile_pipeline';\nimport {CompileElement} from './pipeline/compile_element';\nimport {createDefaultSteps} from './pipeline/default_steps';\nimport {TemplateLoader} from './template_loader';\nimport {TemplateResolver} from './template_resolver';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {Template} from '../annotations/template';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {CompileStep} from './pipeline/compile_step';\n\n\n/**\n * Cache that stores the ProtoView of the template of a component.\n * Used to prevent duplicate work and resolve cyclic dependencies.\n */\nexport class CompilerCache {\n  _cache:Map;\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n\n  set(component:Type, protoView:ProtoView) {\n    MapWrapper.set(this._cache, component, protoView);\n  }\n\n  get(component:Type):ProtoView {\n    var result = MapWrapper.get(this._cache, component);\n    return normalizeBlank(result);\n  }\n\n  clear() {\n    MapWrapper.clear(this._cache);\n  }\n}\n\n/**\n * The compiler loads and translates the html templates of components into\n * nested ProtoViews. To decompose its functionality it uses\n * the CompilePipeline and the CompileSteps.\n */\nexport class Compiler {\n  _reader: DirectiveMetadataReader;\n  _parser:Parser;\n  _compilerCache:CompilerCache;\n  _changeDetection:ChangeDetection;\n  _templateLoader:TemplateLoader;\n  _compiling:Map<Type, Promise>;\n  _shadowDomStrategy: ShadowDomStrategy;\n  _shadowDomDirectives: List<DirectiveMetadata>;\n  _templateResolver: TemplateResolver;\n\n  constructor(changeDetection:ChangeDetection,\n              templateLoader:TemplateLoader,\n              reader: DirectiveMetadataReader,\n              parser:Parser,\n              cache:CompilerCache,\n              shadowDomStrategy: ShadowDomStrategy,\n              templateResolver: TemplateResolver) {\n    this._changeDetection = changeDetection;\n    this._reader = reader;\n    this._parser = parser;\n    this._compilerCache = cache;\n    this._templateLoader = templateLoader;\n    this._compiling = MapWrapper.create();\n    this._shadowDomStrategy = shadowDomStrategy;\n    this._shadowDomDirectives = [];\n    var types = shadowDomStrategy.polyfillDirectives();\n    for (var i = 0; i < types.length; i++) {\n      ListWrapper.push(this._shadowDomDirectives, reader.read(types[i]));\n    }\n    this._templateResolver = templateResolver;\n  }\n\n  createSteps(component:Type, template: Template):List<CompileStep> {\n    // Merge directive metadata (from the template and from the shadow dom strategy)\n    var dirMetadata = [];\n    var tplMetadata = ListWrapper.map(this._flattenDirectives(template),\n      (d) => this._reader.read(d));\n    dirMetadata = ListWrapper.concat(dirMetadata, tplMetadata);\n    dirMetadata = ListWrapper.concat(dirMetadata, this._shadowDomDirectives);\n\n    var cmpMetadata = this._reader.read(component);\n\n    return createDefaultSteps(this._changeDetection, this._parser, cmpMetadata, dirMetadata,\n      this._shadowDomStrategy);\n  }\n\n  compile(component: Type):Promise<ProtoView> {\n    var protoView = this._compile(component);\n    return PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compile(component: Type) {\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      // The component has already been compiled into a ProtoView,\n      // returns a resolved Promise.\n      return protoView;\n    }\n\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      // The component is already being compiled, attach to the existing Promise\n      // instead of re-compiling the component.\n      // It happens when a template references a component multiple times.\n      return pvPromise;\n    }\n\n    var template = this._templateResolver.resolve(component);\n\n    var tplElement = this._templateLoader.load(template);\n\n    if (PromiseWrapper.isPromise(tplElement)) {\n      pvPromise = PromiseWrapper.then(tplElement,\n        (el) => this._compileTemplate(template, el, component),\n        (_) => { throw new BaseException(`Failed to load the template for ${stringify(component)}`); }\n      );\n      MapWrapper.set(this._compiling, component, pvPromise);\n      return pvPromise;\n    }\n\n    return this._compileTemplate(template, tplElement, component);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compileTemplate(template: Template, tplElement: Element, component: Type) {\n    var pipeline = new CompilePipeline(this.createSteps(component, template));\n    var compilationCtxtDescription = stringify(this._reader.read(component).type);\n    var compileElements;\n\n    try {\n      compileElements = pipeline.process(tplElement, compilationCtxtDescription);\n    } catch(ex) {\n      return PromiseWrapper.reject(ex);\n    }\n\n    var protoView = compileElements[0].inheritedProtoView;\n\n    // Populate the cache before compiling the nested components,\n    // so that components can reference themselves in their template.\n    this._compilerCache.set(component, protoView);\n    MapWrapper.delete(this._compiling, component);\n\n    // Compile all the components from the template\n    var nestedPVPromises = [];\n    for (var i = 0; i < compileElements.length; i++) {\n      var ce = compileElements[i];\n      if (isPresent(ce.componentDirective)) {\n        this._compileNestedProtoView(ce, nestedPVPromises);\n      }\n    }\n\n    if (nestedPVPromises.length > 0) {\n      // Returns ProtoView Promise when there are any asynchronous nested ProtoViews.\n      // The promise will resolved after nested ProtoViews are compiled.\n      return PromiseWrapper.then(PromiseWrapper.all(nestedPVPromises),\n        (_) => protoView,\n        (e) => { throw new BaseException(`${e.message} -> Failed to compile ${stringify(component)}`); }\n      );\n    }\n\n    // When there is no asynchronous nested ProtoViews, return the ProtoView\n    return protoView;\n  }\n\n  _compileNestedProtoView(ce: CompileElement, promises: List<Promise>) {\n    var protoView = this._compile(ce.componentDirective.type);\n\n    if (PromiseWrapper.isPromise(protoView)) {\n      ListWrapper.push(promises, protoView);\n      protoView.then(function (protoView) {\n        ce.inheritedElementBinder.nestedProtoView = protoView;\n      });\n    } else {\n      ce.inheritedElementBinder.nestedProtoView = protoView;\n    }\n  }\n\n  _flattenDirectives(template: Template):List<Type> {\n    if (isBlank(template.directives)) return [];\n\n    var directives = [];\n    this._flattenList(template.directives, directives);\n\n    return directives;\n  }\n\n  _flattenList(tree:List<any>, out:List<Type>) {\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n\n}\n\n\n","assert.argumentTypes($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)"]}