{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/test_lib/test_lib.es6","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/24","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/test_lib/test_lib.js"],"names":[],"mappings":"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","file":"angular2/src/test_lib/test_lib.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {DOM} from 'angular2/src/facade/dom';\n\nexport {proxy} from 'rtts_assert/rtts_assert';\nexport var describe = window.describe;\nexport var xdescribe = window.xdescribe;\nexport var ddescribe = window.ddescribe;\nexport var it = window.it;\nexport var xit = window.xit;\nexport var iit = window.iit;\nexport var beforeEach = window.beforeEach;\nexport var afterEach = window.afterEach;\nexport var expect = window.expect;\nexport var IS_DARTIUM = false;\n\n// To make testing consistent between dart and js\nwindow.print = function(msg) {\n  if (window.dump) {\n    window.dump(msg);\n  } else {\n    window.console.log(msg);\n  }\n};\n\n// Some Map polyfills don't polyfill Map.toString correctly, which\n// gives us bad error messages in tests.\n// The only way to do this in Jasmine is to monkey patch a method\n// to the object :-(\nwindow.Map.prototype.jasmineToString = function() {\n  var m = this;\n  if (!m) {\n    return ''+m;\n  }\n  var res = [];\n  m.forEach( (v,k) => {\n    res.push(`${k}:${v}`);\n  });\n  return `{ ${res.join(',')} }`;\n}\n\nwindow.beforeEach(function() {\n  jasmine.addMatchers({\n    // Custom handler for Map as Jasmine does not support it yet\n    toEqual: function(util, customEqualityTesters) {\n      return {\n        compare: function(actual, expected) {\n          return {\n            pass: util.equals(actual, expected, [compareMap])\n          };\n        }\n      };\n\n      function compareMap(actual, expected) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach( (v,k) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n\n    toBePromise: function() {\n      return {\n        compare: function (actual, expectedClass) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be a promise';\n            }\n          };\n        }\n      };\n    },\n\n    toBeAnInstanceOf: function() {\n      return {\n        compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }\n      };\n    },\n\n    toHaveText: function() {\n      return {\n        compare: function(actual, expectedText) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() {\n              return 'Expected ' + actualText + ' to be equal to ' + expectedText;\n            }\n          };\n        }\n      };\n    },\n\n    toImplement: function() {\n      return {\n        compare: function(actualObject, expectedInterface) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n\n          var missedMethods = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k]) missedMethods.push(k);\n          });\n\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' + missedMethods.join(\", \");\n            }\n          };\n        }\n      };\n    }\n  });\n});\n\nexport class SpyObject {\n  spy(name){\n    if (! this[name]) {\n      this[name] = this._createGuinnessCompatibleSpy();\n    }\n    return this[name];\n  }\n\n  rttsAssert(value) {\n    return true;\n  }\n\n  _createGuinnessCompatibleSpy(){\n    var newSpy = jasmine.createSpy();\n    newSpy.andCallFake = newSpy.and.callFake;\n    return newSpy;\n  }\n}\n\n\nfunction elementText(n) {\n  var hasShadowRoot = (n) => n instanceof Element && n.shadowRoot;\n  var hasNodes = (n) => {var children = DOM.childNodes(n); return children && children.length > 0;}\n\n  if (n instanceof Comment)         return '';\n\n  if (n instanceof Array)           return n.map((nn) => elementText(nn)).join(\"\");\n  if (n instanceof Element && DOM.tagName(n) == 'CONTENT')\n    return elementText(Array.prototype.slice.apply(n.getDistributedNodes()));\n  if (hasShadowRoot(n))             return elementText(DOM.childNodesAsList(n.shadowRoot));\n  if (hasNodes(n))                  return elementText(DOM.childNodesAsList(n));\n\n  return n.textContent;\n}","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__export($__placeholder__0, $__m.$__placeholder__1);","$__export($__placeholder__0, $__placeholder__1)","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {DOM} from 'angular2/src/facade/dom';\nexport {proxy} from 'rtts_assert/rtts_assert';\nexport var describe = window.describe;\nexport var xdescribe = window.xdescribe;\nexport var ddescribe = window.ddescribe;\nexport var it = window.it;\nexport var xit = window.xit;\nexport var iit = window.iit;\nexport var beforeEach = window.beforeEach;\nexport var afterEach = window.afterEach;\nexport var expect = window.expect;\nexport var IS_DARTIUM = false;\nwindow.print = function(msg) {\n  if (window.dump) {\n    window.dump(msg);\n  } else {\n    window.console.log(msg);\n  }\n};\nwindow.Map.prototype.jasmineToString = function() {\n  var m = this;\n  if (!m) {\n    return '' + m;\n  }\n  var res = [];\n  m.forEach((v, k) => {\n    res.push(`${k}:${v}`);\n  });\n  return `{ ${res.join(',')} }`;\n};\nwindow.beforeEach(function() {\n  jasmine.addMatchers({\n    toEqual: function(util, customEqualityTesters) {\n      return {compare: function(actual, expected) {\n          return {pass: util.equals(actual, expected, [compareMap])};\n        }};\n      function compareMap(actual, expected) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach((v, k) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n    toBePromise: function() {\n      return {compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be a promise';\n            }\n          };\n        }};\n    },\n    toBeAnInstanceOf: function() {\n      return {compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }};\n    },\n    toHaveText: function() {\n      return {compare: function(actual, expectedText) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() {\n              return 'Expected ' + actualText + ' to be equal to ' + expectedText;\n            }\n          };\n        }};\n    },\n    toImplement: function() {\n      return {compare: function(actualObject, expectedInterface) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n          var missedMethods = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k])\n              missedMethods.push(k);\n          });\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' + missedMethods.join(\", \");\n            }\n          };\n        }};\n    }\n  });\n});\nexport class SpyObject {\n  spy(name) {\n    if (!this[name]) {\n      this[name] = this._createGuinnessCompatibleSpy();\n    }\n    return this[name];\n  }\n  rttsAssert(value) {\n    return true;\n  }\n  _createGuinnessCompatibleSpy() {\n    var newSpy = jasmine.createSpy();\n    newSpy.andCallFake = newSpy.and.callFake;\n    return newSpy;\n  }\n}\nfunction elementText(n) {\n  var hasShadowRoot = (n) => n instanceof Element && n.shadowRoot;\n  var hasNodes = (n) => {\n    var children = DOM.childNodes(n);\n    return children && children.length > 0;\n  };\n  if (n instanceof Comment)\n    return '';\n  if (n instanceof Array)\n    return n.map((nn) => elementText(nn)).join(\"\");\n  if (n instanceof Element && DOM.tagName(n) == 'CONTENT')\n    return elementText(Array.prototype.slice.apply(n.getDistributedNodes()));\n  if (hasShadowRoot(n))\n    return elementText(DOM.childNodesAsList(n.shadowRoot));\n  if (hasNodes(n))\n    return elementText(DOM.childNodesAsList(n));\n  return n.textContent;\n}\n\n//# sourceMappingURL=/Users/patrick/Documents/open source/angular/modules/angular2/src/test_lib/test_lib.map\n\n//# sourceMappingURL=./test_lib.map"]}