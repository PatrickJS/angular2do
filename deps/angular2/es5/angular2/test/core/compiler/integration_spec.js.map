{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/integration_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","angular2/test/core/compiler/@traceur/generated/TemplateParser/10","angular2/test/core/compiler/@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/integration_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, xit, it, expect, beforeEach, ddescribe, iit, el} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/facade/dom';\nimport {Type, isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {assertionsEnabled, isJsObject} from 'angular2/src/facade/lang';\n\nimport {Injector} from 'angular2/di';\nimport {Lexer, Parser, ChangeDetector, dynamicChangeDetection,\n  DynamicChangeDetection, Pipe, PipeRegistry} from 'angular2/change_detection';\n\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\nimport {BindingPropagationConfig} from 'angular2/src/core/compiler/binding_propagation_config';\n\nimport {Decorator, Component, Viewport} from 'angular2/src/core/annotations/annotations';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {Parent, Ancestor} from 'angular2/src/core/annotations/visibility';\n\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\n\nexport function main() {\n  describe('integration tests', function() {\n    var compiler, tplResolver;\n\n    function createCompiler(tplResolver, changedDetection) {\n      return new Compiler(changedDetection,\n        new TemplateLoader(null),\n        new DirectiveMetadataReader(),\n        new Parser(new Lexer()),\n        new CompilerCache(),\n        new NativeShadowDomStrategy(),\n        tplResolver\n      );\n    }\n\n    beforeEach( () => {\n      tplResolver = new MockTemplateResolver();\n      compiler = createCompiler(tplResolver, dynamicChangeDetection);\n    });\n\n    describe('react to record changes', function() {\n      var view, ctx, cd;\n      function createView(pv) {\n        ctx = new MyComp();\n        view = pv.instantiate(null, null);\n        view.hydrate(new Injector([]), null, ctx);\n        cd = view.changeDetector;\n      }\n\n      it('should consume text node changes', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div>{{ctxProp}}</div>'}));\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          ctx.ctxProp = 'Hello World!';\n\n          cd.detectChanges();\n          expect(DOM.getInnerHTML(view.nodes[0])).toEqual('Hello World!');\n          done();\n        });\n      });\n\n      it('should consume element binding changes', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [id]=\"ctxProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          expect(view.nodes[0].id).toEqual('Hello World!');\n          done();\n        });\n      });\n\n      it('should consume binding to aria-* attributes', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({inline: '<div [aria-label]=\"ctxProp\"></div>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Initial aria label';\n          cd.detectChanges();\n          expect(DOM.getAttribute(view.nodes[0], 'aria-label')).toEqual('Initial aria label');\n\n          ctx.ctxProp = 'Changed aria label';\n          cd.detectChanges();\n          expect(DOM.getAttribute(view.nodes[0], 'aria-label')).toEqual('Changed aria label');\n\n          done();\n        });\n      });\n\n      it('should consume directive watch expression change.', (done) => {\n        var tpl =\n          '<div>' +\n            '<div my-dir [elprop]=\"ctxProp\"></div>' +\n            '<div my-dir elprop=\"Hi there!\"></div>' +\n            '<div my-dir elprop=\"Hi {{\\'there!\\'}}\"></div>' +\n            '<div my-dir elprop=\"One more {{ctxProp}}\"></div>' +\n          '</div>'\n        tplResolver.setTemplate(MyComp, new Template({inline: tpl, directives: [MyDir]}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          expect(view.elementInjectors[0].get(MyDir).dirProp).toEqual('Hello World!');\n          expect(view.elementInjectors[1].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.elementInjectors[2].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.elementInjectors[3].get(MyDir).dirProp).toEqual('One more Hello World!');\n          done();\n        });\n      });\n\n      it(\"should support pipes in bindings and bind config\", (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<component-with-pipes #comp [prop]=\"ctxProp | double\"></component-with-pipes>',\n            directives: [ComponentWithPipes]\n          }));\n\n\n        var registry = new PipeRegistry({\n          \"double\" : [new DoublePipeFactory()]\n        });\n        var changeDetection = new DynamicChangeDetection(registry);\n        var compiler = createCompiler(tplResolver, changeDetection);\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'a';\n          cd.detectChanges();\n\n          var comp = view.contextWithLocals.get(\"comp\");\n\n          // it is doubled twice: once in the binding, second time in the bind config\n          expect(comp.prop).toEqual('aaaa');\n          done();\n        });\n      });\n\n      it('should support nested components.', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<child-cmp></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          expect(view.nodes[0].shadowRoot.childNodes[0].nodeValue).toEqual('hello');\n          done();\n        });\n      });\n\n      // GH issue 328 - https://github.com/angular/angular/issues/328\n      it('should support different directive types on a single node', (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<child-cmp my-dir [elprop]=\"ctxProp\"></child-cmp>',\n            directives: [MyDir, ChildComp]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          ctx.ctxProp = 'Hello World!';\n          cd.detectChanges();\n\n          var elInj = view.elementInjectors[0];\n          expect(elInj.get(MyDir).dirProp).toEqual('Hello World!');\n          expect(elInj.get(ChildComp).dirProp).toEqual(null);\n\n          done();\n        });\n      });\n\n      it('should support directives where a binding attribute is not given', function(done) {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            // No attribute \"el-prop\" specified.\n            inline: '<p my-dir></p>',\n            directives: [MyDir]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          done();\n        });\n      });\n\n      it('should support template directives via `<template>` elements.', (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({\n            inline: '<div><template some-viewport var-greeting=\"some-tmpl\"><copy-me>{{greeting}}</copy-me></template></div>',\n            directives: [SomeViewport]\n          }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          var childNodesOfWrapper = view.nodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          done();\n        });\n      });\n\n      it('should support template directives via `template` attribute.', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<div><copy-me template=\"some-viewport: var greeting=some-tmpl\">{{greeting}}</copy-me></div>',\n          directives: [SomeViewport]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          cd.detectChanges();\n\n          var childNodesOfWrapper = view.nodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          done();\n        });\n      });\n\n      it('should assign the component instance to a var-', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<p><child-cmp var-alice></child-cmp></p>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.contextWithLocals).not.toBe(null);\n          expect(view.contextWithLocals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          done();\n        })\n      });\n\n      it('should assign two component instances each with a var-', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<p><child-cmp var-alice></child-cmp><child-cmp var-bob></p>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.contextWithLocals).not.toBe(null);\n          expect(view.contextWithLocals.get('alice')).toBeAnInstanceOf(ChildComp);\n          expect(view.contextWithLocals.get('bob')).toBeAnInstanceOf(ChildComp);\n          expect(view.contextWithLocals.get('alice')).not.toBe(view.contextWithLocals.get('bob'));\n\n          done();\n        })\n      });\n\n      it('should assign the component instance to a var- with shorthand syntax', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<child-cmp #alice></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          expect(view.contextWithLocals).not.toBe(null);\n          expect(view.contextWithLocals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          done();\n        })\n      });\n\n      it('should assign the element instance to a user-defined variable', (done) => {\n        tplResolver.setTemplate(MyComp,\n          new Template({inline: '<p><div var-alice><i>Hello</i></div></p>'}));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n          expect(view.contextWithLocals).not.toBe(null);\n\n          var value = view.contextWithLocals.get('alice');\n          expect(value).not.toBe(null);\n          expect(value.tagName).toEqual('DIV');\n\n          done();\n        })\n      });\n\n      it('should provide binding configuration config to the component', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<push-cmp #cmp></push-cmp>',\n          directives: [[[PushBasedComp]]]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var cmp = view.contextWithLocals.get('cmp');\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(1);\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(1);\n\n          cmp.propagate();\n\n          cd.detectChanges();\n          expect(cmp.numberOfChecks).toEqual(2);\n          done();\n        })\n      });\n\n      it('should create a component that injects a @Parent', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: '<some-directive><cmp-with-parent #child></cmp-with-parent></some-directive>',\n          directives: [SomeDirective, CompWithParent]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var childComponent = view.contextWithLocals.get('child');\n          expect(childComponent.myParent).toBeAnInstanceOf(SomeDirective);\n\n          done();\n        })\n      });\n\n      it('should create a component that injects an @Ancestor', (done) => {\n        tplResolver.setTemplate(MyComp, new Template({\n          inline: `\n            <some-directive>\n              <p>\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor]\n        }));\n\n        compiler.compile(MyComp).then((pv) => {\n          createView(pv);\n\n          var childComponent = view.contextWithLocals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          done();\n        })\n      });\n    });\n\n    // TODO support these tests with DART e.g. with Promise.catch (JS) transpiled to Future.catchError (DART)\n    if (assertionsEnabled() && isJsObject({})) {\n\n      function expectCompileError(inlineTpl, errMessage, done) {\n        tplResolver.setTemplate(MyComp, new Template({inline: inlineTpl}));\n        compiler.compile(MyComp).then(() => {\n          throw new BaseException(\"Test failure: should not have come here as an exception was expected\");\n        },(err) => {\n          expect(err.message).toBe(errMessage);\n          done();\n        });\n      }\n\n      it('should raise an error if no directive is registered for an unsupported DOM property', (done) => {\n        expectCompileError(\n          '<div [some-prop]=\"foo\"></div>',\n          'Missing directive to handle \\'some-prop\\' in MyComp: <div [some-prop]=\"foo\">',\n          done\n        );\n      });\n\n      it('should raise an error if no directive is registered for a template with template bindings', (done) => {\n        expectCompileError(\n          '<div><div template=\"if: foo\"></div></div>',\n          'Missing directive to handle \\'if\\' in <div template=\"if: foo\">',\n          done\n        );\n      });\n\n      it('should raise an error for missing template directive (1)', (done) => {\n        expectCompileError(\n          '<div><template foo></template></div>',\n          'Missing directive to handle: <template foo>',\n          done\n        );\n      });\n\n      it('should raise an error for missing template directive (2)', (done) => {\n        expectCompileError(\n          '<div><template *if=\"condition\"></template></div>',\n          'Missing directive to handle: <template *if=\"condition\">',\n          done\n        );\n      });\n\n      it('should raise an error for missing template directive (3)', (done) => {\n        expectCompileError(\n          '<div *if=\"condition\"></div>',\n          'Missing directive to handle \\'if\\' in MyComp: <div *if=\"condition\">',\n          done\n        );\n      });\n    }\n  });\n}\n\n@Decorator({\n  selector: '[my-dir]',\n  bind: {'dirProp':'elprop'}\n})\nclass MyDir {\n  dirProp:string;\n  constructor() {\n    this.dirProp = '';\n  }\n}\n\n@Component({selector: 'push-cmp'})\n@Template({inline: '{{field}}'})\nclass PushBasedComp {\n  numberOfChecks:number;\n  bpc:BindingPropagationConfig;\n\n  constructor(bpc:BindingPropagationConfig) {\n    this.numberOfChecks = 0;\n    this.bpc = bpc;\n    bpc.shouldBePropagated();\n  }\n\n  get field(){\n    this.numberOfChecks++;\n    return \"fixed\";\n  }\n\n  propagate() {\n    this.bpc.shouldBePropagatedFromRoot();\n  }\n}\n\n@Component()\nclass MyComp {\n  ctxProp:string;\n  constructor() {\n    this.ctxProp = 'initial value';\n  }\n}\n\n\n@Component({\n  selector: 'component-with-pipes',\n  bind: {\n    \"prop\": \"prop | double\"\n  }\n})\n@Template({\n  inline: ''\n})\nclass ComponentWithPipes {\n  prop:string;\n}\n\n@Component({\n  selector: 'child-cmp',\n  componentServices: [MyService]\n})\n@Template({\n  directives: [MyDir],\n  inline: '{{ctxProp}}'\n})\nclass ChildComp {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Decorator({\n  selector: 'some-directive'\n})\nclass SomeDirective { }\n\n@Component({\n  selector: 'cmp-with-parent'\n})\n@Template({\n  inline: '<p>Component with an injected parent</p>',\n  directives: [SomeDirective]\n})\nclass CompWithParent {\n  myParent: SomeDirective;\n  constructor(@Parent() someComp: SomeDirective) {\n    this.myParent = someComp;\n  }\n}\n\n@Component({\n  selector: 'cmp-with-ancestor'\n})\n@Template({\n  inline: '<p>Component with an injected ancestor</p>',\n  directives: [SomeDirective]\n})\nclass CompWithAncestor {\n  myAncestor: SomeDirective;\n  constructor(@Ancestor() someComp: SomeDirective) {\n    this.myAncestor = someComp;\n  }\n}\n\n@Component({\n  selector: '[child-cmp2]',\n  componentServices: [MyService]\n})\nclass ChildComp2 {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Viewport({\n  selector: '[some-viewport]'\n})\nclass SomeViewport {\n  constructor(container: ViewContainer) {\n    container.create().setLocal('some-tmpl', 'hello');\n    container.create().setLocal('some-tmpl', 'again');\n  }\n}\n\nclass MyService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nclass DoublePipe extends Pipe {\n  supports(obj) {\n    return true;\n  }\n\n  transform(value) {\n    return `${value}${value}`;\n  }\n}\n\nclass DoublePipeFactory {\n  supports(obj) {\n    return true;\n  }\n\n  create() {\n    return new DoublePipe();\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.argumentTypes($__placeholder__0)","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)"]}