{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/shadow_dom/shim_component_spec.js","angular2/test/core/compiler/shadow_dom/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/shadow_dom/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/shadow_dom/shim_component_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, beforeEach, it, expect, ddescribe, iit, SpyObject, el} from 'angular2/test_lib';\n\nimport {\n  ShimNativeComponent,\n  ShimEmulatedComponent,\n  resetShimComponentCache\n} from 'angular2/src/core/compiler/shadow_dom_emulation/shim_component';\n\nimport {ShadowCss} from 'angular2/src/core/compiler/shadow_dom_emulation/shadow_css';\n\nimport {Type} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/facade/dom';\n\nexport function main() {\n  describe('ShimComponent', () => {\n\n    describe('ShimNativeComponent', () => {\n      function createShim(component: Type) {\n        return new ShimNativeComponent(component);\n      }\n\n      it('should not transform the CSS', () => {\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim = createShim(SomeComponent);\n        var shimCss = shim.shimCssText(css);\n        expect(css).toEqual(shimCss);\n      });\n\n      it('should not transform content elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimContentElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual(html);\n      });\n\n      it('should not transform host elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimHostElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual(html);\n      });\n    });\n\n    describe('ShimEmulatedComponent', () => {\n      beforeEach(() => {\n        resetShimComponentCache();\n      });\n\n      function createShim(component: Type) {\n        return new ShimEmulatedComponent(component);\n      }\n\n      it('should transform the CSS', () => {\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim = createShim(SomeComponent);\n        var shimCss = shim.shimCssText(css);\n        expect(shimCss).not.toEqual(css);\n        var shadowCss = new ShadowCss();\n        expect(shimCss).toEqual(shadowCss.shimCssText(css, '_ngcontent-0', '_nghost-0'));\n      });\n\n      it('should transform content elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimContentElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual('<p _ngcontent-0=\"\">foo</p>');\n      });\n\n      it('should not transform host elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimHostElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual('<p _nghost-0=\"\">foo</p>');\n      });\n\n      it('should generate the same output for the same component', () => {\n        var html = '<p>foo</p>';\n        var content1 = el(html);\n        var host1 = el(html);\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim1 = createShim(SomeComponent);\n        shim1.shimContentElement(content1);\n        shim1.shimHostElement(host1);\n        var shimCss1 = shim1.shimCssText(css);\n\n        var content2 = el(html);\n        var host2 = el(html);\n        var shim2 = createShim(SomeComponent);\n        shim2.shimContentElement(content2);\n        shim2.shimHostElement(host2);\n        var shimCss2 = shim2.shimCssText(css);\n\n        expect(DOM.getOuterHTML(content1)).toEqual(DOM.getOuterHTML(content2));\n        expect(DOM.getOuterHTML(host1)).toEqual(DOM.getOuterHTML(host2));\n        expect(shimCss1).toEqual(shimCss2);\n      });\n\n      it('should generate different outputs for different components', () => {\n        var html = '<p>foo</p>';\n        var content1 = el(html);\n        var host1 = el(html);\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim1 = createShim(SomeComponent);\n        shim1.shimContentElement(content1);\n        shim1.shimHostElement(host1);\n        var shimCss1 = shim1.shimCssText(css);\n\n        var content2 = el(html);\n        var host2 = el(html);\n        var shim2 = createShim(SomeComponent2);\n        shim2.shimContentElement(content2);\n        shim2.shimHostElement(host2);\n        var shimCss2 = shim2.shimCssText(css);\n\n        expect(DOM.getOuterHTML(content1)).not.toEqual(DOM.getOuterHTML(content2));\n        expect(DOM.getOuterHTML(host1)).not.toEqual(DOM.getOuterHTML(host2));\n        expect(shimCss1).not.toEqual(shimCss2);\n      });\n    });\n  });\n}\n\nclass SomeComponent {}\nclass SomeComponent2 {}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}