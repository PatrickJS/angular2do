{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/pipeline/shim_shadow_css_spec.js","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/3437","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/13","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/pipeline/shim_shadow_css_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, beforeEach, expect, it, iit, ddescribe, el} from 'angular2/test_lib';\n\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {ShimShadowCss} from 'angular2/src/core/compiler/pipeline/shim_shadow_css';\nimport {ShimComponent} from 'angular2/src/core/compiler/shadow_dom_emulation/shim_component';\n\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\nimport {ShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\n\nimport {Type} from 'angular2/src/facade/lang';\n\nexport function main() {\n  describe('ShimShadowCss', () => {\n    function createPipeline(strategy:ShadowDomStrategy, styleHost) {\n      var component = new Component({selector: 'selector'});\n      var meta = new DirectiveMetadata(null, component);\n      var shimShadowCss = new ShimShadowCss(meta, strategy, styleHost);\n      return new CompilePipeline([shimShadowCss]);\n    }\n\n    it('it should set ignoreBindings to true for style elements', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(false), host);\n      var results = pipeline.process(el('<div><style></style></div>'));\n      expect(results[0].ignoreBindings).toBe(false);\n      expect(results[1].ignoreBindings).toBe(true);\n    });\n\n    it('should not extract the styles when extractStyles() is false', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(false), host);\n      var template = el('<style>.s{}</style>');\n      pipeline.process(template);\n      expect(template).toHaveText('.s{}');\n    });\n\n    it('should move the styles to the host when extractStyles() is true', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(true), host);\n      var template = el('<div><style>.s{}</style></div>');\n      pipeline.process(template);\n      expect(template).toHaveText('');\n      expect(host).toHaveText('/* shim */.s{}');\n    });\n\n    it('should preserve original content when moving styles', () => {\n      var host = el('<div>original content</div>');\n      var pipeline = createPipeline(new FakeStrategy(true), host);\n      var template = el('<div><style>.s{}</style></div>');\n      pipeline.process(template);\n      expect(template).toHaveText('');\n      expect(host).toHaveText('/* shim */.s{}original content');\n    });\n\n    it('should move the styles to the host in the original order', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(true), host);\n      var template = el('<div><style>.s1{}</style><style>.s2{}</style></div>');\n      pipeline.process(template);\n      expect(host).toHaveText('/* shim */.s1{}/* shim */.s2{}');\n    });\n  });\n}\n\nclass FakeStrategy extends ShadowDomStrategy {\n  _extractStyles: boolean;\n\n  constructor(extractStyles: boolean) {\n    super();\n    this._extractStyles = extractStyles;\n  }\n\n  extractStyles(): boolean {\n    return this._extractStyles;\n  }\n\n  getShimComponent(component: Type): ShimComponent {\n    return new FakeShimComponent(component);\n  }\n}\n\nclass FakeShimComponent extends ShimComponent {\n  constructor(component: Type) {\n    super(component);\n  }\n\n  shimCssText(cssText: string): string {\n    return '/* shim */' + cssText;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","assert.type.$__placeholder__0)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}