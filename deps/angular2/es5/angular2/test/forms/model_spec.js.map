{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/forms/model_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yCAAoB,UAAS,SAAQ;;;;;;;;;;;;;ACG7C,SAAS,KAAG,CAAE,AAAE;AACrB,WAAO,AAAE,CAAA,cAAa,GAAG,SAAA,AAAC;AACxB,aAAQ,AAAC,CAAA,OAAM,GAAI,SAAA;AACjB,SAAC,AAAE,CAAA,mDAAkD,GAAG,SAAA,AAAC,CAAK;AACxD,YAAA,CAAA,CAAA,EAAI,IAAI,aAAY,AAAC,CAAA;AACvB,gBAAI,CAAG,IAAI,QAAM,AAAE,CAAA,KAAI,CAAC;AACxB,gBAAI,CAAG,IAAI,QAAO,AAAC,CAAA,KAAI,CAAC;AAAA,UAC1B,CAAC,CAAC;AACF,eAAK,AAAE,CAAA,CAAA,MAAM,CAAC,QAAS,AAAC,CAAA;AAAC,gBAAI,CAAG,MAAI;AAAG,gBAAI,CAAG,MAAI;AAAA,UAAC,CAAC,CAAA;QACtD,EAAC,CAAC;AAEF,SAAC,AAAE,CAAA,kDAAiD,GAAG,SAAA,AAAC,CAAK;AACvD,YAAA,CAAA,CAAA,EAAI,IAAI,aAAW,AAAE,CAAA,EAAC,CAAC,CAAC;AAC5B,eAAM,AAAC,CAAA,CAAA,MAAM,CAAC,QAAQ,AAAE,CAAA,EAAC,CAAC,CAAA;QAC5B,EAAC,CAAC;MACJ,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;ACnBQ,UAAQ,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,mBAAoB,KAAG,aAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;IAAmB;EAC3B,CAAA;AHDI,CAAC,CAAC;ACgC0B","file":"angular2/test/forms/model_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, el} from 'angular2/test_lib';\nimport {ControlGroup, Control} from 'angular2/forms';\n\nexport function main() {\n  describe(\"ControlGroup\", () => {\n    describe(\"value\", () => {\n      it(\"should be the reduced value of the child controls\", () => {\n        var g = new ControlGroup({\n          \"one\": new Control(\"111\"),\n          \"two\": new Control(\"222\")\n        });\n        expect(g.value).toEqual({\"one\": \"111\", \"two\": \"222\"})\n      });\n\n      it(\"should be empty when there are no child controls\", () => {\n        var g = new ControlGroup({});\n        expect(g.value).toEqual({})\n      });\n    });\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}