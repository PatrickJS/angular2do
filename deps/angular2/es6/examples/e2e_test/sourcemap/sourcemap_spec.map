{"version":3,"sources":["sourcemap_spec.es6"],"names":[],"mappings":"AAAI,EAAA,CAAA,EAAC,EAAI,CAAA,OAAM,AAAC,CAAC,IAAG,CAAC,CAAC;AACtB,AAAI,EAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,AAAC,CAAC,YAAW,CAAC,CAAC;AAErC,OAAO,AAAC,CAAC,YAAW,CAAG,UAAU,AAAD,CAAG;AACjC,AAAI,IAAA,CAAA,GAAE,EAAI,oCAAkC,CAAC;AAE7C,GAAC,AAAC,CAAC,oBAAmB,CAAG,UAAS,AAAD,CAAG;AAClC,UAAM,IAAI,AAAC,CAAC,GAAE,CAAC,CAAC;AAGhB,UAAM,cAAc,AAAC,CAAC,KAAI,CAAC,CAAC;AAC5B,UAAM,OAAO,AAAC,EAAC,KAAK,AAAC,EAAC,IAAI,AAAC,CAAC,SAAQ,CAAC,KAAK,AAAC,CAAC,SAAS,IAAG,CAAG;AACzD,AAAI,QAAA,CAAA,SAAQ,EAAI,KAAG,CAAC;AACpB,AAAI,QAAA,CAAA,WAAU,EAAI,KAAG,CAAC;AACtB,SAAG,QAAQ,AAAC,CAAC,SAAS,GAAE,CAAG;AACzB,AAAI,UAAA,CAAA,KAAI,EAAI,CAAA,+BAA8B,KAAK,AAAC,CAAC,GAAE,QAAQ,CAAC,CAAC;AAC7D,WAAI,KAAI,CAAG;AACT,kBAAQ,EAAI,CAAA,QAAO,AAAC,CAAC,KAAI,CAAE,CAAA,CAAC,CAAC,CAAC;AAC9B,oBAAU,EAAI,CAAA,QAAO,AAAC,CAAC,KAAI,CAAE,CAAA,CAAC,CAAC,CAAC;QAClC;AAAA,MACF,CAAC,CAAC;AAEF,WAAK,AAAC,CAAC,SAAQ,CAAC,IAAI,SAAS,AAAC,EAAC,CAAC;AAChC,WAAK,AAAC,CAAC,WAAU,CAAC,IAAI,SAAS,AAAC,EAAC,CAAC;AAElC,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,EAAC,aAAa,AAAC,CAC/B,sDAAqD,CAAC,CAAC;AAC3D,AAAI,QAAA,CAAA,OAAM,EAAI,IAAI,CAAA,SAAQ,kBAAkB,AAAC,CAAC,IAAG,MAAM,AAAC,CAAC,aAAY,CAAC,CAAC,CAAC;AAExE,AAAI,QAAA,CAAA,gBAAe,EAAI,CAAA,OAAM,oBAAoB,AAAC,CAAC;AACjD,WAAG,CAAG,UAAQ;AACd,aAAK,CAAG,YAAU;AAAA,MACpB,CAAC,CAAC;AAEF,AAAI,QAAA,CAAA,eAAc,EAAI,CAAA,EAAC,aAAa,AAAC,CAAC,yCAAwC,CAC1E,EAAC,QAAO,CAAG,QAAM,CAAC,CAAC,MAAM,AAAC,CAAC,IAAG,CAAC,CAAC;AACpC,WAAK,AAAC,CAAC,eAAc,CAAE,gBAAe,KAAK,EAAI,EAAA,CAAC,CAAC,QACtC,AAAC,CAAC,+CAA8C,CAAC,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACF","file":"/Users/patrick/Documents/open source/angular/modules/examples/e2e_test/sourcemap/sourcemap_spec.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/examples/e2e_test/sourcemap/","sourcesContent":["var fs = require('fs');\nvar sourceMap = require('source-map');\n\ndescribe('sourcemaps', function () {\n  var URL = 'examples/src/sourcemap/index.html';\n\n  it('should map sources', function() {\n    browser.get(URL);\n    // TODO(tbosch): Bug in ChromeDriver: Need to execute at least one command\n    // so that the browser logs can be read out!\n    browser.executeScript('1+1');\n    browser.manage().logs().get('browser').then(function(logs) {\n      var errorLine = null;\n      var errorColumn = null;\n      logs.forEach(function(log) {\n        var match = /Test\\.run\\s+\\(.+:(\\d+):(\\d+)/m.exec(log.message);\n        if (match) {\n          errorLine = parseInt(match[1]);\n          errorColumn = parseInt(match[2]);\n        }\n      });\n\n      expect(errorLine).not.toBeNull();\n      expect(errorColumn).not.toBeNull();\n\n      var sourceMapData = fs.readFileSync(\n          'dist/js/prod/es5/examples/src/sourcemap/index.js.map');\n      var decoder = new sourceMap.SourceMapConsumer(JSON.parse(sourceMapData));\n\n      var originalPosition = decoder.originalPositionFor({\n        line: errorLine,\n        column: errorColumn\n      });\n\n      var sourceCodeLines = fs.readFileSync('modules/examples/src/sourcemap/index.js',\n          {encoding: 'UTF-8'}).split('\\n');\n      expect(sourceCodeLines[originalPosition.line - 1])\n          .toMatch(/throw new BaseException\\(\\'Sourcemap test\\'\\)/);\n    });\n  });\n});\n"]}