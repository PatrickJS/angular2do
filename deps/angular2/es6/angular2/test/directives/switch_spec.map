{"version":3,"sources":["switch_spec.js","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/directives/switch_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/directives/","sourcesContent":["import {describe, xit, it, expect, beforeEach, ddescribe, iit, el} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {Injector} from 'angular2/di';\nimport {Lexer, Parser, dynamicChangeDetection} from 'angular2/change_detection';\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {TemplateLoader} from 'angular2/core';\nimport {Switch, SwitchWhen, SwitchDefault} from 'angular2/src/directives/switch';\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\n\nexport function main() {\n  describe('switch', () => {\n    var view, cd, compiler, component, tplResolver;\n    beforeEach(() => {\n      tplResolver = new MockTemplateResolver();\n      compiler = new Compiler(dynamicChangeDetection, new TemplateLoader(null),\n        new DirectiveMetadataReader(), new Parser(new Lexer()), new CompilerCache(),\n        new NativeShadowDomStrategy(), tplResolver);\n    });\n\n    function createView(pv) {\n      component = new TestComponent();\n      view = pv.instantiate(null, null);\n      view.hydrate(new Injector([]), null, component);\n      cd = view.changeDetector;\n    }\n\n    function compileWithTemplate(html) {\n      var template = new Template({\n        inline: html,\n        directives: [Switch, SwitchWhen, SwitchDefault]\n      });\n      tplResolver.setTemplate(TestComponent, template);\n      return compiler.compile(TestComponent);\n    }\n\n    describe('switch value changes', () => {\n      it('should switch amongst when values', (done) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<template [switch-when]=\"\\'a\\'\"><li>when a</li></template>' +\n            '<template [switch-when]=\"\\'b\\'\"><li>when b</li></template>' +\n          '</ul></div>';\n        compileWithTemplate(template).then((pv) => {\n          createView(pv);\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('');\n\n          component.switchValue = 'a';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when a');\n\n          component.switchValue = 'b';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when b');\n\n          done();\n        });\n      });\n\n      it('should switch amongst when values with fallback to default', (done) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<li template=\"switch-when \\'a\\'\">when a</li>' +\n            '<li template=\"switch-default\">when default</li>' +\n          '</ul></div>';\n        compileWithTemplate(template).then((pv) => {\n          createView(pv);\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when default');\n\n          component.switchValue = 'a';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when a');\n\n          component.switchValue = 'b';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when default');\n\n          done();\n        });\n      });\n\n      it('should support multiple whens with the same value', (done) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<template [switch-when]=\"\\'a\\'\"><li>when a1;</li></template>' +\n            '<template [switch-when]=\"\\'b\\'\"><li>when b1;</li></template>' +\n            '<template [switch-when]=\"\\'a\\'\"><li>when a2;</li></template>' +\n            '<template [switch-when]=\"\\'b\\'\"><li>when b2;</li></template>' +\n            '<template [switch-default]><li>when default1;</li></template>' +\n            '<template [switch-default]><li>when default2;</li></template>' +\n          '</ul></div>';\n        compileWithTemplate(template).then((pv) => {\n          createView(pv);\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when default1;when default2;');\n\n          component.switchValue = 'a';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when a1;when a2;');\n\n          component.switchValue = 'b';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when b1;when b2;');\n\n          done();\n        });\n      });\n    });\n\n    describe('when values changes', () => {\n      it('should switch amongst when values', (done) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<template [switch-when]=\"when1\"><li>when 1;</li></template>' +\n            '<template [switch-when]=\"when2\"><li>when 2;</li></template>' +\n            '<template [switch-default]><li>when default;</li></template>' +\n          '</ul></div>';\n        compileWithTemplate(template).then((pv) => {\n          createView(pv);\n\n          component.when1 = 'a';\n          component.when2 = 'b';\n          component.switchValue = 'a';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when 1;');\n\n          component.switchValue = 'b';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when 2;');\n\n          component.switchValue = 'c';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when default;');\n\n          component.when1 = 'c';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when 1;');\n\n          component.when1 = 'd';\n          cd.detectChanges();\n          expect(DOM.getText(view.nodes[0])).toEqual('when default;');\n\n          done();\n        });\n      });\n    });\n  });\n}\n\n@Component({selector: 'test-cmp'})\nclass TestComponent {\n  switchValue: any;\n  when1: any;\n  when2: any;\n\n  constructor() {\n    this.switchValue = null;\n    this.when1 = null;\n    this.when2 = null;\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}