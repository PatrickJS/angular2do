{"version":3,"sources":["non_bindable_spec.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/directives/non_bindable_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/directives/","sourcesContent":["import {describe, xit, it, expect, beforeEach, ddescribe, iit, el} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {Injector} from 'angular2/di';\nimport {Lexer, Parser, ChangeDetector, dynamicChangeDetection} from 'angular2/change_detection';\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {Decorator, Component} from 'angular2/src/core/annotations/annotations';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {NonBindable} from 'angular2/src/directives/non_bindable';\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\n\nexport function main() {\n  describe('non-bindable', () => {\n    var view, cd, compiler, component, tplResolver;\n    beforeEach(() => {\n      tplResolver = new MockTemplateResolver();\n      compiler = new Compiler(dynamicChangeDetection, new TemplateLoader(null),\n        new DirectiveMetadataReader(), new Parser(new Lexer()), new CompilerCache(),\n        new NativeShadowDomStrategy(), tplResolver);\n    });\n\n    function createView(pv) {\n      component = new TestComponent();\n      view = pv.instantiate(null, null);\n      view.hydrate(new Injector([]), null, component);\n      cd = view.changeDetector;\n    }\n\n    function compileWithTemplate(html) {\n      var template = new Template({\n        inline: html,\n        directives: [NonBindable, TestDecorator]\n      });\n      tplResolver.setTemplate(TestComponent, template);\n      return compiler.compile(TestComponent);\n    }\n\n    it('should not interpolate children', (done) => {\n      var template = '<div>{{text}}<span non-bindable>{{text}}</span></div>';\n      compileWithTemplate(template).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('foo{{text}}');\n        done();\n      });\n    });\n\n    it('should ignore directives on child nodes', (done) => {\n      var template = '<div non-bindable><span id=child test-dec>{{text}}</span></div>';\n      compileWithTemplate(template).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n        var span = DOM.querySelector(view.nodes[0], '#child');\n        expect(DOM.hasClass(span, 'compiled')).toBeFalsy();\n        done();\n      });\n    });\n\n    it('should trigger directives on the same node', (done) => {\n      var template = '<div><span id=child non-bindable test-dec>{{text}}</span></div>';\n      compileWithTemplate(template).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n        var span = DOM.querySelector(view.nodes[0], '#child');\n        expect(DOM.hasClass(span, 'compiled')).toBeTruthy();\n        done();\n      });\n    });\n  })\n}\n\n@Component({selector: 'test-cmp'})\nclass TestComponent {\n  text: string;\n  constructor() {\n    this.text = 'foo';\n  }\n}\n\n@Decorator({\n  selector: '[test-dec]'\n})\nclass TestDecorator {\n  constructor(el: NgElement) {\n    DOM.addClass(el.domElement, 'compiled');\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.argumentTypes($__placeholder__0)"]}