{"version":3,"sources":["util.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,OAAM,CAAC,KAAO,2BAAyB,CAAC;AAEhD,KAAO,SAAS,qBAAmB,CAAE,CAAC,UAAS;AAAG,SAAO;AAAG,UAAQ;AAAG,MAAI;AAAG,SAAO,CAAC,CAAG;AACvF,KAAI,OAAM,AAAC,CAAC,UAAS,CAAC;AAAG,aAAS,EAAI,GAAC,CAAC;AAAA,AACxC,KAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAAG,WAAO,EAAI,GAAC,CAAC;AAAA,AACpC,KAAI,OAAM,AAAC,CAAC,SAAQ,CAAC;AAAG,YAAQ,EAAI,GAAC,CAAC;AAAA,AACtC,KAAI,OAAM,AAAC,CAAC,KAAI,CAAC;AAAG,QAAI,EAAI,GAAC,CAAC;AAAA,AAC9B,KAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAAG,WAAO,EAAI,GAAC,CAAC;AAAA,AAEpC,OAAO,CAAA,cAAa,EAAI,CAAA,UAAS,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAC5C,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CACxC,cAAY,CAAA,CAAI,CAAA,SAAQ,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAC1C,UAAQ,CAAA,CAAI,CAAA,KAAI,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAClC,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAC;AAClD;AAAA,AAEA,KAAO,SAAS,kBAAgB,CAAE,CAAC,GAAE;AAAG,SAAO;AAAG,UAAQ;AAAG,QAAM;AAAG,SAAO,CAAC,CAAG;AAC/E,KAAI,OAAM,AAAC,CAAC,GAAE,CAAC;AAAG,MAAE,EAAI,GAAC,CAAC;AAAA,AAC1B,KAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAAG,WAAO,EAAI,GAAC,CAAC;AAAA,AACpC,KAAI,OAAM,AAAC,CAAC,SAAQ,CAAC;AAAG,YAAQ,EAAI,GAAC,CAAC;AAAA,AACtC,KAAI,OAAM,AAAC,CAAC,OAAM,CAAC;AAAG,UAAM,EAAI,GAAC,CAAC;AAAA,AAClC,KAAI,OAAM,AAAC,CAAC,QAAO,CAAC;AAAG,WAAO,EAAI,GAAC,CAAC;AAAA,AAEpC,OAAO,CAAA,OAAM,EAAI,CAAA,GAAE,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAC9B,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CACxC,cAAY,CAAA,CAAI,CAAA,SAAQ,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CAC1C,YAAU,CAAA,CAAI,CAAA,OAAM,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAA,CACtC,aAAW,CAAA,CAAI,CAAA,QAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,CAAC;AAClD;AAAA","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/util.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/","sourcesContent":["import {isBlank} from 'angular2/src/facade/lang';\n\nexport function arrayChangesAsString({collection, previous, additions, moves, removals}) {\n  if (isBlank(collection)) collection = [];\n  if (isBlank(previous)) previous = [];\n  if (isBlank(additions)) additions = [];\n  if (isBlank(moves)) moves = [];\n  if (isBlank(removals)) removals = [];\n\n  return \"collection: \" + collection.join(', ') + \"\\n\" +\n         \"previous: \" + previous.join(', ') + \"\\n\" +\n         \"additions: \" + additions.join(', ') + \"\\n\" +\n         \"moves: \" + moves.join(', ') + \"\\n\" +\n         \"removals: \" + removals.join(', ') + \"\\n\";\n}\n\nexport function kvChangesAsString({map, previous, additions, changes, removals}) {\n  if (isBlank(map)) map = [];\n  if (isBlank(previous)) previous = [];\n  if (isBlank(additions)) additions = [];\n  if (isBlank(changes)) changes = [];\n  if (isBlank(removals)) removals = [];\n\n  return \"map: \" + map.join(', ') + \"\\n\" +\n         \"previous: \" + previous.join(', ') + \"\\n\" +\n         \"additions: \" + additions.join(', ') + \"\\n\" +\n         \"changes: \" + changes.join(', ') + \"\\n\" +\n         \"removals: \" + removals.join(', ') + \"\\n\";\n}\n"]}