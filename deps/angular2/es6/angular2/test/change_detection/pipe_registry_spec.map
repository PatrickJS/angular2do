{"version":3,"sources":["pipe_registry_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,SAAQ;AAAG,SAAO;AAAG,GAAC;AAAG,IAAE;AAAG,IAAE;AAAG,OAAK;AAAG,WAAS;AAAG,UAAQ,CAAC,KAAO,oBAAkB,CAAC;AAElG,KAAO,EAAC,YAAW,CAAC,KAAO,oDAAkD,CAAC;AAC9E,KAAO,EAAC,IAAG,CAAC,KAAO,2CAAyC,CAAC;AAE7D,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,SAAO,AAAC,CAAC,eAAc,CAAG,EAAC,AAAD,IAAM;AAC9B,AAAI,MAAA,CAAA,SAAQ,EAAI,IAAI,KAAG,AAAC,EAAC,CAAC;AAC1B,AAAI,MAAA,CAAA,UAAS,EAAI,IAAI,KAAG,AAAC,EAAC,CAAC;AAE3B,KAAC,AAAC,CAAC,uDAAsD,CAAG,EAAC,AAAD,IAAM;AAChE,AAAI,QAAA,CAAA,CAAA,EAAI,IAAI,aAAW,AAAC,CAAC,CACvB,MAAK,CAAG,EACN,GAAI,YAAU,AAAC,CAAC,KAAI,CAAG,UAAQ,CAAC,CAChC,IAAI,YAAU,AAAC,CAAC,IAAG,CAAG,WAAS,CAAC,CAClC,CACF,CAAC,CAAC;AAEF,WAAK,AAAC,CAAC,CAAA,IAAI,AAAC,CAAC,MAAK,CAAG,cAAY,CAAC,CAAC,KAAK,AAAC,CAAC,UAAS,CAAC,CAAC;IACvD,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,oCAAmC,CAAG,EAAC,AAAD,IAAM;AAC7C,AAAI,QAAA,CAAA,CAAA,EAAI,IAAI,aAAW,AAAC,CAAC,EAAC,CAAC,CAAC;AAC5B,WAAK,AAAC,CAAC,CAAC,AAAD,IAAM,CAAA,CAAA,IAAI,AAAC,CAAC,SAAQ,CAAG,cAAY,CAAC,CAAC,aAAa,AAAC,CACxD,4DAA2D,CAC7D,CAAC;IACH,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,oCAAmC,CAAG,EAAC,AAAD,IAAM;AAC7C,AAAI,QAAA,CAAA,CAAA,EAAI,IAAI,aAAW,AAAC,CAAC,CACvB,MAAK,CAAI,GAAC,CACZ,CAAC,CAAC;AAEF,WAAK,AAAC,CAAC,CAAC,AAAD,IAAM,CAAA,CAAA,IAAI,AAAC,CAAC,MAAK,CAAG,cAAY,CAAC,CAAC,aAAa,AAAC,CACrD,yDAAwD,CAC1D,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAAA,AAEA,IAAM,YAAU;AAId,YAAU,CAAE,aAAY,AAAQ,CAAG,CAAA,IAAG,AAAI,CAAG;AC5C/C,SAAK,cAAc,eCAnB,CAAA,MAAK,KAAK,eAAV,CAAA,MAAK,KAAK,KDA4B,CAAA;AD6ClC,OAAG,cAAc,EAAI,cAAY,CAAC;AAClC,OAAG,KAAK,EAAI,KAAG,CAAC;EAClB;AAAA,AAEA,SAAO,CAAE,GAAE;AGjDb,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHkDd,IAAG,cAAc,CGlDe,CDA3C,CAAA,MAAK,KAAK,SCAqD,CAAA;EHmD7D;AAEA,OAAK,CAAE,AAAD;AGrDR,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHsDd,IAAG,KAAK,CGtDwB,CHqDhC,KAAG,CGrDiD,CAAA;EHuD7D;AACF;AIxDA,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YFD1B,MAAK,KAAK,YAAV,MAAK,KAAK,OECuC;EAAC,CAAC,CAAC,CAAC;AJuDrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/pipe_registry_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport {PipeRegistry} from 'angular2/src/change_detection/pipes/pipe_registry';\nimport {Pipe} from 'angular2/src/change_detection/pipes/pipe';\n\nexport function main() {\n  describe(\"pipe registry\", () => {\n    var firstPipe = new Pipe();\n    var secondPipe = new Pipe();\n\n    it(\"should return the first pipe supporting the data type\", () => {\n      var r = new PipeRegistry({\n        \"type\": [\n          new PipeFactory(false, firstPipe),\n          new PipeFactory(true, secondPipe)\n        ]\n      });\n\n      expect(r.get(\"type\", \"some object\")).toBe(secondPipe);\n    });\n\n    it(\"should throw when no matching type\", () => {\n      var r = new PipeRegistry({});\n      expect(() => r.get(\"unknown\", \"some object\")).toThrowError(\n        `Cannot find a pipe for type 'unknown' object 'some object'`\n      );\n    });\n\n    it(\"should throw when no matching pipe\", () => {\n      var r = new PipeRegistry({\n        \"type\" : []\n      });\n\n      expect(() => r.get(\"type\", \"some object\")).toThrowError(\n        `Cannot find a pipe for type 'type' object 'some object'`\n      );\n    });\n  });\n}\n\nclass PipeFactory {\n  shouldSupport:boolean;\n  pipe:any;\n\n  constructor(shouldSupport:boolean, pipe:any) {\n    this.shouldSupport = shouldSupport;\n    this.pipe = pipe;\n  }\n\n  supports(obj):boolean {\n    return this.shouldSupport;\n  }\n\n  create():Pipe {\n    return this.pipe;\n  }\n}","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}