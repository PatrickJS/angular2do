{"version":3,"sources":["keyvalue_changes_spec.js"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/keyvalue_changes_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/","sourcesContent":["import {describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\nimport {KeyValueChanges} from 'angular2/src/change_detection/pipes/keyvalue_changes';\nimport {NumberWrapper, isJsObject} from 'angular2/src/facade/lang';\nimport {MapWrapper} from 'angular2/src/facade/collection';\nimport {kvChangesAsString} from './util';\n\n// todo(vicb): Update the code & tests for object equality\nexport function main() {\n  describe('keyvalue_changes', function() {\n    describe('KeyValueChanges', function() {\n      var changes;\n      var m;\n\n      beforeEach(() => {\n        changes = new KeyValueChanges();\n        m = MapWrapper.create();\n      });\n\n      afterEach(() => {\n        changes = null;\n      });\n\n      it('should detect additions', () => {\n        changes.check(m);\n\n        MapWrapper.set(m, 'a', 1);\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['a[null->1]'],\n          additions: ['a[null->1]']\n        }));\n\n        MapWrapper.set(m, 'b', 2);\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['a', 'b[null->2]'],\n          previous: ['a'],\n          additions: ['b[null->2]']\n        }));\n      });\n\n      it('should handle changing key/values correctly', () => {\n        MapWrapper.set(m, 1, 10);\n        MapWrapper.set(m, 2, 20);\n        changes.check(m);\n\n        MapWrapper.set(m, 2, 10);\n        MapWrapper.set(m, 1, 20);\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['1[10->20]', '2[20->10]'],\n          previous: ['1[10->20]', '2[20->10]'],\n          changes: ['1[10->20]', '2[20->10]']\n        }));\n      });\n\n      it('should do basic map watching', () => {\n        changes.check(m);\n\n        MapWrapper.set(m, 'a', 'A');\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['a[null->A]'],\n          additions: ['a[null->A]']\n        }));\n\n        MapWrapper.set(m, 'b', 'B');\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['a', 'b[null->B]'],\n          previous: ['a'],\n          additions: ['b[null->B]']\n        }));\n\n        MapWrapper.set(m, 'b', 'BB');\n        MapWrapper.set(m, 'd', 'D');\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['a', 'b[B->BB]', 'd[null->D]'],\n          previous: ['a', 'b[B->BB]'],\n          additions: ['d[null->D]'],\n          changes: ['b[B->BB]']\n        }));\n\n        MapWrapper.delete(m, 'b');\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['a', 'd'],\n          previous: ['a', 'b[BB->null]', 'd'],\n          removals: ['b[BB->null]']\n        }));\n\n        MapWrapper.clear(m);\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          previous: ['a[A->null]', 'd[D->null]'],\n          removals: ['a[A->null]', 'd[D->null]']\n        }));\n      });\n\n      it('should test string by value rather than by reference (DART)', () => {\n        MapWrapper.set(m, 'foo', 'bar');\n        changes.check(m);\n\n        var f = 'f';\n        var oo = 'oo';\n        var b = 'b';\n        var ar = 'ar';\n\n        MapWrapper.set(m, f + oo, b + ar);\n        changes.check(m);\n\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['foo'],\n          previous: ['foo']\n        }));\n      });\n\n      it('should not see a NaN value as a change (JS)', () => {\n        MapWrapper.set(m, 'foo', NumberWrapper.NaN);\n        changes.check(m);\n\n        changes.check(m);\n        expect(changes.toString()).toEqual(kvChangesAsString({\n          map: ['foo'],\n          previous: ['foo']\n        }));\n      });\n\n      // JS specific tests (JS Objects)\n      if (isJsObject({})) {\n        describe('JsObject changes', () => {\n          it('should support JS Object', () => {\n            expect(KeyValueChanges.supports({})).toBeTruthy();\n            expect(KeyValueChanges.supports(\"not supported\")).toBeFalsy();\n            expect(KeyValueChanges.supports(0)).toBeFalsy();\n            expect(KeyValueChanges.supports(null)).toBeFalsy();\n          });\n\n          it('should do basic object watching', () => {\n            m = {};\n            changes.check(m);\n\n            m['a'] = 'A';\n            changes.check(m);\n            expect(changes.toString()).toEqual(kvChangesAsString({\n              map: ['a[null->A]'],\n              additions: ['a[null->A]']\n            }));\n\n            m['b'] = 'B';\n            changes.check(m);\n            expect(changes.toString()).toEqual(kvChangesAsString({\n              map: ['a', 'b[null->B]'],\n              previous: ['a'],\n              additions: ['b[null->B]']\n            }));\n\n            m['b'] = 'BB';\n            m['d'] = 'D';\n            changes.check(m);\n            expect(changes.toString()).toEqual(kvChangesAsString({\n              map: ['a', 'b[B->BB]', 'd[null->D]'],\n              previous: ['a', 'b[B->BB]'],\n              additions: ['d[null->D]'],\n              changes: ['b[B->BB]']\n            }));\n\n            m = {};\n            m['a'] = 'A';\n            m['d'] = 'D';\n            changes.check(m);\n            expect(changes.toString()).toEqual(kvChangesAsString({\n              map: ['a', 'd'],\n              previous: ['a', 'b[BB->null]', 'd'],\n              removals: ['b[BB->null]']\n            }));\n\n            m = {};\n            changes.check(m);\n            expect(changes.toString()).toEqual(kvChangesAsString({\n              previous: ['a[A->null]', 'd[D->null]'],\n              removals: ['a[A->null]', 'd[D->null]']\n            }));\n          });\n        });\n      }\n    });\n  });\n}\n"]}