{"version":3,"sources":["selector_spec.js"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/selector_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/","sourcesContent":["import {describe, it, expect, beforeEach, ddescribe, iit, xit, el} from 'angular2/test_lib';\nimport {SelectorMatcher} from 'angular2/src/core/compiler/selector';\nimport {CssSelector} from 'angular2/src/core/compiler/selector';\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nexport function main() {\n  describe('SelectorMatcher', () => {\n    var matcher, matched, selectableCollector;\n\n    function reset() {\n      matched = ListWrapper.create();\n    }\n\n    beforeEach(() => {\n      reset();\n      selectableCollector = (selectable) => {\n        ListWrapper.push(matched, selectable);\n      }\n      matcher = new SelectorMatcher();\n    });\n\n    it('should select by element name case insensitive', () => {\n      matcher.addSelectable(CssSelector.parse('someTag'), 1);\n\n      matcher.match(CssSelector.parse('SOMEOTHERTAG'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('SOMETAG'), selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n\n    it('should select by class name case insensitive', () => {\n      matcher.addSelectable(CssSelector.parse('.someClass'), 1);\n      matcher.addSelectable(CssSelector.parse('.someClass.class2'), 2);\n\n      matcher.match(CssSelector.parse('.SOMEOTHERCLASS'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('.SOMECLASS'), selectableCollector);\n      expect(matched).toEqual([1]);\n\n      reset();\n      matcher.match(CssSelector.parse('.someClass.class2'), selectableCollector);\n      expect(matched).toEqual([1,2]);\n    });\n\n    it('should select by attr name case insensitive independent of the value', () => {\n      matcher.addSelectable(CssSelector.parse('[someAttr]'), 1);\n      matcher.addSelectable(CssSelector.parse('[someAttr][someAttr2]'), 2);\n\n      matcher.match(CssSelector.parse('[SOMEOTHERATTR]'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('[SOMEATTR]'), selectableCollector);\n      expect(matched).toEqual([1]);\n\n      reset();\n      matcher.match(CssSelector.parse('[SOMEATTR=someValue]'), selectableCollector);\n      expect(matched).toEqual([1]);\n\n      reset();\n      matcher.match(CssSelector.parse('[someAttr][someAttr2]'), selectableCollector);\n      expect(matched).toEqual([1,2]);\n    });\n\n    it('should select by attr name only once if the value is from the DOM', () => {\n      matcher.addSelectable(CssSelector.parse('[some-decor]'), 1);\n\n      var elementSelector = new CssSelector();\n      var element = el('<div attr></div>');\n      var empty = element.getAttribute('attr');\n      elementSelector.addAttribute('some-decor', empty);\n      matcher.match(elementSelector, selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n\n    it('should select by attr name and value case insensitive', () => {\n      matcher.addSelectable(CssSelector.parse('[someAttr=someValue]'), 1);\n\n      matcher.match(CssSelector.parse('[SOMEATTR=SOMEOTHERATTR]'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('[SOMEATTR=SOMEVALUE]'), selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n\n    it('should select by element name, class name and attribute name with value', () => {\n      matcher.addSelectable(CssSelector.parse('someTag.someClass[someAttr=someValue]'), 1);\n\n      matcher.match(CssSelector.parse('someOtherTag.someOtherClass[someOtherAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('someTag.someOtherClass[someOtherAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('someTag.someClass[someOtherAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('someTag.someClass[someAttr]'), selectableCollector);\n      expect(matched).toEqual([]);\n\n      matcher.match(CssSelector.parse('someTag.someClass[someAttr=someValue]'), selectableCollector);\n      expect(matched).toEqual([1]);\n    });\n\n    it('should select independent of the order in the css selector', () => {\n      matcher.addSelectable(CssSelector.parse('[someAttr].someClass'), 1);\n      matcher.addSelectable(CssSelector.parse('.someClass[someAttr]'), 2);\n      matcher.addSelectable(CssSelector.parse('.class1.class2'), 3);\n      matcher.addSelectable(CssSelector.parse('.class2.class1'), 4);\n\n      matcher.match(CssSelector.parse('[someAttr].someClass'), selectableCollector);\n      expect(matched).toEqual([1,2]);\n\n      reset();\n      matcher.match(CssSelector.parse('.someClass[someAttr]'), selectableCollector);\n      expect(matched).toEqual([1,2]);\n\n      reset();\n      matcher.match(CssSelector.parse('.class1.class2'), selectableCollector);\n      expect(matched).toEqual([3,4]);\n\n      reset();\n      matcher.match(CssSelector.parse('.class2.class1'), selectableCollector);\n      expect(matched).toEqual([4,3]);\n    });\n  });\n\n  describe('CssSelector.parse', () => {\n    it('should detect element names', () => {\n      var cssSelector = CssSelector.parse('sometag');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.toString()).toEqual('sometag');\n    });\n\n    it('should detect class names', () => {\n      var cssSelector = CssSelector.parse('.someClass');\n      expect(cssSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('.someclass');\n    });\n\n    it('should detect attr names', () => {\n      var cssSelector = CssSelector.parse('[attrname]');\n      expect(cssSelector.attrs).toEqual(['attrname', '']);\n\n      expect(cssSelector.toString()).toEqual('[attrname]');\n    });\n\n    it('should detect attr values', () => {\n      var cssSelector = CssSelector.parse('[attrname=attrvalue]');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.toString()).toEqual('[attrname=attrvalue]');\n    });\n\n    it('should detect multiple parts', () => {\n      var cssSelector = CssSelector.parse('sometag[attrname=attrvalue].someclass');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('sometag.someclass[attrname=attrvalue]');\n    });\n  });\n}"]}