{"version":3,"sources":["shim_shadow_css_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/3437","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/shim_shadow_css_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {describe, beforeEach, expect, it, iit, ddescribe, el} from 'angular2/test_lib';\n\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {ShimShadowCss} from 'angular2/src/core/compiler/pipeline/shim_shadow_css';\nimport {ShimComponent} from 'angular2/src/core/compiler/shadow_dom_emulation/shim_component';\n\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\nimport {ShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\n\nimport {Type} from 'angular2/src/facade/lang';\n\nexport function main() {\n  describe('ShimShadowCss', () => {\n    function createPipeline(strategy:ShadowDomStrategy, styleHost) {\n      var component = new Component({selector: 'selector'});\n      var meta = new DirectiveMetadata(null, component);\n      var shimShadowCss = new ShimShadowCss(meta, strategy, styleHost);\n      return new CompilePipeline([shimShadowCss]);\n    }\n\n    it('it should set ignoreBindings to true for style elements', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(false), host);\n      var results = pipeline.process(el('<div><style></style></div>'));\n      expect(results[0].ignoreBindings).toBe(false);\n      expect(results[1].ignoreBindings).toBe(true);\n    });\n\n    it('should not extract the styles when extractStyles() is false', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(false), host);\n      var template = el('<style>.s{}</style>');\n      pipeline.process(template);\n      expect(template).toHaveText('.s{}');\n    });\n\n    it('should move the styles to the host when extractStyles() is true', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(true), host);\n      var template = el('<div><style>.s{}</style></div>');\n      pipeline.process(template);\n      expect(template).toHaveText('');\n      expect(host).toHaveText('/* shim */.s{}');\n    });\n\n    it('should preserve original content when moving styles', () => {\n      var host = el('<div>original content</div>');\n      var pipeline = createPipeline(new FakeStrategy(true), host);\n      var template = el('<div><style>.s{}</style></div>');\n      pipeline.process(template);\n      expect(template).toHaveText('');\n      expect(host).toHaveText('/* shim */.s{}original content');\n    });\n\n    it('should move the styles to the host in the original order', () => {\n      var host = el('<div></div>');\n      var pipeline = createPipeline(new FakeStrategy(true), host);\n      var template = el('<div><style>.s1{}</style><style>.s2{}</style></div>');\n      pipeline.process(template);\n      expect(host).toHaveText('/* shim */.s1{}/* shim */.s2{}');\n    });\n  });\n}\n\nclass FakeStrategy extends ShadowDomStrategy {\n  _extractStyles: boolean;\n\n  constructor(extractStyles: boolean) {\n    super();\n    this._extractStyles = extractStyles;\n  }\n\n  extractStyles(): boolean {\n    return this._extractStyles;\n  }\n\n  getShimComponent(component: Type): ShimComponent {\n    return new FakeShimComponent(component);\n  }\n}\n\nclass FakeShimComponent extends ShimComponent {\n  constructor(component: Type) {\n    super(component);\n  }\n\n  shimCssText(cssText: string): string {\n    return '/* shim */' + cssText;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}