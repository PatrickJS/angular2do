{"version":3,"sources":["proto_element_injector_builder_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/proto_element_injector_builder_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ProtoElementInjectorBuilder} from 'angular2/src/core/compiler/pipeline/proto_element_injector_builder';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step'\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\nimport {ProtoView} from 'angular2/src/core/compiler/view';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {Viewport, Decorator, Component} from 'angular2/src/core/annotations/annotations';\nimport {ProtoElementInjector} from 'angular2/src/core/compiler/element_injector';\n\nexport function main() {\n  describe('ProtoElementInjectorBuilder', () => {\n    var protoElementInjectorBuilder, protoView;\n    beforeEach( () => {\n      protoElementInjectorBuilder = new TestableProtoElementInjectorBuilder();\n      protoView = new ProtoView(null, null, null);\n    });\n\n    // Create consts for an elements with a var- so that we can fake parsing the var into\n    // the CompileElement's variableBindings without actually doing any parsing.\n    var ELEMENT_WITH_VAR = el('<div var-name></div>');\n    var DIRECTIVE_ELEMENT_WITH_VAR = el('<div var-name directives></div>');\n\n    function createPipeline(directives = null) {\n      if (isBlank(directives)) {\n        directives = [];\n      }\n      var reader = new DirectiveMetadataReader();\n      return new CompilePipeline([new MockStep((parent, current, control) => {\n        if (isPresent(current.element.getAttribute('viewroot'))) {\n          current.isViewRoot = true;\n        }\n\n        if (isPresent(current.element.getAttribute('directives'))) {\n          for (var i=0; i<directives.length; i++) {\n            var dirMetadata = reader.read(directives[i]);\n            current.addDirective(dirMetadata);\n          }\n        }\n\n        // Check only for the hard-coded var- attribute from ELEMENT_WITH_VAR test element.\n        if (isPresent(current.element.getAttribute('var-name'))) {\n          current.variableBindings = MapWrapper.create();\n          MapWrapper.set(current.variableBindings, '\\$implicit', 'name');\n        }\n\n        current.inheritedProtoView = protoView;\n      }), protoElementInjectorBuilder]);\n    }\n\n    function getCreationArgs(protoElementInjector) {\n      return protoElementInjectorBuilder.findArgsFor(protoElementInjector);\n    }\n\n    it('should not create a ProtoElementInjector for elements without directives or vars', () => {\n      var results = createPipeline().process(el('<div></div>'));\n      expect(results[0].inheritedProtoElementInjector).toBe(null);\n    });\n\n    it('should create a ProtoElementInjector for elements with a variable binding', () => {\n      var results = createPipeline().process(ELEMENT_WITH_VAR);\n      expect(results[0].inheritedProtoElementInjector).toBeAnInstanceOf(ProtoElementInjector);\n    });\n\n    it('should create a ProtoElementInjector for elements directives', () => {\n      var directives = [SomeComponentDirective, SomeViewportDirective, SomeDecoratorDirective];\n      var results = createPipeline(directives).process(el('<div directives></div>'));\n      var creationArgs = getCreationArgs(results[0].inheritedProtoElementInjector);\n      var boundDirectives = creationArgs['bindings'].map((b) => b.key.token);\n      expect(boundDirectives).toEqual(directives);\n    });\n\n    it('should flag the ProtoElementInjector for exporting the component instance when a' +\n        'component has a var- declaration', () => {\n      var results = createPipeline([SomeComponentDirective]).process(DIRECTIVE_ELEMENT_WITH_VAR);\n      expect(results[0].inheritedProtoElementInjector.exportComponent).toBe(true);\n      expect(results[0].inheritedProtoElementInjector.exportElement).toBe(false);\n    });\n\n    it('should flag the ProtoElementInjector for exporting the element when a' +\n        'non-component element has a var- declaration', () => {\n      var results = createPipeline([SomeComponentDirective]).process(ELEMENT_WITH_VAR);\n      expect(results[0].inheritedProtoElementInjector.exportComponent).toBe(false);\n      expect(results[0].inheritedProtoElementInjector.exportElement).toBe(true);\n    });\n\n    it('should mark ProtoElementInjector for elements with component directives and use the ' +\n        'ComponentDirective as first binding', () => {\n      var directives = [SomeDecoratorDirective, SomeComponentDirective];\n      var results = createPipeline(directives).process(el('<div directives></div>'));\n      var creationArgs = getCreationArgs(results[0].inheritedProtoElementInjector);\n      expect(creationArgs['firstBindingIsComponent']).toBe(true);\n      var boundDirectives = creationArgs['bindings'].map((b) => b.key.token);\n      expect(boundDirectives).toEqual([SomeComponentDirective, SomeDecoratorDirective]);\n    });\n\n    it('should use the next ElementBinder index as index of the ProtoElementInjector', () => {\n      // just adding some indices..\n      ListWrapper.push(protoView.elementBinders, null);\n      ListWrapper.push(protoView.elementBinders, null);\n      var directives = [SomeDecoratorDirective];\n      var results = createPipeline(directives).process(el('<div directives></div>'));\n      var creationArgs = getCreationArgs(results[0].inheritedProtoElementInjector);\n      expect(creationArgs['index']).toBe(protoView.elementBinders.length);\n    });\n\n    describe(\"inheritedProtoElementInjector\", () => {\n      it('should inherit the ProtoElementInjector down to children without directives', () => {\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(el('<div directives><span></span></div>'));\n        expect(results[1].inheritedProtoElementInjector).toBe(results[0].inheritedProtoElementInjector);\n      });\n\n      it('should use the ProtoElementInjector of the parent element as parent', () => {\n        var element = el('<div directives><span><a directives></a></span></div>');\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(element);\n        expect(results[2].inheritedProtoElementInjector.parent).toBe(\n          results[0].inheritedProtoElementInjector);\n      });\n\n      it('should use a null parent for viewRoots', () => {\n        var element = el('<div directives><span viewroot directives></span></div>');\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(element);\n        expect(results[1].inheritedProtoElementInjector.parent).toBe(null);\n      });\n\n      it('should use a null parent if there is an intermediate viewRoot', () => {\n        var element = el('<div directives><span viewroot><a directives></a></span></div>');\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(element);\n        expect(results[2].inheritedProtoElementInjector.parent).toBe(null);\n      });\n    });\n\n    describe(\"distanceToParentInjector\", () => {\n      it(\"should be 0 for root elements\", () => {\n        var element = el('<div directives></div>');\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(element);\n        expect(results[0].inheritedProtoElementInjector.distanceToParent).toBe(0);\n      });\n\n      it(\"should be 1 when a parent element has an injector\", () => {\n        var element = el('<div directives><span directives></span></div>');\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(element);\n        expect(results[1].inheritedProtoElementInjector.distanceToParent).toBe(1);\n      });\n\n      it(\"should add 1 for every element that does not have an injector\", () => {\n        var element = el('<div directives><a><b><span directives></span></b></a></div>');\n        var directives = [SomeDecoratorDirective];\n        var results = createPipeline(directives).process(element);\n        expect(results[3].inheritedProtoElementInjector.distanceToParent).toBe(3);\n      });\n    });\n  });\n}\n\n\nclass TestableProtoElementInjectorBuilder extends ProtoElementInjectorBuilder {\n  debugObjects:List;\n\n  constructor() {\n    super();\n    this.debugObjects = [];\n  }\n\n  findArgsFor(protoElementInjector:ProtoElementInjector) {\n    for (var i=0; i<this.debugObjects.length; i+=2) {\n      if (this.debugObjects[i] === protoElementInjector) {\n        return this.debugObjects[i+1];\n      }\n    }\n    return null;\n  }\n\n  internalCreateProtoElementInjector(parent, index, bindings, firstBindingIsComponent, distance) {\n    var result = new ProtoElementInjector(parent, index, bindings, firstBindingIsComponent, distance);\n    ListWrapper.push(this.debugObjects, result);\n    ListWrapper.push(this.debugObjects, {'parent': parent, 'index': index, 'bindings': bindings, 'firstBindingIsComponent': firstBindingIsComponent});\n    return result;\n  }\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\nclass SomeComponentService {}\n\n@Viewport()\nclass SomeViewportDirective {}\n\n@Component({\n  componentServices: [SomeComponentService]\n})\nclass SomeComponentDirective {}\n\n@Decorator()\nclass SomeDecoratorDirective {}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}