{"version":3,"sources":["directive_parser_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/directive_parser_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {DirectiveParser} from 'angular2/src/core/compiler/pipeline/directive_parser';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\nimport {Component, Decorator, Viewport} from 'angular2/src/core/annotations/annotations';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {Lexer, Parser} from 'angular2/change_detection';\n\nexport function main() {\n  describe('DirectiveParser', () => {\n    var reader, directives;\n\n    beforeEach( () => {\n      reader = new DirectiveMetadataReader();\n      directives = [\n        SomeDecorator,\n        SomeDecoratorIgnoringChildren,\n        SomeDecoratorWithBinding,\n        SomeViewport,\n        SomeViewport2,\n        SomeComponent,\n        SomeComponent2\n      ];\n    });\n\n    function createPipeline({propertyBindings, variableBindings}={}) {\n      var parser = new Parser(new Lexer());\n      var annotatedDirectives = ListWrapper.create();\n      for (var i=0; i<directives.length; i++) {\n        ListWrapper.push(annotatedDirectives, reader.read(directives[i]));\n      }\n\n      return new CompilePipeline([new MockStep((parent, current, control) => {\n          if (isPresent(propertyBindings)) {\n            StringMapWrapper.forEach(propertyBindings, (v, k) => {\n              current.addPropertyBinding(k, parser.parseBinding(v, null));\n            });\n          }\n          if (isPresent(variableBindings)) {\n            current.variableBindings = MapWrapper.createFromStringMap(variableBindings);\n          }\n        }), new DirectiveParser(annotatedDirectives)]);\n    }\n\n    it('should not add directives if they are not used', () => {\n      var results = createPipeline().process(el('<div></div>'));\n      expect(results[0].decoratorDirectives).toBe(null);\n      expect(results[0].componentDirective).toBe(null);\n      expect(results[0].viewportDirective).toBe(null);\n    });\n\n    describe('component directives', () => {\n      it('should detect them in attributes', () => {\n        var results = createPipeline().process(el('<div some-comp></div>'));\n        expect(results[0].componentDirective).toEqual(reader.read(SomeComponent));\n      });\n\n      it('component directives must be first in collected directives', () => {\n        var results = createPipeline().process(el('<div some-comp some-decor></div>'));\n        var dirs = results[0].getAllDirectives();\n        expect(dirs.length).toEqual(2);\n        expect(dirs[0]).toEqual(reader.read(SomeComponent));\n        expect(dirs[1]).toEqual(reader.read(SomeDecorator));\n      });\n\n      it('should detect them in property bindings', () => {\n        var pipeline = createPipeline({propertyBindings: {\n          'some-comp': 'someExpr'\n        }});\n        var results = pipeline.process(el('<div></div>'));\n        expect(results[0].componentDirective).toEqual(reader.read(SomeComponent));\n      });\n\n      it('should detect them in variable bindings', () => {\n        var pipeline = createPipeline({variableBindings: {\n          'some-comp': 'someExpr'\n        }});\n        var results = pipeline.process(el('<div></div>'));\n        expect(results[0].componentDirective).toEqual(reader.read(SomeComponent));\n      });\n\n      it('should not allow multiple component directives on the same element', () => {\n        expect( () => {\n          createPipeline().process(\n            el('<div some-comp some-comp2></div>')\n          );\n        }).toThrowError('Only one component directive per element is allowed!');\n      });\n\n      it('should not allow component directives on <template> elements', () => {\n        expect( () => {\n          createPipeline().process(\n            el('<template some-comp></template>')\n          );\n        }).toThrowError('Only template directives are allowed on <template> elements!');\n      });\n    });\n\n    describe('viewport directives', () => {\n      it('should detect them in attributes', () => {\n        var results = createPipeline().process(el('<template some-templ></template>'));\n        expect(results[0].viewportDirective).toEqual(reader.read(SomeViewport));\n      });\n\n      it('should detect them in property bindings', () => {\n        var pipeline = createPipeline({propertyBindings: {\n          'some-templ': 'someExpr'\n        }});\n        var results = pipeline.process(el('<template></template>'));\n        expect(results[0].viewportDirective).toEqual(reader.read(SomeViewport));\n      });\n\n      it('should detect them in variable bindings', () => {\n        var pipeline = createPipeline({variableBindings: {\n          'some-templ': 'someExpr'\n        }});\n        var results = pipeline.process(el('<template></template>'));\n        expect(results[0].viewportDirective).toEqual(reader.read(SomeViewport));\n      });\n\n      it('should not allow multiple viewport directives on the same element', () => {\n        expect( () => {\n          createPipeline().process(\n            el('<template some-templ some-templ2></template>')\n          );\n        }).toThrowError('Only one template directive per element is allowed!');\n      });\n\n      it('should not allow viewport directives on non <template> elements', () => {\n        expect( () => {\n          createPipeline().process(\n            el('<div some-templ></div>')\n          );\n        }).toThrowError('Viewport directives need to be placed on <template> elements or elements with template attribute!');\n      });\n    });\n\n    describe('decorator directives', () => {\n      it('should detect them in attributes', () => {\n        var results = createPipeline().process(el('<div some-decor></div>'));\n        expect(results[0].decoratorDirectives).toEqual([reader.read(SomeDecorator)]);\n      });\n\n      it('should detect them in property bindings', () => {\n        var pipeline = createPipeline({propertyBindings: {\n          'some-decor': 'someExpr'\n        }});\n        var results = pipeline.process(el('<div></div>'));\n        expect(results[0].decoratorDirectives).toEqual([reader.read(SomeDecorator)]);\n      });\n\n      it('should compile children by default', () => {\n        var results = createPipeline().process(el('<div some-decor></div>'));\n        expect(results[0].compileChildren).toEqual(true);\n      });\n\n      it('should stop compiling children when specified in the decorator config', () => {\n        var results = createPipeline().process(el('<div some-decor-ignoring-children></div>'));\n        expect(results[0].compileChildren).toEqual(false);\n      });\n\n      it('should detect them in variable bindings', () => {\n        var pipeline = createPipeline({variableBindings: {\n          'some-decor': 'someExpr'\n        }});\n        var results = pipeline.process(el('<div></div>'));\n        expect(results[0].decoratorDirectives).toEqual([reader.read(SomeDecorator)]);\n      });\n\n      it('should not allow decorator directives on <template> elements', () => {\n        expect( () => {\n          createPipeline().process(\n            el('<template some-decor></template>')\n          );\n        }).toThrowError('Only template directives are allowed on <template> elements!');\n      });\n\n      it('should not instantiate decorator directive twice', () => {\n        var pipeline = createPipeline({propertyBindings: {\n          'some-decor-with-binding': 'someExpr'\n        }});\n        var results = pipeline.process(el('<div some-decor-with-binding=\"foo\"></div>'));\n        expect(results[0].decoratorDirectives.length).toEqual(1);\n        expect(results[0].decoratorDirectives).toEqual([reader.read(SomeDecoratorWithBinding)]);\n      });\n    });\n  });\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\n@Decorator({\n  selector: '[some-decor]'\n})\nclass SomeDecorator {}\n\n@Decorator({\n  selector: '[some-decor-ignoring-children]',\n  compileChildren: false\n})\nclass SomeDecoratorIgnoringChildren {\n}\n\n@Decorator({\n  selector: '[some-decor-with-binding]',\n  bind: {\n    'some-decor-with-binding': 'foo'\n  }\n})\nclass SomeDecoratorWithBinding {}\n\n@Viewport({\n  selector: '[some-templ]'\n})\nclass SomeViewport {}\n\n@Viewport({\n  selector: '[some-templ2]'\n})\nclass SomeViewport2 {}\n\n@Component({selector: '[some-comp]'})\nclass SomeComponent {}\n\n@Component({selector: '[some-comp2]'})\nclass SomeComponent2 {}\n\n@Component()\n@Template({\n    directives: [SomeDecorator, SomeViewport, SomeViewport2, SomeComponent, SomeComponent2]\n})\nclass MyComp {}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}