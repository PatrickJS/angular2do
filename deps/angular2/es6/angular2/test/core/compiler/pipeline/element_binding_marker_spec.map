{"version":3,"sources":["element_binding_marker_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/element_binding_marker_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ElementBindingMarker} from 'angular2/src/core/compiler/pipeline/element_binding_marker';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step'\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {Viewport, Decorator, Component} from 'angular2/src/core/annotations/annotations';\n\nexport function main() {\n  describe('ElementBindingMarker', () => {\n\n    function createPipeline({textNodeBindings, propertyBindings, variableBindings, eventBindings,\n      directives, ignoreBindings}={}) {\n      var reader = new DirectiveMetadataReader();\n      return new CompilePipeline([\n        new MockStep((parent, current, control) => {\n            if (isPresent(textNodeBindings)) {\n              current.textNodeBindings = textNodeBindings;\n            }\n            if (isPresent(propertyBindings)) {\n              current.propertyBindings = propertyBindings;\n            }\n            if (isPresent(variableBindings)) {\n              current.variableBindings = variableBindings;\n            }\n            if (isPresent(eventBindings)) {\n              current.eventBindings = eventBindings;\n            }\n            if (isPresent(ignoreBindings)) {\n              current.ignoreBindings = ignoreBindings;\n            }\n            if (isPresent(directives)) {\n              for (var i=0; i<directives.length; i++) {\n                current.addDirective(reader.read(directives[i]));\n              }\n            }\n          }), new ElementBindingMarker()\n      ]);\n    }\n\n    it('should not mark empty elements', () => {\n      var results = createPipeline().process(el('<div></div>'));\n      assertBinding(results[0], false);\n    });\n\n    it('should not mark elements when ignoreBindings is true', () => {\n      var textNodeBindings = MapWrapper.create();\n      MapWrapper.set(textNodeBindings, 0, 'expr');\n      var results = createPipeline({textNodeBindings: textNodeBindings,\n        ignoreBindings: true}).process(el('<div></div>'));\n      assertBinding(results[0], false);\n    });\n\n    it('should mark elements with text node bindings', () => {\n      var textNodeBindings = MapWrapper.create();\n      MapWrapper.set(textNodeBindings, 0, 'expr');\n      var results = createPipeline({textNodeBindings: textNodeBindings}).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n    it('should mark elements with property bindings', () => {\n      var propertyBindings = MapWrapper.createFromStringMap({'a': 'expr'});\n      var results = createPipeline({propertyBindings: propertyBindings}).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n    it('should mark elements with variable bindings', () => {\n      var variableBindings = MapWrapper.createFromStringMap({'a': 'expr'});\n      var results = createPipeline({variableBindings: variableBindings}).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n    it('should mark elements with event bindings', () => {\n      var eventBindings = MapWrapper.createFromStringMap({'click': 'expr'});\n      var results = createPipeline({eventBindings: eventBindings}).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n    it('should mark elements with decorator directives', () => {\n      var results = createPipeline({\n        directives: [SomeDecoratorDirective]\n      }).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n    it('should mark elements with template directives', () => {\n      var results = createPipeline({\n        directives: [SomeViewportDirective]\n      }).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n    it('should mark elements with component directives', () => {\n      var results = createPipeline({\n        directives: [SomeComponentDirective]\n      }).process(el('<div></div>'));\n      assertBinding(results[0], true);\n    });\n\n  });\n}\n\nfunction assertBinding(pipelineElement, shouldBePresent) {\n  expect(pipelineElement.hasBindings).toBe(shouldBePresent);\n  expect(DOM.hasClass(pipelineElement.element, 'ng-binding')).toBe(shouldBePresent);\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\n@Viewport()\nclass SomeViewportDirective {}\n\n@Component()\nclass SomeComponentDirective {}\n\n@Decorator()\nclass SomeDecoratorDirective {}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}