{"version":3,"sources":["shim_component_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/shadow_dom/shim_component_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/shadow_dom/","sourcesContent":["import {describe, beforeEach, it, expect, ddescribe, iit, SpyObject, el} from 'angular2/test_lib';\n\nimport {\n  ShimNativeComponent,\n  ShimEmulatedComponent,\n  resetShimComponentCache\n} from 'angular2/src/core/compiler/shadow_dom_emulation/shim_component';\n\nimport {ShadowCss} from 'angular2/src/core/compiler/shadow_dom_emulation/shadow_css';\n\nimport {Type} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/facade/dom';\n\nexport function main() {\n  describe('ShimComponent', () => {\n\n    describe('ShimNativeComponent', () => {\n      function createShim(component: Type) {\n        return new ShimNativeComponent(component);\n      }\n\n      it('should not transform the CSS', () => {\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim = createShim(SomeComponent);\n        var shimCss = shim.shimCssText(css);\n        expect(css).toEqual(shimCss);\n      });\n\n      it('should not transform content elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimContentElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual(html);\n      });\n\n      it('should not transform host elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimHostElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual(html);\n      });\n    });\n\n    describe('ShimEmulatedComponent', () => {\n      beforeEach(() => {\n        resetShimComponentCache();\n      });\n\n      function createShim(component: Type) {\n        return new ShimEmulatedComponent(component);\n      }\n\n      it('should transform the CSS', () => {\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim = createShim(SomeComponent);\n        var shimCss = shim.shimCssText(css);\n        expect(shimCss).not.toEqual(css);\n        var shadowCss = new ShadowCss();\n        expect(shimCss).toEqual(shadowCss.shimCssText(css, '_ngcontent-0', '_nghost-0'));\n      });\n\n      it('should transform content elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimContentElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual('<p _ngcontent-0=\"\">foo</p>');\n      });\n\n      it('should not transform host elements', () => {\n        var html = '<p>foo</p>';\n        var element = el(html);\n        var shim = createShim(SomeComponent);\n        shim.shimHostElement(element);\n        expect(DOM.getOuterHTML(element)).toEqual('<p _nghost-0=\"\">foo</p>');\n      });\n\n      it('should generate the same output for the same component', () => {\n        var html = '<p>foo</p>';\n        var content1 = el(html);\n        var host1 = el(html);\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim1 = createShim(SomeComponent);\n        shim1.shimContentElement(content1);\n        shim1.shimHostElement(host1);\n        var shimCss1 = shim1.shimCssText(css);\n\n        var content2 = el(html);\n        var host2 = el(html);\n        var shim2 = createShim(SomeComponent);\n        shim2.shimContentElement(content2);\n        shim2.shimHostElement(host2);\n        var shimCss2 = shim2.shimCssText(css);\n\n        expect(DOM.getOuterHTML(content1)).toEqual(DOM.getOuterHTML(content2));\n        expect(DOM.getOuterHTML(host1)).toEqual(DOM.getOuterHTML(host2));\n        expect(shimCss1).toEqual(shimCss2);\n      });\n\n      it('should generate different outputs for different components', () => {\n        var html = '<p>foo</p>';\n        var content1 = el(html);\n        var host1 = el(html);\n        var css = '.foo {color: blue;} :host{color: red;}';\n        var shim1 = createShim(SomeComponent);\n        shim1.shimContentElement(content1);\n        shim1.shimHostElement(host1);\n        var shimCss1 = shim1.shimCssText(css);\n\n        var content2 = el(html);\n        var host2 = el(html);\n        var shim2 = createShim(SomeComponent2);\n        shim2.shimContentElement(content2);\n        shim2.shimHostElement(host2);\n        var shimCss2 = shim2.shimCssText(css);\n\n        expect(DOM.getOuterHTML(content1)).not.toEqual(DOM.getOuterHTML(content2));\n        expect(DOM.getOuterHTML(host1)).not.toEqual(DOM.getOuterHTML(host2));\n        expect(shimCss1).not.toEqual(shimCss2);\n      });\n    });\n  });\n}\n\nclass SomeComponent {}\nclass SomeComponent2 {}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}