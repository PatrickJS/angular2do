{"version":3,"sources":["view_container_spec.js","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/view_container_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/","sourcesContent":["import {describe, xit, it, expect, beforeEach, ddescribe, iit, el, proxy} from 'angular2/test_lib';\nimport {View, ProtoView} from 'angular2/src/core/compiler/view';\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\nimport {IMPLEMENTS} from 'angular2/src/facade/lang';\nimport {DOM, Node} from 'angular2/src/facade/dom';\nimport {ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {Injector} from 'angular2/di';\nimport {ProtoElementInjector, ElementInjector} from 'angular2/src/core/compiler/element_injector';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {DynamicProtoChangeDetector, ChangeDetector, Lexer, Parser} from 'angular2/change_detection';\n\nfunction createView(nodes) {\n  var view = new View(null, nodes, new DynamicProtoChangeDetector(null), MapWrapper.create());\n  view.init([], [], [], [], [], [], []);\n  return view;\n}\n\n@proxy\n@IMPLEMENTS(ChangeDetector)\nclass AttachableChangeDetector {\n  parent;\n  constructor() {\n  }\n  remove() {\n    this.parent = null;\n  }\n  noSuchMethod(i) {\n    super.noSuchMethod(i);\n  }\n}\n\n@proxy\n@IMPLEMENTS(View)\nclass HydrateAwareFakeView {\n  isHydrated: boolean;\n  nodes: List<Node>;\n  changeDetector: ChangeDetector;\n  rootElementInjectors;\n  constructor(isHydrated) {\n    this.isHydrated = isHydrated;\n    this.nodes = [DOM.createElement('div')];\n    this.rootElementInjectors = [];\n    this.changeDetector = new AttachableChangeDetector();\n  }\n\n  hydrated() {\n    return this.isHydrated;\n  }\n\n  hydrate(_, __, ___) {\n    this.isHydrated = true;\n  }\n\n  dehydrate() {\n    this.isHydrated = false;\n  }\n\n  noSuchMethod(i) {\n    super.noSuchMethod(i);\n  }\n}\n\nexport function main() {\n  describe('ViewContainer', () => {\n    var viewContainer, parentView, protoView, dom, customViewWithOneNode,\n        customViewWithTwoNodes, elementInjector;\n\n    beforeEach(() => {\n      dom = el(`<div><stuff></stuff><div insert-after-me></div><stuff></stuff></div>`);\n      var insertionElement = dom.childNodes[1];\n      parentView = createView([dom.childNodes[0]]);\n      protoView = new ProtoView(el('<div>hi</div>'), new DynamicProtoChangeDetector(null), new NativeShadowDomStrategy());\n      elementInjector = new ElementInjector(null, null, null, null);\n      viewContainer = new ViewContainer(parentView, insertionElement, protoView, elementInjector, null);\n      customViewWithOneNode = createView([el('<div>single</div>')]);\n      customViewWithTwoNodes = createView([el('<div>one</div>'), el('<div>two</div>')]);\n    });\n\n    describe('when dehydrated', () => {\n      it('should throw if create is called', () => {\n        expect(() => viewContainer.create()).toThrowError();\n      });\n    });\n\n    describe('when hydrated', () => {\n      function textInViewContainer() {\n        var out = '';\n        // skipping starting filler, insert-me and final filler.\n        for (var i = 2; i < dom.childNodes.length - 1; i++) {\n          if (i != 2) out += ' ';\n          out += DOM.getInnerHTML(dom.childNodes[i]);\n        }\n        return out;\n      }\n\n      beforeEach(() => {\n        viewContainer.hydrate(new Injector([]), null);\n        var fillerView = createView([el('<filler>filler</filler>')]);\n        viewContainer.insert(fillerView);\n      });\n\n      it('should create new views from protoView', () => {\n        viewContainer.create();\n        expect(textInViewContainer()).toEqual('filler hi');\n        expect(viewContainer.length).toBe(2);\n      });\n\n      it('should create new views from protoView at index', () => {\n        viewContainer.create(0);\n        expect(textInViewContainer()).toEqual('hi filler');\n        expect(viewContainer.length).toBe(2);\n      });\n\n      it('should insert new views at the end by default', () => {\n        viewContainer.insert(customViewWithOneNode);\n        expect(textInViewContainer()).toEqual('filler single');\n        expect(viewContainer.get(1)).toBe(customViewWithOneNode);\n        expect(viewContainer.length).toBe(2);\n      });\n\n      it('should insert new views at the given index', () => {\n        viewContainer.insert(customViewWithOneNode, 0);\n        expect(textInViewContainer()).toEqual('single filler');\n        expect(viewContainer.get(0)).toBe(customViewWithOneNode);\n        expect(viewContainer.length).toBe(2);\n      });\n\n      it('should remove the last view by default', () => {\n        viewContainer.insert(customViewWithOneNode);\n\n        viewContainer.remove();\n\n        expect(textInViewContainer()).toEqual('filler');\n        expect(viewContainer.length).toBe(1);\n      });\n\n      it('should remove the view at a given index', () => {\n        viewContainer.insert(customViewWithOneNode);\n        viewContainer.insert(customViewWithTwoNodes);\n\n        viewContainer.remove(1);\n\n        expect(textInViewContainer()).toEqual('filler one two');\n        expect(viewContainer.get(1)).toBe(customViewWithTwoNodes);\n        expect(viewContainer.length).toBe(2);\n      });\n\n      it('should detach the last view by default', () => {\n        viewContainer.insert(customViewWithOneNode);\n        expect(viewContainer.length).toBe(2);\n\n        var detachedView = viewContainer.detach();\n\n        expect(detachedView).toBe(customViewWithOneNode);\n        expect(textInViewContainer()).toEqual('filler');\n        expect(viewContainer.length).toBe(1);\n      });\n\n      it('should detach the view at a given index', () => {\n        viewContainer.insert(customViewWithOneNode);\n        viewContainer.insert(customViewWithTwoNodes);\n        expect(viewContainer.length).toBe(3);\n\n        var detachedView = viewContainer.detach(1);\n        expect(detachedView).toBe(customViewWithOneNode);\n        expect(textInViewContainer()).toEqual('filler one two');\n        expect(viewContainer.length).toBe(2);\n      });\n\n      it('should keep views hydration state during insert', () => {\n        var hydratedView = new HydrateAwareFakeView(true);\n        var dehydratedView = new HydrateAwareFakeView(false);\n        viewContainer.insert(hydratedView);\n        viewContainer.insert(dehydratedView);\n\n        expect(hydratedView.hydrated()).toBe(true);\n        expect(dehydratedView.hydrated()).toBe(false);\n      });\n\n      it('should dehydrate on remove', () => {\n        var hydratedView = new HydrateAwareFakeView(true);\n        viewContainer.insert(hydratedView);\n        viewContainer.remove();\n\n        expect(hydratedView.hydrated()).toBe(false);\n      });\n\n      it('should keep views hydration state during detach', () => {\n        var hydratedView = new HydrateAwareFakeView(true);\n        var dehydratedView = new HydrateAwareFakeView(false);\n        viewContainer.insert(hydratedView);\n        viewContainer.insert(dehydratedView);\n\n        expect(viewContainer.detach().hydrated()).toBe(false);\n        expect(viewContainer.detach().hydrated()).toBe(true);\n      });\n\n      it('should support adding/removing views with more than one node', () => {\n        viewContainer.insert(customViewWithTwoNodes);\n        viewContainer.insert(customViewWithOneNode);\n\n        expect(textInViewContainer()).toEqual('filler one two single');\n\n        viewContainer.remove(1);\n        expect(textInViewContainer()).toEqual('filler single');\n      });\n    });\n\n    describe('should update injectors and parent views.', () => {\n      var fancyView;\n      beforeEach(() => {\n        var parser = new Parser(new Lexer());\n        viewContainer.hydrate(new Injector([]), null);\n\n        var pv = new ProtoView(el('<div class=\"ng-binding\">{{}}</div>'),\n          new DynamicProtoChangeDetector(null), new NativeShadowDomStrategy());\n        pv.bindElement(new ProtoElementInjector(null, 1, [SomeDirective]));\n        pv.bindTextNode(0, parser.parseBinding('foo', null));\n        fancyView = pv.instantiate(null, null);\n      });\n\n      it('hydrating should update rootElementInjectors and parent change detector', () => {\n        viewContainer.insert(fancyView);\n        ListWrapper.forEach(fancyView.rootElementInjectors, (inj) =>\n            expect(inj.parent).toBe(elementInjector));\n\n        expect(parentView.changeDetector.children.length).toBe(1);\n      });\n\n      it('dehydrating should update rootElementInjectors and parent change detector', () => {\n        viewContainer.insert(fancyView);\n        viewContainer.remove();\n        ListWrapper.forEach(fancyView.rootElementInjectors, (inj) =>\n            expect(inj.parent).toBe(null));\n        expect(parentView.changeDetector.children.length).toBe(0);\n        expect(viewContainer.length).toBe(0);\n      });\n    });\n  });\n}\n\nclass SomeDirective {\n  prop;\n  constructor() {\n    this.prop = 'foo';\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}