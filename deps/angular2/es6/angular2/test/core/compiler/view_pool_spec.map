{"version":3,"sources":["view_pool_spec.js","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA,KAAO,EAAC,QAAO;AAAG,IAAE;AAAG,GAAC;AAAG,OAAK;AAAG,WAAS;AAAG,UAAQ;AAAG,IAAE;AAAG,GAAC;AAAG,MAAI,CAAC,KAAO,oBAAkB,CAAC;AAElG,KAAO,EAAC,IAAG,CAAC,KAAO,kCAAgC,CAAC;AACpD,KAAO,EAAC,QAAO,CAAC,KAAO,uCAAqC,CAAC;AAC7D,KAAO,EAAC,UAAS,CAAC,KAAO,2BAAyB,CAAC;AAInD,IAAM,SAAO;AACX,aAAW,CAAE,CAAA,CAAG;AACd,QAAI,aAAa,AAAC,CAAC,CAAA,CAAC,CAAC;EACvB;AAAA,AACF;ACZA,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cDKzB,MAAI,KACJ,WAAS,AAAC,CAAC,IAAG,CAAC,ECNiC;EAAC,CAAC,CAAC,CAAC;ADarD,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,SAAO,AAAC,CAAC,UAAS,CAAG,EAAC,AAAD,IAAM;AACzB,AAAI,MAAA,CAAA,QAAO;AAAG,eAAO,EAAI,EAAA,CAAC;AAC1B,aAAS,AAAC,CAAC,CAAC,AAAD,IAAM;AACf,aAAO,EAAI,IAAI,SAAO,AAAC,CAAC,QAAO,CAAC,CAAC;IACnC,CAAC,CAAA;AAED,KAAC,AAAC,CAAC,4CAA2C,CAAG,EAAC,AAAD,IAAM;AACrD,WAAK,AAAC,CAAC,QAAO,IAAI,AAAC,EAAC,CAAC,SAAS,AAAC,EAAC,CAAC;AACjC,WAAK,AAAC,CAAC,QAAO,OAAO,AAAC,EAAC,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;IACnC,CAAC,CAAA;AAED,KAAC,AAAC,CAAC,8CAA6C,CAAG,EAAC,AAAD,IAAM;AACvD,AAAI,QAAA,CAAA,IAAG,EAAI,IAAI,SAAO,AAAC,EAAC,CAAC;AACzB,aAAO,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;AACnB,WAAK,AAAC,CAAC,QAAO,OAAO,AAAC,EAAC,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;AAEjC,WAAK,AAAC,CAAC,QAAO,IAAI,AAAC,EAAC,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;AACjC,WAAK,AAAC,CAAC,QAAO,OAAO,AAAC,EAAC,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;IACnC,CAAC,CAAA;AAED,KAAC,AAAC,CAAC,+CAA8C,CAAG,EAAC,AAAD,IAAM;AACxD,UAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,QAAO,EAAI,EAAA,CAAG,CAAA,CAAA,EAAE;AAAG,eAAO,KAAK,AAAC,CAAC,GAAI,SAAO,AAAC,EAAC,CAAC,CAAC;AAAA,AACpE,WAAK,AAAC,CAAC,QAAO,OAAO,AAAC,EAAC,CAAC,KAAK,AAAC,CAAC,QAAO,CAAC,CAAC;AAExC,UAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,SAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACjC,aAAK,AAAC,CAAC,QAAO,IAAI,AAAC,EAAC,CAAC,IAAI,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;MACvC;AAAA,AACA,WAAK,AAAC,CAAC,QAAO,IAAI,AAAC,EAAC,CAAC,SAAS,AAAC,EAAC,CAAC;IACnC,CAAC,CAAA;EACH,CAAC,CAAA;AACH;AAAA","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/view_pool_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/compiler/","sourcesContent":["import {describe, xit, it, expect, beforeEach, ddescribe, iit, el, proxy} from 'angular2/test_lib';\n\nimport {View} from 'angular2/src/core/compiler/view';\nimport {ViewPool} from 'angular2/src/core/compiler/view_pool';\nimport {IMPLEMENTS} from 'angular2/src/facade/lang';\n\n@proxy\n@IMPLEMENTS(View)\nclass FakeView {\n  noSuchMethod(i) {\n    super.noSuchMethod(i);\n  }\n}\n\nexport function main() {\n  describe('ViewPool', () => {\n    var viewPool, capacity = 3;\n    beforeEach(() => {\n      viewPool = new ViewPool(capacity);\n    })\n\n    it('should return null when there are no views', () => {\n      expect(viewPool.pop()).toBeNull();\n      expect(viewPool.length()).toBe(0);\n    })\n\n    it('should support storing and retrieving a view', () => {\n      var view = new FakeView();\n      viewPool.push(view);\n      expect(viewPool.length()).toBe(1);\n\n      expect(viewPool.pop()).toBe(view);\n      expect(viewPool.length()).toBe(0);\n    })\n\n    it('should not store more views that its capacity', () => {\n      for (var i = 0; i < capacity * 2; i++) viewPool.push(new FakeView());\n      expect(viewPool.length()).toBe(capacity);\n\n      for (var i = 0; i < capacity; i++) {\n        expect(viewPool.pop()).not.toBe(null);\n      }\n      expect(viewPool.pop()).toBeNull();\n    })\n  })\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}