{"version":3,"sources":["annotations_spec.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ;AAAG,SAAO;AAAG,GAAC;AAAG,IAAE;AAAG,OAAK;AAAG,WAAS,CAAC,KAAO,oBAAkB,CAAC;AAClF,KAAO,EAAC,SAAQ;AAAG,SAAO,CAAC,KAAO,4CAA0C,CAAC;AAE7E,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,SAAO,AAAC,CAAC,WAAU,CAAG,EAAC,AAAD,IAAM;AAC1B,WAAO,AAAC,CAAC,WAAU,CAAG,EAAC,AAAD,IAAM;AAC1B,OAAC,AAAC,CAAC,6CAA4C,CAAG,EAAC,AAAD,IAAM;AACtD,AAAI,UAAA,CAAA,CAAA,EAAI,IAAI,UAAQ,AAAC,EAAC,CAAC;AACvB,aAAK,AAAC,CAAC,CAAA,iBAAiB,AAAC,CAAC,QAAO,CAAC,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;MAClD,CAAC,CAAC;AAEF,OAAC,AAAC,CAAC,8DAA6D,CAAG,EAAC,AAAD,IAAM;AACvE,AAAI,UAAA,CAAA,CAAA,EAAI,IAAI,UAAQ,AAAC,CAAC,CAAC,SAAQ,CAAE,GAAC,CAAC,CAAC,CAAC;AACrC,aAAK,AAAC,CAAC,CAAA,iBAAiB,AAAC,CAAC,QAAO,CAAC,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;MAClD,CAAC,CAAC;AAEF,OAAC,AAAC,CAAC,0BAAyB,CAAG,EAAC,AAAD,IAAM;AACnC,AAAI,UAAA,CAAA,CAAA,EAAI,IAAI,UAAQ,AAAC,CAAC,CAAC,SAAQ,CAAE,EAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,CAAA,iBAAiB,AAAC,CAAC,QAAO,CAAC,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;MACjD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAAA","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/annotations/annotations_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/core/annotations/","sourcesContent":["import {ddescribe, describe, it, iit, expect, beforeEach} from 'angular2/test_lib';\nimport {Directive, onChange} from 'angular2/src/core/annotations/annotations';\n\nexport function main() {\n  describe(\"Directive\", () => {\n    describe(\"lifecycle\", () => {\n      it(\"should be false when no lifecycle specified\", () => {\n        var d = new Directive();\n        expect(d.hasLifecycleHook(onChange)).toBe(false);\n      });\n\n      it(\"should be false when the lifecycle does not contain the hook\", () => {\n        var d = new Directive({lifecycle:[]});\n        expect(d.hasLifecycleHook(onChange)).toBe(false);\n      });\n\n      it(\"should be true otherwise\", () => {\n        var d = new Directive({lifecycle:[onChange]});\n        expect(d.hasLifecycleHook(onChange)).toBe(true);\n      });\n    });\n  });\n}\n"]}