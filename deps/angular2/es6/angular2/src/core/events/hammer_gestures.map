{"version":3,"sources":["hammer_gestures.es6","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,0BAAyB,CAAC,KAAO,kBAAgB,CAAC;AAC1D,KAAO,EAAC,OAAM,CAAC,KAAO,0BAAwB,CAAC;AAC/C,KAAO,EAAC,SAAQ;AAAG,cAAY,CAAC,KAAO,2BAAyB,CAAC;AAEjE,KAAO,MAAM,qBAAmB,QAAU,2BAAyB;AACjE,YAAU,CAAE,AAAD,CAAG;AACZ,QAAI,AAAC,EAAC,CAAC;EACT;AAAA,AAEA,SAAO,CAAE,SAAQ,AAAO;ACT1B,SAAK,cAAc,WCAnB,CAAA,MAAK,KAAK,QDA4B,CAAA;ADUlC,OAAI,CAAC,KAAI,SAAS,AAAC,CAAC,SAAQ,CAAC;AGVjC,WAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHUkB,KAAI,CGVJ,CDA3C,CAAA,MAAK,KAAK,SCAqD,CAAA;AHUf,AAE5C,OAAI,CAAC,SAAQ,AAAC,CAAC,MAAK,OAAO,CAAC,CAAG;AAC7B,UAAM,IAAI,cAAY,AAAC,CAAC,yCAAyC,SAAQ,QAAQ,CAAC,CAAC;IACrF;AAAA,AGdJ,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHgBd,IAAG,CGhB6B,CDA3C,CAAA,MAAK,KAAK,SCAqD,CAAA;EHiB7D;AAEA,iBAAe,CAAE,OAAM,AAAQ,CAAG,CAAA,SAAQ,AAAO,CAAG,CAAA,OAAM,AAAS,CAAG;ACnBxE,SAAK,cAAc,SDmBQ,QAAM,YEnBjC,CAAA,MAAK,KAAK,iBFmBoD,SAAO,CCnB/B,CAAA;ADoBlC,AAAI,MAAA,CAAA,IAAG,EAAI,CAAA,IAAG,QAAQ,QAAQ,AAAC,EAAC,CAAC;AACjC,YAAQ,EAAI,CAAA,SAAQ,YAAY,AAAC,EAAC,CAAC;AAEnC,OAAG,kBAAkB,AAAC,CAAC,SAAU,AAAD,CAAG;AAEjC,AAAI,QAAA,CAAA,EAAC,EAAI,IAAI,OAAK,AAAC,CAAC,OAAM,CAAC,CAAC;AAC5B,OAAC,IAAI,AAAC,CAAC,OAAM,CAAC,IAAI,AAAC,CAAC,CAAC,MAAK,CAAG,KAAG,CAAC,CAAC,CAAC;AACnC,OAAC,IAAI,AAAC,CAAC,QAAO,CAAC,IAAI,AAAC,CAAC,CAAC,MAAK,CAAG,KAAG,CAAC,CAAC,CAAC;AAEpC,OAAC,GAAG,AAAC,CAAC,SAAQ,CAAG,UAAU,QAAO,CAAG;AACnC,WAAG,IAAI,AAAC,CAAC,SAAU,AAAD,CAAG;AACnB,gBAAM,AAAC,CAAC,QAAO,CAAC,CAAC;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AAAA,AACF;AAAA,AIpCA,KAAK,eAAe,AAAC,uDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YFD1B,MAAK,KAAK,UECuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YJkBC,OAAM,IEnBjC,MAAK,KAAK,WFmBoD,QAAO,GIlBpB;EAAC,CAAC,CAAC,CAAC;AJoCrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/events/hammer_gestures.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/events/","sourcesContent":["import {HammerGesturesPluginCommon} from './hammer_common';\nimport {Element} from 'angular2/src/facade/dom';\nimport {isPresent, BaseException} from 'angular2/src/facade/lang';\n\nexport class HammerGesturesPlugin extends HammerGesturesPluginCommon {\n  constructor() {\n    super();\n  }\n\n  supports(eventName:string):boolean {\n    if (!super.supports(eventName)) return false;\n\n    if (!isPresent(window.Hammer)) {\n      throw new BaseException(`Hammer.js is not loaded, can not bind ${eventName} event`);\n    }\n\n    return true;\n  }\n\n  addEventListener(element:Element, eventName:string, handler:Function) {\n    var zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    zone.runOutsideAngular(function () {\n      // Creating the manager bind events, must be done outside of angular\n      var mc = new Hammer(element);\n      mc.get('pinch').set({enable: true});\n      mc.get('rotate').set({enable: true});\n\n      mc.on(eventName, function (eventObj) {\n        zone.run(function () {\n          handler(eventObj);\n        });\n      });\n    });\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}