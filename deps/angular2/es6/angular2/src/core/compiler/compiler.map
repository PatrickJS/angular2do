{"version":3,"sources":["compiler.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/compiler.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {Type, isBlank, isPresent, BaseException, normalizeBlank, stringify} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM, Element} from 'angular2/src/facade/dom';\n\nimport {ChangeDetection, Parser} from 'angular2/change_detection';\n\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {ProtoView} from './view';\nimport {CompilePipeline} from './pipeline/compile_pipeline';\nimport {CompileElement} from './pipeline/compile_element';\nimport {createDefaultSteps} from './pipeline/default_steps';\nimport {TemplateLoader} from './template_loader';\nimport {TemplateResolver} from './template_resolver';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {Template} from '../annotations/template';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {CompileStep} from './pipeline/compile_step';\n\n/**\n * Cache that stores the ProtoView of the template of a component.\n * Used to prevent duplicate work and resolve cyclic dependencies.\n */\nexport class CompilerCache {\n  _cache:Map;\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n\n  set(component:Type, protoView:ProtoView) {\n    MapWrapper.set(this._cache, component, protoView);\n  }\n\n  get(component:Type):ProtoView {\n    var result = MapWrapper.get(this._cache, component);\n    return normalizeBlank(result);\n  }\n\n  clear() {\n    MapWrapper.clear(this._cache);\n  }\n}\n\n/**\n * The compiler loads and translates the html templates of components into\n * nested ProtoViews. To decompose its functionality it uses\n * the CompilePipeline and the CompileSteps.\n */\nexport class Compiler {\n  _reader: DirectiveMetadataReader;\n  _parser:Parser;\n  _compilerCache:CompilerCache;\n  _changeDetection:ChangeDetection;\n  _templateLoader:TemplateLoader;\n  _compiling:Map<Type, Promise>;\n  _shadowDomStrategy: ShadowDomStrategy;\n  _shadowDomDirectives: List<DirectiveMetadata>;\n  _templateResolver: TemplateResolver;\n\n  constructor(changeDetection:ChangeDetection,\n              templateLoader:TemplateLoader,\n              reader: DirectiveMetadataReader,\n              parser:Parser,\n              cache:CompilerCache,\n              shadowDomStrategy: ShadowDomStrategy,\n              templateResolver: TemplateResolver) {\n    this._changeDetection = changeDetection;\n    this._reader = reader;\n    this._parser = parser;\n    this._compilerCache = cache;\n    this._templateLoader = templateLoader;\n    this._compiling = MapWrapper.create();\n    this._shadowDomStrategy = shadowDomStrategy;\n    this._shadowDomDirectives = [];\n    var types = shadowDomStrategy.polyfillDirectives();\n    for (var i = 0; i < types.length; i++) {\n      ListWrapper.push(this._shadowDomDirectives, reader.read(types[i]));\n    }\n    this._templateResolver = templateResolver;\n  }\n\n  createSteps(component:Type, template: Template):List<CompileStep> {\n    // Merge directive metadata (from the template and from the shadow dom strategy)\n    var dirMetadata = [];\n    var tplMetadata = ListWrapper.map(this._flattenDirectives(template),\n      (d) => this._reader.read(d));\n    dirMetadata = ListWrapper.concat(dirMetadata, tplMetadata);\n    dirMetadata = ListWrapper.concat(dirMetadata, this._shadowDomDirectives);\n\n    var cmpMetadata = this._reader.read(component);\n\n    return createDefaultSteps(this._changeDetection, this._parser, cmpMetadata, dirMetadata,\n      this._shadowDomStrategy);\n  }\n\n  compile(component: Type):Promise<ProtoView> {\n    var protoView = this._compile(component);\n    return PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compile(component: Type) {\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      // The component has already been compiled into a ProtoView,\n      // returns a resolved Promise.\n      return protoView;\n    }\n\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      // The component is already being compiled, attach to the existing Promise\n      // instead of re-compiling the component.\n      // It happens when a template references a component multiple times.\n      return pvPromise;\n    }\n\n    var template = this._templateResolver.resolve(component);\n\n    var tplElement = this._templateLoader.load(template);\n\n    if (PromiseWrapper.isPromise(tplElement)) {\n      pvPromise = PromiseWrapper.then(tplElement,\n        (el) => this._compileTemplate(template, el, component),\n        (_) => { throw new BaseException(`Failed to load the template for ${stringify(component)}`); }\n      );\n      MapWrapper.set(this._compiling, component, pvPromise);\n      return pvPromise;\n    }\n\n    return this._compileTemplate(template, tplElement, component);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compileTemplate(template: Template, tplElement: Element, component: Type) {\n    var pipeline = new CompilePipeline(this.createSteps(component, template));\n    var compileElements = pipeline.process(tplElement);\n    var protoView = compileElements[0].inheritedProtoView;\n\n    // Populate the cache before compiling the nested components,\n    // so that components can reference themselves in their template.\n    this._compilerCache.set(component, protoView);\n    MapWrapper.delete(this._compiling, component);\n\n    // Compile all the components from the template\n    var nestedPVPromises = [];\n    for (var i = 0; i < compileElements.length; i++) {\n      var ce = compileElements[i];\n      if (isPresent(ce.componentDirective)) {\n        this._compileNestedProtoView(ce, nestedPVPromises);\n      }\n    }\n\n    if (nestedPVPromises.length > 0) {\n      // Returns ProtoView Promise when there are any asynchronous nested ProtoViews.\n      // The promise will resolved after nested ProtoViews are compiled.\n      return PromiseWrapper.then(PromiseWrapper.all(nestedPVPromises),\n        (_) => protoView,\n        (e) => { throw new BaseException(`${e.message} -> Failed to compile ${stringify(component)}`); }\n      );\n    }\n\n    // When there is no asynchronous nested ProtoViews, return the ProtoView\n    return protoView;\n  }\n\n  _compileNestedProtoView(ce: CompileElement, promises: List<Promise>) {\n    var protoView = this._compile(ce.componentDirective.type);\n\n    if (PromiseWrapper.isPromise(protoView)) {\n      ListWrapper.push(promises, protoView);\n      protoView.then(function (protoView) {\n        ce.inheritedElementBinder.nestedProtoView = protoView;\n      });\n    } else {\n      ce.inheritedElementBinder.nestedProtoView = protoView;\n    }\n  }\n\n  _flattenDirectives(template: Template):List<Type> {\n    if (isBlank(template.directives)) return [];\n\n    var directives = [];\n    this._flattenList(template.directives, directives);\n\n    return directives;\n  }\n\n  _flattenList(tree:List<any>, out:List<Type>) {\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n\n}\n\n\n","assert.argumentTypes($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)"]}