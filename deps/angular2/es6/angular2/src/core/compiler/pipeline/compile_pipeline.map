{"version":3,"sources":["compile_pipeline.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/3274","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/pipeline/compile_pipeline.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/pipeline/","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Element, DOM} from 'angular2/src/facade/dom';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {CompileStep} from './compile_step';\n\n/**\n * CompilePipeline for executing CompileSteps recursively for\n * all elements in a template.\n */\nexport class CompilePipeline {\n  _control:CompileControl;\n  constructor(steps:List<CompileStep>) {\n    this._control = new CompileControl(steps);\n  }\n\n  process(rootElement:Element, compilationCtxtDescription:string = ''):List {\n    var results = ListWrapper.create();\n    this._process(results, null, new CompileElement(rootElement, compilationCtxtDescription), compilationCtxtDescription);\n    return results;\n  }\n\n  _process(results, parent:CompileElement, current:CompileElement, compilationCtxtDescription:string = '') {\n    var additionalChildren = this._control.internalProcess(results, 0, parent, current);\n\n    if (current.compileChildren) {\n      var node = DOM.firstChild(DOM.templateAwareRoot(current.element));\n      while (isPresent(node)) {\n        // compiliation can potentially move the node, so we need to store the\n        // next sibling before recursing.\n        var nextNode = DOM.nextSibling(node);\n        if (DOM.isElementNode(node)) {\n          this._process(results, current, new CompileElement(node, compilationCtxtDescription));\n        }\n        node = nextNode;\n      }\n    }\n\n    if (isPresent(additionalChildren)) {\n      for (var i=0; i<additionalChildren.length; i++) {\n        this._process(results, current, additionalChildren[i]);\n      }\n    }\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}