{"version":3,"sources":["compile_element.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/3270","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/3273"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,IAAG;AAAG,IAAE;AAAG,YAAU;AAAG,WAAS,CAAC,KAAO,iCAA+B,CAAC;AACjF,KAAO,EAAC,OAAM;AAAG,IAAE,CAAC,KAAO,0BAAwB,CAAC;AACpD,KAAO,EAAC,GAAE;AAAG,QAAM;AAAG,UAAQ;AAAG,KAAG;AAAG,aAAW;AAAG,kBAAgB,CAAC,KAAO,2BAAyB,CAAC;AACvG,KAAO,EAAC,iBAAgB,CAAC,KAAO,wBAAsB,CAAC;AACvD,KAAO,EAAC,SAAQ;AAAG,UAAQ;AAAG,SAAO,CAAC,KAAO,gCAA8B,CAAC;AAC5E,KAAO,EAAC,aAAY,CAAC,KAAO,oBAAkB,CAAC;AAC/C,KAAO,EAAC,oBAAmB,CAAC,KAAO,sBAAoB,CAAC;AACxD,KAAO,EAAC,SAAQ,CAAC,KAAO,UAAQ,CAAC;AAEjC,KAAO,EAAC,GAAE,CAAC,KAAO,4BAA0B,CAAC;AAO7C,KAAO,MAAM,eAAa;AA0BxB,YAAU,CAAE,OAAM,AAAQ,CAAG,CAAA,eAAc,EAAI,GAAC,CAAG;AC1CrD,SAAK,cAAc,SD0CG,QAAM,kBE1C5B,CAAA,MAAK,KAAK,IAAI,CDAwB,CAAA;AD2ClC,OAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,OAAG,OAAO,EAAI,KAAG,CAAC;AAClB,OAAG,WAAW,EAAI,KAAG,CAAC;AACtB,OAAG,iBAAiB,EAAI,KAAG,CAAC;AAC5B,OAAG,iBAAiB,EAAI,KAAG,CAAC;AAC5B,OAAG,cAAc,EAAI,KAAG,CAAC;AACzB,OAAG,iBAAiB,EAAI,KAAG,CAAC;AAC5B,OAAG,oBAAoB,EAAI,KAAG,CAAC;AAC/B,OAAG,kBAAkB,EAAI,KAAG,CAAC;AAC7B,OAAG,mBAAmB,EAAI,KAAG,CAAC;AAC9B,OAAG,eAAe,EAAI,KAAG,CAAC;AAC1B,OAAG,WAAW,EAAI,MAAI,CAAC;AACvB,OAAG,YAAY,EAAI,MAAI,CAAC;AAGxB,OAAG,mBAAmB,EAAI,KAAG,CAAC;AAG9B,OAAG,8BAA8B,EAAI,KAAG,CAAC;AAGzC,OAAG,uBAAuB,EAAI,KAAG,CAAC;AAClC,OAAG,yBAAyB,EAAI,EAAA,CAAC;AACjC,OAAG,gBAAgB,EAAI,KAAG,CAAC;AAE3B,OAAG,eAAe,EAAI,MAAI,CAAC;AAE3B,AAAI,MAAA,CAAA,OAAM,EAAI,CAAA,iBAAgB,AAAC,EAAC,CAAA,CAAG,CAAA,qBAAoB,AAAC,CAAC,OAAM,CAAC,CAAA,CAAI,KAAG,CAAC;AACxE,OAAI,eAAc,IAAM,GAAC,CAAG;AAC1B,SAAG,mBAAmB,EAAI,gBAAc,CAAC;AACzC,SAAI,SAAQ,AAAC,CAAC,OAAM,CAAC;AAAG,WAAG,mBAAmB,GAAK,CAAA,IAAG,EAAI,QAAM,CAAC;AAAA,IACnE,KAAO;AACL,SAAG,mBAAmB,EAAI,QAAM,CAAC;IACnC;AAAA,EACF;AAAA,AAEA,aAAW,CAAE,AAAD,CAAG;AACb,OAAG,OAAO,EAAI,KAAG,CAAC;EACpB;AAAA,AAEA,MAAI,CAAE,AAAD;AACH,OAAI,OAAM,AAAC,CAAC,IAAG,OAAO,CAAC,CAAG;AACxB,SAAG,OAAO,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAC;IAC9C;AAAA,AGtFJ,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHuFd,IAAG,OAAO,CGvFsB,CCA3C,CAAA,MAAK,YAAY,AJmFP,CAAA,GAAE,CKnFZ,CAAA,MAAK,KAAK,QAAV,CAAA,MAAK,KAAK,QLmFiB,AInFS,CDA2B,CAAA;EHwF7D;AAEA,iBAAe,CAAE,AAAD,CAAG;AACjB,OAAG,WAAW,EAAI,KAAG,CAAC;EACxB;AAAA,AAEA,UAAQ,CAAE,AAAD;AACP,OAAI,OAAM,AAAC,CAAC,IAAG,WAAW,CAAC,CAAG;AAC5B,SAAG,WAAW,EAAI,CAAA,WAAU,OAAO,AAAC,EAAC,CAAC;AACtC,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,GAAE,UAAU,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAC;AAC7C,UAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,WAAU,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC3C,kBAAU,KAAK,AAAC,CAAC,IAAG,WAAW,CAAG,CAAA,WAAU,CAAE,CAAA,CAAC,CAAC,CAAC;MACnD;AAAA,IACF;AAAA,AGrGJ,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHsGd,IAAG,WAAW,CGtGkB,CCA3C,CAAA,MAAK,YAAY,AJ8FH,CAAA,IAAG,CK9FjB,CAAA,MAAK,KAAK,QL8Fe,AI9FW,CDA2B,CAAA;EHuG7D;AAEA,mBAAiB,CAAE,aAAY,AAAI,CAAG,CAAA,UAAS,AAAI,CAAG;ACzGxD,SAAK,cAAc,eDyGgB,IAAE,aAAc,IAAE,CCzGf,CAAA;AD0GlC,OAAI,OAAM,AAAC,CAAC,IAAG,iBAAiB,CAAC,CAAG;AAClC,SAAG,iBAAiB,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;IAC7C;AAAA,AACA,aAAS,IAAI,AAAC,CAAC,IAAG,iBAAiB,CAAG,cAAY,CAAG,WAAS,CAAC,CAAC;EAClE;AAAA,AAEA,mBAAiB,CAAE,QAAO,AAAO,CAAG,CAAA,UAAS,AAAI,CAAG;AChHtD,SAAK,cAAc,UIAnB,CAAA,MAAK,KAAK,oBLgHuC,IAAE,CChHb,CAAA;ADiHlC,OAAI,OAAM,AAAC,CAAC,IAAG,iBAAiB,CAAC,CAAG;AAClC,SAAG,iBAAiB,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;IAC7C;AAAA,AACA,aAAS,IAAI,AAAC,CAAC,IAAG,iBAAiB,CAAG,SAAO,CAAG,WAAS,CAAC,CAAC;EAC7D;AAAA,AAEA,mBAAiB,CAAE,YAAW,AAAO,CAAG,CAAA,aAAY,AAAO,CAAG;ACvHhE,SAAK,cAAc,cIAnB,CAAA,MAAK,KAAK,uBAAV,CAAA,MAAK,KAAK,QJA4B,CAAA;ADwHlC,OAAI,OAAM,AAAC,CAAC,IAAG,iBAAiB,CAAC,CAAG;AAClC,SAAG,iBAAiB,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;IAC7C;AAAA,AAOA,aAAS,IAAI,AAAC,CAAC,IAAG,iBAAiB,CAAG,cAAY,CAAG,aAAW,CAAC,CAAC;EACpE;AAAA,AAEA,gBAAc,CAAE,SAAQ,AAAO,CAAG,CAAA,UAAS,AAAI,CAAG;ACpIpD,SAAK,cAAc,WIAnB,CAAA,MAAK,KAAK,oBLoIqC,IAAE,CCpIX,CAAA;ADqIlC,OAAI,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAG;AAC/B,SAAG,cAAc,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;IAC1C;AAAA,AACA,aAAS,IAAI,AAAC,CAAC,IAAG,cAAc,CAAG,UAAQ,CAAG,WAAS,CAAC,CAAC;EAC3D;AAAA,AAEA,aAAW,CAAE,SAAQ,AAAkB,CAAG;AC3I5C,SAAK,cAAc,WD2IM,kBAAgB,CC3IH,CAAA;AD4IlC,AAAI,MAAA,CAAA,UAAS,EAAI,CAAA,SAAQ,WAAW,CAAC;AACrC,OAAG,eAAe,EAAI,KAAG,CAAC;AAC1B,OAAI,UAAS,WAAa,UAAQ,CAAG;AACnC,SAAI,OAAM,AAAC,CAAC,IAAG,oBAAoB,CAAC,CAAG;AACrC,WAAG,oBAAoB,EAAI,CAAA,WAAU,OAAO,AAAC,EAAC,CAAC;MACjD;AAAA,AACA,gBAAU,KAAK,AAAC,CAAC,IAAG,oBAAoB,CAAG,UAAQ,CAAC,CAAC;AACrD,SAAI,CAAC,UAAS,gBAAgB,CAAG;AAC/B,WAAG,gBAAgB,EAAI,MAAI,CAAC;MAC9B;AAAA,IACF,KAAO,KAAI,UAAS,WAAa,SAAO,CAAG;AACzC,SAAG,kBAAkB,EAAI,UAAQ,CAAC;IACpC,KAAO,KAAI,UAAS,WAAa,UAAQ,CAAG;AAC1C,SAAG,mBAAmB,EAAI,UAAQ,CAAC;IACrC;AAAA,EACF;AAAA,AAEA,iBAAe,CAAE,AAAD;AACd,OAAI,IAAG,eAAe,IAAM,KAAG,CAAG;AAGhC,AAAI,QAAA,CAAA,UAAS,EAAI,CAAA,WAAU,OAAO,AAAC,EAAC,CAAC;AACrC,SAAI,SAAQ,AAAC,CAAC,IAAG,mBAAmB,CAAC,CAAG;AACtC,kBAAU,KAAK,AAAC,CAAC,UAAS,CAAG,CAAA,IAAG,mBAAmB,CAAC,CAAC;MACvD;AAAA,AACA,SAAI,SAAQ,AAAC,CAAC,IAAG,kBAAkB,CAAC,CAAG;AACrC,kBAAU,KAAK,AAAC,CAAC,UAAS,CAAG,CAAA,IAAG,kBAAkB,CAAC,CAAC;MACtD;AAAA,AACA,SAAI,SAAQ,AAAC,CAAC,IAAG,oBAAoB,CAAC,CAAG;AACvC,iBAAS,EAAI,CAAA,WAAU,OAAO,AAAC,CAAC,UAAS,CAAG,CAAA,IAAG,oBAAoB,CAAC,CAAC;MACvE;AAAA,AACA,SAAG,eAAe,EAAI,WAAS,CAAC;IAClC;AAAA,AG5KJ,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CH6Kd,IAAG,eAAe,CG7Kc,CCA3C,CAAA,MAAK,YAAY,AJ6JK,CAAA,IAAG,CAAE,kBAAgB,CAAC,AI7JR,CDA2B,CAAA;EH8K7D;AACF;AAAA,AM/KA,KAAK,eAAe,AAAC,8BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YNyCJ,OAAM,OMzCqB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YNwGS,GAAE,IAAc,GAAE,GMxGJ;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,WLgHuC,GAAE,GM/GF;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,WAAV,MAAK,KAAK,UCCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,WLoIqC,GAAE,GMnIA;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,qDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YN0ID,iBAAgB,GM1IQ;EAAC,CAAC,CAAC,CAAC;ANkLrD,OAAS,sBAAoB,CAAE,UAAS,AAAQ;ACnLhD,OAAK,cAAc,YDmLuB,QAAM,CCnLV,CAAA;ADoLpC,AAAI,IAAA,CAAA,GAAE,EAAI,IAAI,aAAW,AAAC,EAAC,CAAC;AAC5B,AAAI,IAAA,CAAA,IAAG,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,UAAS,CAAC,CAAC;AAEvC,IAAE,IAAI,AAAC,CAAC,GAAE,CAAC,CAAC;AACZ,IAAE,IAAI,AAAC,CAAC,GAAE,QAAQ,AAAC,CAAC,UAAS,CAAC,YAAY,AAAC,EAAC,CAAC,CAAC;AAG9C,wBAAsB,AAAC,CAAC,GAAE,CAAG,KAAG,CAAG,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC,CAAC;AAC9D,wBAAsB,AAAC,CAAC,GAAE,CAAG,QAAM,CAAG,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,CAAG,QAAM,CAAC,CAAC,CAAC;AACpE,WAAS,QAAQ,AAAC,CAAC,IAAG,CAAG,EAAC,QAAO,CAAG,CAAA,OAAM,IAAM;AAC5C,OAAI,OAAM,IAAM,KAAG,CAAA,EAAK,CAAA,OAAM,IAAM,QAAM,CAAG;AACzC,4BAAsB,AAAC,CAAC,GAAE,CAAG,QAAM,CAAG,SAAO,CAAC,CAAC;IACnD;AAAA,EACJ,CAAC,CAAC;AAEF,IAAE,IAAI,AAAC,CAAC,GAAE,CAAC,CAAC;AGnMd,OAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHoMhB,GAAE,SAAS,AAAC,EAAC,CGpMqB,CEA3C,CAAA,MAAK,KAAK,QFAqD,CAAA;AHqM/D;AMrMA,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YNkLgB,OAAM,GMlLC;EAAC,CAAC,CAAC,CAAC;ANuMrD,OAAS,wBAAsB,CAAE,MAAK,AAAa,CAAG,CAAA,OAAM,AAAO,CAAG,CAAA,QAAO,CAAG;ACxMhF,OAAK,cAAc,QDwMqB,aAAW,UKxMnD,CAAA,MAAK,KAAK,kBEAV,CAAA,MAAK,KAAK,IAAI,CNAwB,CAAA;ADyMpC,KAAI,SAAQ,AAAC,CAAC,QAAO,CAAC,CAAG;AACrB,OAAI,QAAO,OAAO,IAAM,EAAA,CAAG;AACvB,WAAK,IAAI,AAAC,CAAC,GAAE,EAAI,QAAM,CAAC,CAAC;IAC7B,KAAO;AACH,WAAK,IAAI,AAAC,CAAC,GAAE,EAAI,QAAM,CAAA,CAAI,KAAG,CAAA,CAAI,SAAO,CAAA,CAAI,IAAE,CAAC,CAAC;IACrD;AAAA,EACJ;AAAA,AACF;AAAA,AMhNA,KAAK,eAAe,AAAC,uCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YNuMc,YAAW,IKxMnD,MAAK,KAAK,cCCuC;EAAC,CAAC,CAAC,CAAC;ANgNrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/pipeline/compile_element.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/pipeline/","sourcesContent":["import {List, Map, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {Element, DOM} from 'angular2/src/facade/dom';\nimport {int, isBlank, isPresent, Type, StringJoiner, assertionsEnabled} from 'angular2/src/facade/lang';\nimport {DirectiveMetadata} from '../directive_metadata';\nimport {Decorator, Component, Viewport} from '../../annotations/annotations';\nimport {ElementBinder} from '../element_binder';\nimport {ProtoElementInjector} from '../element_injector';\nimport {ProtoView} from '../view';\n\nimport {AST} from 'angular2/change_detection';\n\n/**\n * Collects all data that is needed to process an element\n * in the compile process. Fields are filled\n * by the CompileSteps starting out with the pure HTMLElement.\n */\nexport class CompileElement {\n  element:Element;\n  _attrs:Map;\n  _classList:List;\n  textNodeBindings:Map;\n  propertyBindings:Map;\n  eventBindings:Map;\n\n  /// Store directive name to template name mapping.\n  /// Directive name is what the directive exports the variable as\n  /// Template name is how it is reffered to it in template\n  variableBindings:Map;\n  decoratorDirectives:List<DirectiveMetadata>;\n  viewportDirective:DirectiveMetadata;\n  componentDirective:DirectiveMetadata;\n  _allDirectives:List<DirectiveMetadata>;\n  isViewRoot:boolean;\n  hasBindings:boolean;\n  inheritedProtoView:ProtoView;\n  inheritedProtoElementInjector:ProtoElementInjector;\n  inheritedElementBinder:ElementBinder;\n  distanceToParentInjector:number;\n  compileChildren: boolean;\n  ignoreBindings: boolean;\n  elementDescription: string; // e.g. '<div [class]=\"foo\">' : used to provide context in case of error\n\n  constructor(element:Element, compilationUnit = '') {\n    this.element = element;\n    this._attrs = null;\n    this._classList = null;\n    this.textNodeBindings = null;\n    this.propertyBindings = null;\n    this.eventBindings = null;\n    this.variableBindings = null;\n    this.decoratorDirectives = null;\n    this.viewportDirective = null;\n    this.componentDirective = null;\n    this._allDirectives = null;\n    this.isViewRoot = false;\n    this.hasBindings = false;\n    // inherited down to children if they don't have\n    // an own protoView\n    this.inheritedProtoView = null;\n    // inherited down to children if they don't have\n    // an own protoElementInjector\n    this.inheritedProtoElementInjector = null;\n    // inherited down to children if they don't have\n    // an own elementBinder\n    this.inheritedElementBinder = null;\n    this.distanceToParentInjector = 0;\n    this.compileChildren = true;\n    // set to true to ignore all the bindings on the element\n    this.ignoreBindings = false;\n    // description is calculated here as compilation steps may change the element\n    var tplDesc = assertionsEnabled()? getElementDescription(element) : null;\n    if (compilationUnit !== '') {\n      this.elementDescription = compilationUnit;\n      if (isPresent(tplDesc)) this.elementDescription += \": \" + tplDesc;\n    } else {\n      this.elementDescription = tplDesc;\n    }\n  }\n\n  refreshAttrs() {\n    this._attrs = null;\n  }\n\n  attrs():Map<string,string> {\n    if (isBlank(this._attrs)) {\n      this._attrs = DOM.attributeMap(this.element);\n    }\n    return this._attrs;\n  }\n\n  refreshClassList() {\n    this._classList = null;\n  }\n\n  classList():List<string> {\n    if (isBlank(this._classList)) {\n      this._classList = ListWrapper.create();\n      var elClassList = DOM.classList(this.element);\n      for (var i = 0; i < elClassList.length; i++) {\n        ListWrapper.push(this._classList, elClassList[i]);\n      }\n    }\n    return this._classList;\n  }\n\n  addTextNodeBinding(indexInParent:int, expression:AST) {\n    if (isBlank(this.textNodeBindings)) {\n      this.textNodeBindings = MapWrapper.create();\n    }\n    MapWrapper.set(this.textNodeBindings, indexInParent, expression);\n  }\n\n  addPropertyBinding(property:string, expression:AST) {\n    if (isBlank(this.propertyBindings)) {\n      this.propertyBindings = MapWrapper.create();\n    }\n    MapWrapper.set(this.propertyBindings, property, expression);\n  }\n\n  addVariableBinding(variableName:string, variableValue:string) {\n    if (isBlank(this.variableBindings)) {\n      this.variableBindings = MapWrapper.create();\n    }\n\n    // Store the variable map from value to variable, reflecting how it will be used later by\n    // View. When a local is set to the view, a lookup for the variable name will take place keyed\n    // by the \"value\", or exported identifier. For example, ng-repeat sets a view local of \"index\".\n    // When this occurs, a lookup keyed by \"index\" must occur to find if there is a var referencing\n    // it.\n    MapWrapper.set(this.variableBindings, variableValue, variableName);\n  }\n\n  addEventBinding(eventName:string, expression:AST) {\n    if (isBlank(this.eventBindings)) {\n      this.eventBindings = MapWrapper.create();\n    }\n    MapWrapper.set(this.eventBindings, eventName, expression);\n  }\n\n  addDirective(directive:DirectiveMetadata) {\n    var annotation = directive.annotation;\n    this._allDirectives = null;\n    if (annotation instanceof Decorator) {\n      if (isBlank(this.decoratorDirectives)) {\n        this.decoratorDirectives = ListWrapper.create();\n      }\n      ListWrapper.push(this.decoratorDirectives, directive);\n      if (!annotation.compileChildren) {\n        this.compileChildren = false;\n      }\n    } else if (annotation instanceof Viewport) {\n      this.viewportDirective = directive;\n    } else if (annotation instanceof Component) {\n      this.componentDirective = directive;\n    }\n  }\n\n  getAllDirectives(): List<DirectiveMetadata> {\n    if (this._allDirectives === null) {\n      // Collect all the directives\n      // When present the component directive must be first\n      var directives = ListWrapper.create();\n      if (isPresent(this.componentDirective)) {\n        ListWrapper.push(directives, this.componentDirective);\n      }\n      if (isPresent(this.viewportDirective)) {\n        ListWrapper.push(directives, this.viewportDirective);\n      }\n      if (isPresent(this.decoratorDirectives)) {\n        directives = ListWrapper.concat(directives, this.decoratorDirectives);\n      }\n      this._allDirectives = directives;\n    }\n    return this._allDirectives;\n  }\n}\n\n// return an HTML representation of an element start tag - without its content\n// this is used to give contextual information in case of errors\nfunction getElementDescription(domElement:Element):string {\n  var buf = new StringJoiner();\n  var atts = DOM.attributeMap(domElement);\n\n  buf.add(\"<\");\n  buf.add(DOM.tagName(domElement).toLowerCase());\n  \n  // show id and class first to ease element identification\n  addDescriptionAttribute(buf, \"id\", MapWrapper.get(atts, \"id\"));\n  addDescriptionAttribute(buf, \"class\", MapWrapper.get(atts, \"class\"));\n  MapWrapper.forEach(atts, (attValue, attName) => {\n      if (attName !== \"id\" && attName !== \"class\") {\n          addDescriptionAttribute(buf, attName, attValue);\n      }\n  });\n\n  buf.add(\">\");\n  return buf.toString();\n}\n\n\nfunction addDescriptionAttribute(buffer:StringJoiner, attName:string, attValue) {\n  if (isPresent(attValue)) {\n      if (attValue.length === 0) {\n          buffer.add(' ' + attName);\n      } else {\n          buffer.add(' ' + attName + '=\"' + attValue + '\"');\n      }\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.any","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any"]}