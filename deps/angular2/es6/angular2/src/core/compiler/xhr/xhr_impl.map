{"version":3,"sources":["xhr_impl.es6","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,OAAM;AAAG,eAAa,CAAC,KAAO,4BAA0B,CAAC;AACjE,KAAO,EAAC,GAAE,CAAC,KAAO,QAAM,CAAC;AAEzB,KAAO,MAAM,QAAM,QAAU,IAAE;AAC7B,IAAE,CAAE,GAAE,AAAQ;ACJhB,SAAK,cAAc,KCAnB,CAAA,MAAK,KAAK,QDA4B,CAAA;ADKlC,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,cAAa,UAAU,AAAC,EAAC,CAAC;AAC1C,AAAI,MAAA,CAAA,GAAE,EAAI,IAAI,eAAa,AAAC,EAAC,CAAC;AAC9B,MAAE,KAAK,AAAC,CAAC,KAAI,CAAG,IAAE,CAAG,KAAG,CAAC,CAAC;AAC1B,MAAE,aAAa,EAAI,OAAK,CAAC;AAEzB,MAAE,OAAO,EAAI,UAAS,AAAD,CAAG;AACtB,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,GAAE,OAAO,CAAC;AACvB,SAAI,GAAE,GAAK,OAAK,CAAA,EAAK,CAAA,MAAK,GAAK,IAAE,CAAG;AAClC,gBAAQ,SAAS,AAAC,CAAC,GAAE,aAAa,CAAC,CAAC;MACtC,KAAO;AACL,gBAAQ,OAAO,AAAC,CAAC,kBAAkB,GAAE,EAAE,CAAC,CAAC;MAC3C;AAAA,IACF,CAAC;AAED,MAAE,QAAQ,EAAI,UAAS,AAAD,CAAG;AACvB,cAAQ,OAAO,AAAC,CAAC,kBAAkB,GAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;AAED,MAAE,KAAK,AAAC,EAAC,CAAC;AGvBd,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CHwBd,SAAQ,QAAQ,CGxBgB,CCA3C,CAAA,MAAK,YAAY,AJIG,CAAA,OAAM,CEJ1B,CAAA,MAAK,KAAK,QFIwB,AIJE,CDA2B,CAAA;EHyB7D;AACF;AAAA,AK1BA,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YHD1B,MAAK,KAAK,UGCuC;EAAC,CAAC,CAAC,CAAC;AL0BrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/xhr/xhr_impl.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/xhr/","sourcesContent":["import {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {XHR} from './xhr';\n\nexport class XHRImpl extends XHR {\n  get(url: string): Promise<string> {\n    var completer = PromiseWrapper.completer();\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      var status = xhr.status;\n      if (200 <= status && status <= 300) {\n        completer.complete(xhr.responseText);\n      } else {\n        completer.reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() {\n      completer.reject(`Failed to load ${url}`);\n    };\n\n    xhr.send();\n    return completer.promise;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}