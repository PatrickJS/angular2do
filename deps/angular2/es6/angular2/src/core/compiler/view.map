{"version":3,"sources":["view.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/2716","@traceur/generated/TemplateParser/2718","@traceur/generated/TemplateParser/2719","@traceur/generated/TemplateParser/385","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/2723"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/view.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {DOM, Element, Node, Text, DocumentFragment} from 'angular2/src/facade/dom';\nimport {ListWrapper, MapWrapper, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, ContextWithVariableBindings, ChangeDispatcher, ProtoChangeDetector, ChangeDetector, ChangeRecord}\n  from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects} from './element_injector';\nimport {BindingPropagationConfig} from './binding_propagation_config';\nimport {ElementBinder} from './element_binder';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {FIELD, IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {ViewContainer} from './view_container';\nimport {LightDom, DestinationLightDom} from './shadow_dom_emulation/light_dom';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {ViewPool} from './view_pool';\nimport {EventManager} from 'angular2/src/core/events/event_manager';\n\nconst NG_BINDING_CLASS = 'ng-binding';\nconst NG_BINDING_CLASS_SELECTOR = '.ng-binding';\n\n// TODO(rado): make this configurable/smarter.\nvar VIEW_POOL_CAPACITY = 10000;\nvar VIEW_POOL_PREFILL = 0;\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n */\n@IMPLEMENTS(ChangeDispatcher)\nexport class View {\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  bindElements:List<Element>;\n  textNodes:List<Text>;\n  changeDetector:ChangeDetector;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  nodes:List<Node>;\n  componentChildViews: List<View>;\n  viewContainers: List<ViewContainer>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: ProtoView;\n  context: any;\n  contextWithLocals:ContextWithVariableBindings;\n\n  constructor(proto:ProtoView, nodes:List<Node>, protoChangeDetector:ProtoChangeDetector, protoContextLocals:Map) {\n    this.proto = proto;\n    this.nodes = nodes;\n    this.changeDetector = protoChangeDetector.instantiate(this);\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.textNodes = null;\n    this.bindElements = null;\n    this.componentChildViews = null;\n    this.viewContainers = null;\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.contextWithLocals = (MapWrapper.size(protoContextLocals) > 0)\n      ? new ContextWithVariableBindings(null, MapWrapper.clone(protoContextLocals))\n      : null;\n  }\n\n  init(elementInjectors:List, rootElementInjectors:List, textNodes: List, bindElements:List,\n    viewContainers:List, preBuiltObjects:List, componentChildViews:List) {\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.textNodes = textNodes;\n    this.bindElements = bindElements;\n    this.viewContainers = viewContainers;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.context.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _hydrateContext(newContext) {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.parent = newContext;\n      this.context = this.contextWithLocals;\n    } else {\n      this.context = newContext;\n    }\n    // TODO(tbosch): if we have a contextWithLocals we actually only need to\n    // set the contextWithLocals once. Would it be faster to always use a contextWithLocals\n    // even if we don't have locals and not update the recordRange here?\n    this.changeDetector.setContext(this.context);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.clearValues();\n    }\n    this.context = null;\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewcontainers are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object) {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n    this._hydrateContext(context);\n\n    // viewContainers\n    for (var i = 0; i < this.viewContainers.length; i++) {\n      this.viewContainers[i].hydrate(appInjector, hostElementInjector);\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var services = componentDirective.annotation.componentServices;\n        if (isPresent(services))\n          shadowDomAppInjector = appInjector.createChild(services);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          this.context.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          this.context.set(exportImplicitName, elementInjector.getNgElement().domElement);\n        }\n      }\n\n      if (isPresent(componentDirective)) {\n        this.componentChildViews[componentChildViewIndex++].hydrate(shadowDomAppInjector,\n          elementInjector, elementInjector.getComponent());\n      }\n    }\n\n    // this should be moved into DOM write queue\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      if (isPresent(componentDirective)) {\n        var lightDom = this.preBuiltObjects[i].lightDom;\n        if (isPresent(lightDom)) {\n          lightDom.redistribute();\n        }\n      }\n    }\n  }\n\n  dehydrate() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].dehydrate();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      if (isPresent(this.elementInjectors[i])) {\n        this.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewContainers\n    if (isPresent(this.viewContainers)) {\n      for (var i = 0; i < this.viewContainers.length; i++) {\n        this.viewContainers[i].dehydrate();\n      }\n    }\n\n    this._dehydrateContext();\n  }\n\n  onRecordChange(directiveMemento, records:List) {\n    this._invokeMementos(records);\n    if (directiveMemento instanceof DirectiveMemento) {\n      this._notifyDirectiveAboutChanges(directiveMemento, records);\n    }\n  }\n\n  _invokeMementos(records:List) {\n    for(var i = 0; i < records.length; ++i) {\n      this._invokeMementoFor(records[i]);\n    }\n  }\n\n  _notifyDirectiveAboutChanges(directiveMemento, records:List) {\n    var dir = directiveMemento.directive(this.elementInjectors);\n    var binding = directiveMemento.directiveBinding(this.elementInjectors);\n\n    if (binding.callOnChange) {\n      dir.onChange(this._collectChanges(records));\n    }\n  }\n\n    // dispatch to element injector or text nodes based on context\n  _invokeMementoFor(record:ChangeRecord) {\n    var memento = record.bindingMemento;\n    if (memento instanceof DirectiveBindingMemento) {\n      var directiveMemento:DirectiveBindingMemento = memento;\n      directiveMemento.invoke(record, this.elementInjectors);\n\n    } else if (memento instanceof ElementBindingMemento) {\n      var elementMemento:ElementBindingMemento = memento;\n      elementMemento.invoke(record, this.bindElements);\n\n    } else {\n      // we know it refers to _textNodes.\n      var textNodeIndex:number = memento;\n      DOM.setText(this.textNodes[textNodeIndex], record.currentValue);\n    }\n  }\n\n  _collectChanges(records:List) {\n    var changes = StringMapWrapper.create();\n    for(var i = 0; i < records.length; ++i) {\n      var record = records[i];\n      var propertyUpdate = new PropertyUpdate(record.currentValue, record.previousValue);\n      StringMapWrapper.set(changes, record.bindingMemento._setterName, propertyUpdate);\n    }\n    return changes;\n  }\n}\n\nexport class ProtoView {\n  element:Element;\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoContextLocals:Map;\n  textNodesWithBindingCount:int;\n  elementsWithBindingCount:int;\n  instantiateInPlace:boolean;\n  rootBindingOffset:int;\n  isTemplateElement:boolean;\n  shadowDomStrategy: ShadowDomStrategy;\n  _viewPool: ViewPool;\n  constructor(\n      template:Element,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy) {\n    this.element = template;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoContextLocals = MapWrapper.create();\n    this.protoChangeDetector = protoChangeDetector;\n    this.textNodesWithBindingCount = 0;\n    this.elementsWithBindingCount = 0;\n    this.instantiateInPlace = false;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS))\n      ? 1 : 0;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.shadowDomStrategy = shadowDomStrategy;\n    this._viewPool = new ViewPool(VIEW_POOL_CAPACITY);\n  }\n\n  // TODO(rado): hostElementInjector should be moved to hydrate phase.\n  instantiate(hostElementInjector: ElementInjector, eventManager: EventManager):View {\n    if (this._viewPool.length() == 0) this._preFillPool(hostElementInjector, eventManager);\n    var view = this._viewPool.pop();\n    return isPresent(view) ? view : this._instantiate(hostElementInjector, eventManager);\n  }\n\n  _preFillPool(hostElementInjector: ElementInjector, eventManager: EventManager) {\n    for (var i = 0; i < VIEW_POOL_PREFILL; i++) {\n      this._viewPool.push(this._instantiate(hostElementInjector, eventManager));\n    }\n  }\n\n  _instantiate(hostElementInjector: ElementInjector, eventManager: EventManager): View {\n    var rootElementClone = this.instantiateInPlace ? this.element : DOM.importIntoDoc(this.element);\n    var elementsWithBindingsDynamic;\n    if (this.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic= DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var i = 0; i < elementsWithBindingsDynamic.length; ++i) {\n      elementsWithBindings[i] = elementsWithBindingsDynamic[i];\n    }\n\n    var viewNodes;\n    if (this.isTemplateElement) {\n      var childNode = DOM.firstChild(DOM.content(rootElementClone));\n      viewNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewNodes = [rootElementClone];\n    }\n\n    var view = new View(this, viewNodes, this.protoChangeDetector, this.protoContextLocals);\n    var binders = this.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var textNodes = [];\n    var elementsWithPropertyBindings = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewContainers = [];\n    var componentChildViews = [];\n\n    for (var i = 0; i < binders.length; i++) {\n      var binder = binders[i];\n      var element;\n      if (i === 0 && this.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[i - this.rootBindingOffset];\n      }\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector, null, binder.events);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null, hostElementInjector, binder.events);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[i] = elementInjector;\n\n      if (binder.hasElementPropertyBindings) {\n        ListWrapper.push(elementsWithPropertyBindings, element);\n      }\n\n      // textNodes\n      var textNodeIndices = binder.textNodeIndices;\n      if (isPresent(textNodeIndices)) {\n        var childNode = DOM.firstChild(DOM.templateAwareRoot(element));\n        for (var j = 0, k = 0; j < textNodeIndices.length; j++) {\n          for(var index = textNodeIndices[j]; k < index; k++) {\n            childNode = DOM.nextSibling(childNode);\n          }\n          ListWrapper.push(textNodes, childNode);\n        }\n      }\n\n      // componentChildViews\n      var lightDom = null;\n      var bindingPropagationConfig = null;\n      if (isPresent(binder.componentDirective)) {\n        var strategy = this.shadowDomStrategy;\n        var childView = binder.nestedProtoView.instantiate(elementInjector, eventManager);\n        view.changeDetector.addChild(childView.changeDetector);\n\n        lightDom = strategy.constructLightDom(view, childView, element);\n        strategy.attachTemplate(element, childView);\n\n        bindingPropagationConfig = new BindingPropagationConfig(view.changeDetector);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n\n      // viewContainers\n      var viewContainer = null;\n      if (isPresent(binder.viewportDirective)) {\n        var destLightDom = this._directParentElementLightDom(protoElementInjector, preBuiltObjects);\n        viewContainer = new ViewContainer(view, element, binder.nestedProtoView, elementInjector,\n          eventManager, destLightDom);\n        ListWrapper.push(viewContainers, viewContainer);\n      }\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[i] = new PreBuiltObjects(view, new NgElement(element), viewContainer,\n          lightDom, bindingPropagationConfig);\n      }\n\n      // events\n      if (isPresent(binder.events)) {\n        MapWrapper.forEach(binder.events, (expr, eventName) => {\n          if (isBlank(elementInjector) || !elementInjector.hasEventEmitter(eventName)) {\n            var handler = ProtoView.buildInnerCallback(expr, view);\n            eventManager.addEventListener(element, eventName, handler);\n          }\n        });\n      }\n    }\n\n    view.init(elementInjectors, rootElementInjectors, textNodes, elementsWithPropertyBindings,\n      viewContainers, preBuiltObjects, componentChildViews);\n\n    return view;\n  }\n\n  returnToPool(view: View) {\n    this._viewPool.push(view);\n  }\n\n  static buildInnerCallback(expr:AST, view:View) {\n    var locals = MapWrapper.create();\n    return (event) => {\n      // Most of the time the event will be fired only when the view is\n      // in the live document.  However, in a rare circumstance the\n      // view might get dehydrated, in between the event queuing up and\n      // firing.\n      if (view.hydrated()) {\n        MapWrapper.set(locals, '$event', event);\n        var context = new ContextWithVariableBindings(view.context, locals);\n        expr.eval(context);\n      }\n    }\n  }\n\n  _directParentElementLightDom(protoElementInjector:ProtoElementInjector, preBuiltObjects:List):LightDom {\n    var p = protoElementInjector.directParent();\n    return isPresent(p) ? preBuiltObjects[p.index].lightDom : null;\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoContextLocals, templateName, null);\n  }\n\n  bindElement(protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveMetadata = null, viewportDirective:DirectiveMetadata = null):ElementBinder {\n    var elBinder = new ElementBinder(protoElementInjector, componentDirective, viewportDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(indexInParent:int, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.textNodeIndices)) {\n      elBinder.textNodeIndices = ListWrapper.create();\n    }\n    ListWrapper.push(elBinder.textNodeIndices, indexInParent);\n    var memento = this.textNodesWithBindingCount++;\n    this.protoChangeDetector.addAst(expression, memento);\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string, setter:SetterFn) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (!elBinder.hasElementPropertyBindings) {\n      elBinder.hasElementPropertyBindings = true;\n      this.elementsWithBindingCount++;\n    }\n    var memento = new ElementBindingMemento(this.elementsWithBindingCount-1, setterName, setter);\n    this.protoChangeDetector.addAst(expression, memento);\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement\n   */\n  bindEvent(eventName:string, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.events)) {\n      elBinder.events = MapWrapper.create();\n    }\n    MapWrapper.set(elBinder.events, eventName, expression);\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn) {\n\n    var bindingMemento = new DirectiveBindingMemento(\n      this.elementBinders.length-1,\n      directiveIndex,\n      setterName,\n      setter\n    );\n    var directiveMemento = DirectiveMemento.get(bindingMemento);\n    this.protoChangeDetector.addAst(expression, bindingMemento, directiveMemento);\n  }\n\n  // Create a rootView as if the compiler encountered <rootcmp></rootcmp>,\n  // and the component template is already compiled into protoView.\n  // Used for bootstrapping.\n  static createRootProtoView(protoView: ProtoView,\n      insertionElement,\n      rootComponentAnnotatedType: DirectiveMetadata,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy\n  ): ProtoView {\n\n    DOM.addClass(insertionElement, NG_BINDING_CLASS);\n    var cmpType = rootComponentAnnotatedType.type;\n    var rootProtoView = new ProtoView(insertionElement, protoChangeDetector, shadowDomStrategy);\n    rootProtoView.instantiateInPlace = true;\n    var binder = rootProtoView.bindElement(\n        new ProtoElementInjector(null, 0, [cmpType], true));\n    binder.componentDirective = rootComponentAnnotatedType;\n    binder.nestedProtoView = protoView;\n    var shimComponent = shadowDomStrategy.getShimComponent(cmpType);\n    shimComponent.shimHostElement(insertionElement);\n    return rootProtoView;\n  }\n}\n\nexport class ElementBindingMemento {\n  _elementIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(elementIndex:int, setterName:string, setter:SetterFn) {\n    this._elementIndex = elementIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, bindElements:List<Element>) {\n    var element:Element = bindElements[this._elementIndex];\n    this._setter(element, record.currentValue);\n  }\n}\n\nexport class DirectiveBindingMemento {\n  _elementInjectorIndex:int;\n  _directiveIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(\n      elementInjectorIndex:number,\n      directiveIndex:number,\n      setterName:string,\n      setter:SetterFn) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    var directive = elementInjector.getDirectiveAtIndex(this._directiveIndex);\n    this._setter(directive, record.currentValue);\n  }\n}\n\nvar _directiveMementos = MapWrapper.create();\n\nclass DirectiveMemento {\n  _elementInjectorIndex:number;\n  _directiveIndex:number;\n\n  constructor(elementInjectorIndex:number, directiveIndex:number) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n  }\n\n  static get(memento:DirectiveBindingMemento) {\n    var elementInjectorIndex = memento._elementInjectorIndex;\n    var directiveIndex = memento._directiveIndex;\n    var id = elementInjectorIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(_directiveMementos, id)) {\n      MapWrapper.set(_directiveMementos, id, new DirectiveMemento(elementInjectorIndex, directiveIndex));\n    }\n    return MapWrapper.get(_directiveMementos, id);\n  }\n\n  directive(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveAtIndex(this._directiveIndex);\n  }\n\n  directiveBinding(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveBindingAtIndex(this._directiveIndex);\n  }\n}\n\nclass PropertyUpdate {\n  currentValue;\n  previousValue;\n\n  constructor(currentValue, previousValue) {\n    this.currentValue = currentValue;\n    this.previousValue = previousValue;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)","assert.type.any","assert.type.any","assert.type.any","assert.type($__placeholder__0, $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.any"]}