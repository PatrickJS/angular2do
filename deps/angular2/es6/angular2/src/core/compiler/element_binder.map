{"version":3,"sources":["element_binder.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,oBAAmB,CAAC,KAAO,qBAAmB,CAAC;AACvD,KAAO,EAAC,iBAAgB,CAAC,KAAO,uBAAqB,CAAC;AACtD,KAAO,EAAC,IAAG;AAAG,IAAE,CAAC,KAAO,iCAA+B,CAAC;AACxD,KAAO,EAAC,SAAQ,CAAC,KAAO,SAAO,CAAC;AAEhC,KAAO,MAAM,cAAY;AAQvB,YAAU,CACR,oBAAmB,AAAsB,CAAG,CAAA,kBAAiB,AAAkB,CAC/E,CAAA,iBAAgB,AAAkB,CAAG;ACfzC,SAAK,cAAc,sBDcO,qBAAmB,qBAAsB,kBAAgB,oBAC7D,kBAAgB,CCfA,CAAA;ADgBlC,OAAG,qBAAqB,EAAI,qBAAmB,CAAC;AAChD,OAAG,mBAAmB,EAAI,mBAAiB,CAAC;AAC5C,OAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAE1C,OAAG,OAAO,EAAI,KAAG,CAAC;AAElB,OAAG,gBAAgB,EAAI,KAAG,CAAC;AAE3B,OAAG,2BAA2B,EAAI,MAAI,CAAC;AAEvC,OAAG,gBAAgB,EAAI,KAAG,CAAC;EAC7B;AAAA,AACF;AAAA,AE5BA,KAAK,eAAe,AAAC,6BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YFaA,oBAAmB,IAAsB,iBAAgB,IAC7D,iBAAgB,GEdW;EAAC,CAAC,CAAC,CAAC;AF4BrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/element_binder.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {ProtoElementInjector} from './element_injector';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {List, Map} from 'angular2/src/facade/collection';\nimport {ProtoView} from './view';\n\nexport class ElementBinder {\n  protoElementInjector:ProtoElementInjector;\n  componentDirective:DirectiveMetadata;\n  viewportDirective:DirectiveMetadata;\n  textNodeIndices:List<int>;\n  hasElementPropertyBindings:boolean;\n  nestedProtoView: ProtoView;\n  events:Map;\n  constructor(\n    protoElementInjector: ProtoElementInjector, componentDirective:DirectiveMetadata,\n    viewportDirective:DirectiveMetadata) {\n    this.protoElementInjector = protoElementInjector;\n    this.componentDirective = componentDirective;\n    this.viewportDirective = viewportDirective;\n    // updated later when events are bound\n    this.events = null;\n    // updated later when text nodes are bound\n    this.textNodeIndices = null;\n    // updated later when element properties are bound\n    this.hasElementPropertyBindings = false;\n    // updated later, so we are able to resolve cycles\n    this.nestedProtoView = null;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}