{"version":3,"sources":["template_loader.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,OAAM;AAAG,UAAQ;AAAG,cAAY;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AACrF,KAAO,EAAC,GAAE;AAAG,QAAM,CAAC,KAAO,0BAAwB,CAAC;AACpD,KAAO,EAAC,gBAAe;AAAG,UAAQ,CAAC,KAAO,iCAA+B,CAAC;AAE1E,KAAO,EAAC,GAAE,CAAC,KAAO,YAAU,CAAC;AAE7B,KAAO,EAAC,QAAO,CAAC,KAAO,yCAAuC,CAAC;AAK/D,KAAO,MAAM,eAAa;AAIxB,YAAU,CAAE,GAAE,AAAK,CAAG;ACfxB,SAAK,cAAc,KDeA,IAAE,CCfiB,CAAA;ADgBlC,OAAG,KAAK,EAAI,IAAE,CAAC;AACf,OAAG,OAAO,EAAI,CAAA,gBAAe,OAAO,AAAC,EAAC,CAAC;EACzC;AAAA,AAGA,KAAG,CAAE,QAAO,AAAU,CAAG;ACrB3B,SAAK,cAAc,UDqBF,SAAO,CCrBc,CAAA;ADsBlC,OAAI,SAAQ,AAAC,CAAC,QAAO,OAAO,CAAC,CAAG;AAC9B,WAAO,CAAA,GAAE,eAAe,AAAC,CAAC,QAAO,OAAO,CAAC,CAAC;IAC5C;AAAA,AAEA,OAAI,SAAQ,AAAC,CAAC,QAAO,IAAI,CAAC,CAAG;AAC3B,AAAI,QAAA,CAAA,GAAE,EAAI,CAAA,QAAO,IAAI,CAAC;AACtB,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,gBAAe,IAAI,AAAC,CAAC,IAAG,OAAO,CAAG,IAAE,CAAC,CAAC;AAEpD,SAAI,OAAM,AAAC,CAAC,OAAM,CAAC,CAAG;AACpB,cAAM,EAAI,CAAA,IAAG,KAAK,IAAI,AAAC,CAAC,GAAE,CAAC,KAAK,AAAC,CAAC,SAAU,IAAG,CAAG;AAChD,AAAI,YAAA,CAAA,QAAO,EAAI,CAAA,GAAE,eAAe,AAAC,CAAC,IAAG,CAAC,CAAC;AACvC,eAAO,SAAO,CAAC;QACjB,CAAC,CAAC;AACF,uBAAe,IAAI,AAAC,CAAC,IAAG,OAAO,CAAG,IAAE,CAAG,QAAM,CAAC,CAAC;MACjD;AAAA,AAEA,WAAO,QAAM,CAAC;IAChB;AAAA,AAEA,QAAM,IAAI,cAAY,AAAC,CAAC,+DAA8D,CAAC,CAAC;EAC1F;AAAA,AACF;AAAA,AE3CA,KAAK,eAAe,AAAC,8BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YFcP,GAAE,GEd4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,6CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YFoBT,QAAO,GEpByB;EAAC,CAAC,CAAC,CAAC;AF2CrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/template_loader.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {isBlank, isPresent, BaseException, stringify} from 'angular2/src/facade/lang';\nimport {DOM, Element} from 'angular2/src/facade/dom';\nimport {StringMapWrapper, StringMap} from 'angular2/src/facade/collection';\n\nimport {XHR} from './xhr/xhr';\n\nimport {Template} from 'angular2/src/core/annotations/template';\n\n/**\n * Strategy to load component templates.\n */\nexport class TemplateLoader {\n  _xhr: XHR;\n  _cache: StringMap;\n\n  constructor(xhr: XHR) {\n    this._xhr = xhr;\n    this._cache = StringMapWrapper.create();\n  }\n\n  // TODO(vicb): union type: return an Element or a Promise<Element>\n  load(template: Template) {\n    if (isPresent(template.inline)) {\n      return DOM.createTemplate(template.inline);\n    }\n\n    if (isPresent(template.url)) {\n      var url = template.url;\n      var promise = StringMapWrapper.get(this._cache, url);\n\n      if (isBlank(promise)) {\n        promise = this._xhr.get(url).then(function (html) {\n          var template = DOM.createTemplate(html);\n          return template;\n        });\n        StringMapWrapper.set(this._cache, url, promise);\n      }\n\n      return promise;\n    }\n\n    throw new BaseException(`Templates should have either their url or inline property set`);\n  }\n}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}