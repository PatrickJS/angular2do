{"version":3,"sources":["directive_metadata_reader.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,IAAG;AAAG,UAAQ;AAAG,cAAY;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClF,KAAO,EAAC,SAAQ,CAAC,KAAO,6BAA2B,CAAC;AACpD,KAAO,EAAC,iBAAgB,CAAC,KAAO,uBAAqB,CAAC;AACtD,KAAO,EAAC,SAAQ,CAAC,KAAO,qCAAmC,CAAC;AAE5D,KAAO,MAAM,wBAAsB;AACjC,KAAG,CAAE,IAAG,AAAK;ACNf,SAAK,cAAc,MDMP,KAAG,CCNuB,CAAA;ADOlC,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,SAAQ,YAAY,AAAC,CAAC,IAAG,CAAC,CAAC;AAC7C,OAAI,SAAQ,AAAC,CAAC,WAAU,CAAC,CAAG;AAC1B,UAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,WAAU,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACvC,AAAI,UAAA,CAAA,UAAS,EAAI,CAAA,WAAU,CAAE,CAAA,CAAC,CAAC;AAE/B,WAAI,UAAS,WAAa,UAAQ,CAAG;AEZ7C,eAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CFaR,GAAI,kBAAgB,AAAC,CAAC,IAAG,CAAG,WAAS,CAAC,CEbZ,CFMzB,kBAAgB,CEN6B,CAAA;QFcvD;AAAA,MACF;AAAA,IACF;AAAA,AACA,QAAM,IAAI,cAAY,AAAC,CAAC,oCAAoC,SAAQ,AAAC,CAAC,IAAG,CAAC,EAAE,CAAC,CAAC;EAChF;AAEF;AAAA,AGpBA,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YHKd,IAAG,GGLkC;EAAC,CAAC,CAAC,CAAC;AHoBrD","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/directive_metadata_reader.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {Type, isPresent, BaseException, stringify} from 'angular2/src/facade/lang';\nimport {Directive} from '../annotations/annotations';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nexport class DirectiveMetadataReader {\n  read(type:Type):DirectiveMetadata {\n    var annotations = reflector.annotations(type);\n    if (isPresent(annotations)) {\n      for (var i=0; i<annotations.length; i++) {\n        var annotation = annotations[i];\n\n        if (annotation instanceof Directive) {\n          return new DirectiveMetadata(type, annotation);\n        }\n      }\n    }\n    throw new BaseException(`No Directive annotation found on ${stringify(type)}`);\n  }\n\n}\n","assert.argumentTypes($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}