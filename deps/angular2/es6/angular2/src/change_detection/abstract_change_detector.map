{"version":3,"sources":["abstract_change_detector.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/change_detection/abstract_change_detector.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/change_detection/","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {ChangeDetector, CHECK_ALWAYS, CHECK_ONCE, CHECKED, DETACHED} from './interfaces';\n\nexport class AbstractChangeDetector extends ChangeDetector {\n  children:List;\n  parent:ChangeDetector;\n  mode:string;\n\n  constructor() {\n    super();\n    this.children = [];\n    this.mode = CHECK_ALWAYS;\n  }\n\n  addChild(cd:ChangeDetector) {\n    ListWrapper.push(this.children, cd);\n    cd.parent = this;\n  }\n\n  removeChild(cd:ChangeDetector) {\n    ListWrapper.remove(this.children, cd);\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  detectChanges() {\n    this._detectChanges(false);\n  }\n\n  checkNoChanges() {\n    this._detectChanges(true);\n  }\n\n  _detectChanges(throwOnChange:boolean) {\n    if (this.mode === DETACHED || this.mode === CHECKED) return;\n\n    this.detectChangesInRecords(throwOnChange);\n    this._detectChangesInChildren(throwOnChange);\n\n    if (this.mode === CHECK_ONCE) this.mode = CHECKED;\n  }\n\n  detectChangesInRecords(throwOnChange:boolean){}\n\n  _detectChangesInChildren(throwOnChange:boolean) {\n    var children = this.children;\n    for(var i = 0; i < children.length; ++i) {\n      children[i]._detectChanges(throwOnChange);\n    }\n  }\n\n  markPathToRootAsCheckOnce() {\n    var c = this;\n    while(isPresent(c) && c.mode != DETACHED) {\n      if (c.mode === CHECKED) c.mode = CHECK_ONCE;\n      c = c.parent;\n    }\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}