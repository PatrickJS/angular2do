{"version":3,"sources":["change_detection_jit_generator.es6","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/change_detection/change_detection_jit_generator.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/change_detection/","sourcesContent":["import {isPresent, isBlank, BaseException, Type} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {ContextWithVariableBindings} from './parser/context_with_variable_bindings';\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {ChangeDetectionUtil} from './change_detection_util';\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\n/**\n * The code generator takes a list of proto records and creates a function/class\n * that \"emulates\" what the developer would write by hand to implement the same\n * kind of behaviour.\n *\n * For example: An expression `address.city` will result in the following class:\n *\n * var ChangeDetector0 = function ChangeDetector0(dispatcher, protos) {\n *   AbstractChangeDetector.call(this);\n *   this.dispatcher = dispatcher;\n *   this.protos = protos;\n *\n *   this.context = null;\n *   this.address0 = null;\n *   this.city1 = null;\n * }\n * ChangeDetector0.prototype = Object.create(AbstractChangeDetector.prototype);\n *\n * ChangeDetector0.prototype.detectChangesInRecords = function(throwOnChange) {\n *   var address0;\n *   var city1;\n *   var change;\n *   var changes = null;\n *   var temp;\n *   var context = this.context;\n *\n *   temp = ChangeDetectionUtil.findContext(\"address\", context);\n *   if (temp instanceof ContextWithVariableBindings) {\n *     address0 = temp.get('address');\n *   } else {\n *     address0 = temp.address;\n *   }\n *\n *   if (address0 !== this.address0) {\n *     this.address0 = address0;\n *   }\n *\n *   city1 = address0.city;\n *   if (city1 !== this.city1) {\n *     changes = ChangeDetectionUtil.addRecord(changes,\n *       ChangeDetectionUtil.simpleChangeRecord(this.protos[1].bindingMemento, this.city1, city1));\n *     this.city1 = city1;\n *   }\n *\n *   if (changes.length > 0) {\n *     if(throwOnChange) ChangeDetectionUtil.throwOnChange(this.protos[1], changes[0]);\n *     this.dispatcher.onRecordChange('address.city', changes);\n *     changes = null;\n *   }\n * }\n *\n *\n * ChangeDetector0.prototype.setContext = function(context) {\n *   this.context = context;\n * }\n *\n * return ChangeDetector0;\n *\n *\n * The only thing the generated class depends on is the super class AbstractChangeDetector.\n *\n * The implementation comprises two parts:\n * * ChangeDetectorJITGenerator has the logic of how everything fits together.\n * * template functions (e.g., constructorTemplate) define what code is generated.\n*/\n\nvar ABSTRACT_CHANGE_DETECTOR = \"AbstractChangeDetector\";\nvar UTIL = \"ChangeDetectionUtil\";\nvar DISPATCHER_ACCESSOR = \"this.dispatcher\";\nvar PIPE_REGISTRY_ACCESSOR = \"this.pipeRegistry\";\nvar PROTOS_ACCESSOR = \"this.protos\";\nvar CHANGE_LOCAL = \"change\";\nvar CHANGES_LOCAL = \"changes\";\nvar TEMP_LOCAL = \"temp\";\n\nfunction typeTemplate(type:string, cons:string, detectChanges:string, setContext:string):string {\n  return `\n${cons}\n${detectChanges}\n${setContext};\n\nreturn function(dispatcher, pipeRegistry) {\n  return new ${type}(dispatcher, pipeRegistry, protos);\n}\n`;\n}\n\nfunction constructorTemplate(type:string, fieldsDefinitions:string):string {\n  return `\nvar ${type} = function ${type}(dispatcher, pipeRegistry, protos) {\n${ABSTRACT_CHANGE_DETECTOR}.call(this);\n${DISPATCHER_ACCESSOR} = dispatcher;\n${PIPE_REGISTRY_ACCESSOR} = pipeRegistry;\n${PROTOS_ACCESSOR} = protos;\n${fieldsDefinitions}\n}\n\n${type}.prototype = Object.create(${ABSTRACT_CHANGE_DETECTOR}.prototype);\n`;\n}\n\nfunction setContextTemplate(type:string):string {\n  return `\n${type}.prototype.setContext = function(context) {\n  this.context = context;\n}\n`;\n}\n\nfunction detectChangesTemplate(type:string, body:string):string {\n  return `\n${type}.prototype.detectChangesInRecords = function(throwOnChange) {\n  ${body}\n}\n`;\n}\n\n\nfunction bodyTemplate(localDefinitions:string, changeDefinitions:string, records:string):string {\n  return `\n${localDefinitions}\n${changeDefinitions}\nvar ${TEMP_LOCAL};\nvar ${CHANGE_LOCAL};\nvar ${CHANGES_LOCAL} = null;\n\ncontext = this.context;\n${records}\n`;\n}\n\nfunction notifyTemplate(index:number):string{\n  return  `\nif (${CHANGES_LOCAL} && ${CHANGES_LOCAL}.length > 0) {\n  if(throwOnChange) ${UTIL}.throwOnChange(${PROTOS_ACCESSOR}[${index}], ${CHANGES_LOCAL}[0]);\n  ${DISPATCHER_ACCESSOR}.onRecordChange(${PROTOS_ACCESSOR}[${index}].directiveMemento, ${CHANGES_LOCAL});\n  ${CHANGES_LOCAL} = null;\n}\n`;\n}\n\nfunction pipeCheckTemplate(context:string, pipe:string, pipeType:string,\n                                  value:string, change:string, addRecord:string, notify:string):string{\n  return `\nif (${pipe} === ${UTIL}.unitialized() || !${pipe}.supports(${context})) {\n  ${pipe} = ${PIPE_REGISTRY_ACCESSOR}.get('${pipeType}', ${context});\n}\n\n${CHANGE_LOCAL} = ${pipe}.transform(${context});\nif (! ${UTIL}.noChangeMarker(${CHANGE_LOCAL})) {\n  ${value} = ${CHANGE_LOCAL};\n  ${change} = true;\n  ${addRecord}\n}\n${notify}\n`;\n}\n\nfunction referenceCheckTemplate(assignment, newValue, oldValue, change, addRecord, notify) {\n  return `\n${assignment}\nif (${newValue} !== ${oldValue} || (${newValue} !== ${newValue}) && (${oldValue} !== ${oldValue})) {\n  ${change} = true;\n  ${addRecord}\n  ${oldValue} = ${newValue};\n}\n${notify}\n`;\n}\n\nfunction assignmentTemplate(field:string, value:string) {\n  return `${field} = ${value};`;\n}\n\nfunction propertyReadTemplate(name:string, context:string, newValue:string) {\n  return `\n${TEMP_LOCAL} = ${UTIL}.findContext(\"${name}\", ${context});\nif (${TEMP_LOCAL} instanceof ContextWithVariableBindings) {\n  ${newValue} = ${TEMP_LOCAL}.get('${name}');\n} else {\n  ${newValue} = ${TEMP_LOCAL}.${name};\n}\n`;\n}\n\nfunction invokeMethodTemplate(name:string, args:string, context:string, newValue:string) {\n  return `\n${TEMP_LOCAL} = ${UTIL}.findContext(\"${name}\", ${context});\nif (${TEMP_LOCAL} instanceof ContextWithVariableBindings) {\n  ${newValue} = ${TEMP_LOCAL}.get('${name}').apply(null, [${args}]);\n} else {\n  ${newValue} = ${context}.${name}(${args});\n}\n`;\n}\n\nfunction localDefinitionsTemplate(names:List):string {\n  return names.map((n) => `var ${n};`).join(\"\\n\");\n}\n\nfunction changeDefinitionsTemplate(names:List):string {\n  return names.map((n) => `var ${n} = false;`).join(\"\\n\");\n}\n\nfunction fieldDefinitionsTemplate(names:List):string {\n  return names.map((n) => `${n} = ${UTIL}.unitialized();`).join(\"\\n\");\n}\n\nfunction ifChangedGuardTemplate(changeNames:List, body:string):string {\n  var cond = changeNames.join(\" || \");\n  return `\nif (${cond}) {\n  ${body}\n}\n`;\n}\n\nfunction addSimpleChangeRecordTemplate(protoIndex:number, oldValue:string, newValue:string) {\n  return `${CHANGES_LOCAL} = ${UTIL}.addRecord(${CHANGES_LOCAL},\n    ${UTIL}.simpleChangeRecord(${PROTOS_ACCESSOR}[${protoIndex}].bindingMemento, ${oldValue}, ${newValue}));`;\n}\n\n\nexport class ChangeDetectorJITGenerator {\n  typeName:string;\n  records:List<ProtoRecord>;\n  localNames:List<String>;\n  changeNames:List<String>;\n  fieldNames:List<String>;\n  pipeNames:List<String>;\n\n  constructor(typeName:string, records:List<ProtoRecord>) {\n    this.typeName = typeName;\n    this.records = records;\n\n    this.localNames = this.getLocalNames(records);\n    this.changeNames = this.getChangeNames(this.localNames);\n    this.fieldNames = this.getFieldNames(this.localNames);\n    this.pipeNames = this.getPipeNames(this.localNames);\n  }\n\n  getLocalNames(records:List<ProtoRecord>):List<String> {\n    var index = 0;\n    var names = records.map((r) => {\n      var sanitizedName = r.name.replace(new RegExp(\"\\\\W\", \"g\"), '');\n      return `${sanitizedName}${index++}`\n    });\n    return [\"context\"].concat(names);\n  }\n\n  getChangeNames(localNames:List<String>):List<String> {\n    return localNames.map((n) => `change_${n}`);\n  }\n\n  getFieldNames(localNames:List<String>):List<String> {\n    return localNames.map((n) => `this.${n}`);\n  }\n\n  getPipeNames(localNames:List<String>):List<String> {\n    return localNames.map((n) => `this.${n}_pipe`);\n  }\n\n  generate():Function {\n    var text = typeTemplate(this.typeName, this.genConstructor(), this.genDetectChanges(), this.genSetContext());\n    return new Function('AbstractChangeDetector', 'ChangeDetectionUtil', 'ContextWithVariableBindings', 'protos', text)(AbstractChangeDetector, ChangeDetectionUtil, ContextWithVariableBindings, this.records);\n  }\n\n  genConstructor():string {\n    var fields = [];\n    fields = fields.concat(this.fieldNames);\n\n    this.records.forEach((r) => {\n      if (r.mode === RECORD_TYPE_PIPE) {\n        fields.push(this.pipeNames[r.selfIndex]);\n      }\n    });\n\n    return constructorTemplate(this.typeName, fieldDefinitionsTemplate(fields));\n  }\n\n  genSetContext():string {\n    return setContextTemplate(this.typeName);\n  }\n\n  genDetectChanges():string {\n    var body = this.genBody();\n    return detectChangesTemplate(this.typeName, body);\n  }\n\n  genBody():string {\n    var rec = this.records.map((r) => this.genRecord(r)).join(\"\\n\");\n    return bodyTemplate(this.genLocalDefinitions(), this.genChangeDefinitions(), rec);\n  }\n\n  genLocalDefinitions():string {\n    return localDefinitionsTemplate(this.localNames);\n  }\n\n  genChangeDefinitions():string {\n    return changeDefinitionsTemplate(this.changeNames);\n  }\n\n  genRecord(r:ProtoRecord):string {\n    if (r.mode === RECORD_TYPE_PIPE) {\n      return this.genPipeCheck (r);\n    } else {\n      return this.genReferenceCheck(r);\n    }\n  }\n\n  genPipeCheck(r:ProtoRecord):string {\n    var context = this.localNames[r.contextIndex];\n    var pipe = this.pipeNames[r.selfIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n\n    var addRecord = addSimpleChangeRecordTemplate(r.selfIndex - 1, oldValue, newValue);\n    var notify = this.genNotify(r);\n\n    return pipeCheckTemplate(context, pipe, r.name, newValue, change, addRecord, notify);\n  }\n\n  genReferenceCheck(r:ProtoRecord):string {\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n    var assignment = this.genUpdateCurrentValue(r);\n    var addRecord = addSimpleChangeRecordTemplate(r.selfIndex - 1, oldValue, newValue);\n    var notify = this.genNotify(r);\n\n    var check = referenceCheckTemplate(assignment, newValue, oldValue, change, r.lastInBinding ? addRecord : '', notify);;\n    if (r.isPureFunction()) {\n      return this.ifChangedGuard(r, check);\n    } else {\n      return check;\n    }\n  }\n\n  genUpdateCurrentValue(r:ProtoRecord):string {\n    var context = this.localNames[r.contextIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var args = this.genArgs(r);\n\n    switch (r.mode) {\n      case RECORD_TYPE_SELF:\n        return assignmentTemplate(newValue, context);\n\n      case RECORD_TYPE_CONST:\n        return `${newValue} = ${this.genLiteral(r.funcOrValue)}`;\n\n      case RECORD_TYPE_PROPERTY:\n        if (r.contextIndex == 0) { // only the first property read can be a local\n          return propertyReadTemplate(r.name, context, newValue);\n        } else {\n          return assignmentTemplate(newValue, `${context}.${r.name}`);\n        }\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        if (r.contextIndex == 0) { // only the first property read can be a local\n          return invokeMethodTemplate(r.name, args, context, newValue);\n        } else {\n          return assignmentTemplate(newValue, `${context}.${r.name}(${args})`);\n        }\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return assignmentTemplate(newValue, `${context}(${args})`);\n\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return assignmentTemplate(newValue, `${UTIL}.${r.name}(${args})`);\n\n      case RECORD_TYPE_INTERPOLATE:\n        return assignmentTemplate(newValue, this.genInterpolation(r));\n\n      case RECORD_TYPE_KEYED_ACCESS:\n        var key = this.localNames[r.args[0]];\n        return assignmentTemplate(newValue, `${context}[${key}]`);\n\n      default:\n        throw new BaseException(`Unknown operation ${r.mode}`);\n    }\n  }\n\n  ifChangedGuard(r:ProtoRecord, body:string):string {\n    return ifChangedGuardTemplate(r.args.map((a) => this.changeNames[a]), body);\n  }\n\n  genInterpolation(r:ProtoRecord):string{\n    var res = \"\";\n    for (var i = 0; i < r.args.length; ++i) {\n      res += this.genLiteral(r.fixedArgs[i]);\n      res += \" + \";\n      res += this.localNames[r.args[i]];\n      res += \" + \";\n    }\n    res += this.genLiteral(r.fixedArgs[r.args.length]);\n    return res;\n  }\n\n  genLiteral(value):string {\n    return JSON.stringify(value);\n  }\n\n  genNotify(r):string{\n    return r.lastInDirective ? notifyTemplate(r.selfIndex - 1) : '';\n  }\n\n  genArgs(r:ProtoRecord):string {\n    return r.args.map((arg) => this.localNames[arg]).join(\", \");\n  }\n}\n\n\n\n\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)"]}