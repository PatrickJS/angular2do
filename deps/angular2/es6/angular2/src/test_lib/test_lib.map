{"version":3,"sources":["test_lib.es6"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/test_lib/test_lib.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/test_lib/","sourcesContent":["import {DOM} from 'angular2/src/facade/dom';\n\nexport {proxy} from 'rtts_assert/rtts_assert';\nexport var describe = window.describe;\nexport var xdescribe = window.xdescribe;\nexport var ddescribe = window.ddescribe;\nexport var it = window.it;\nexport var xit = window.xit;\nexport var iit = window.iit;\nexport var beforeEach = window.beforeEach;\nexport var afterEach = window.afterEach;\nexport var expect = window.expect;\nexport var IS_DARTIUM = false;\n\n// To make testing consistent between dart and js\nwindow.print = function(msg) {\n  if (window.dump) {\n    window.dump(msg);\n  } else {\n    window.console.log(msg);\n  }\n};\n\n// Some Map polyfills don't polyfill Map.toString correctly, which\n// gives us bad error messages in tests.\n// The only way to do this in Jasmine is to monkey patch a method\n// to the object :-(\nwindow.Map.prototype.jasmineToString = function() {\n  var m = this;\n  if (!m) {\n    return ''+m;\n  }\n  var res = [];\n  m.forEach( (v,k) => {\n    res.push(`${k}:${v}`);\n  });\n  return `{ ${res.join(',')} }`;\n}\n\nwindow.beforeEach(function() {\n  jasmine.addMatchers({\n    // Custom handler for Map as Jasmine does not support it yet\n    toEqual: function(util, customEqualityTesters) {\n      return {\n        compare: function(actual, expected) {\n          return {\n            pass: util.equals(actual, expected, [compareMap])\n          };\n        }\n      };\n\n      function compareMap(actual, expected) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach( (v,k) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n\n    toBePromise: function() {\n      return {\n        compare: function (actual, expectedClass) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be a promise';\n            }\n          };\n        }\n      };\n    },\n\n    toBeAnInstanceOf: function() {\n      return {\n        compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }\n      };\n    },\n\n    toHaveText: function() {\n      return {\n        compare: function(actual, expectedText) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() {\n              return 'Expected ' + actualText + ' to be equal to ' + expectedText;\n            }\n          };\n        }\n      };\n    },\n\n    toImplement: function() {\n      return {\n        compare: function(actualObject, expectedInterface) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n\n          var missedMethods = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k]) missedMethods.push(k);\n          });\n\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' + missedMethods.join(\", \");\n            }\n          };\n        }\n      };\n    }\n  });\n});\n\nexport class SpyObject {\n  spy(name){\n    if (! this[name]) {\n      this[name] = this._createGuinnessCompatibleSpy();\n    }\n    return this[name];\n  }\n\n  rttsAssert(value) {\n    return true;\n  }\n\n  _createGuinnessCompatibleSpy(){\n    var newSpy = jasmine.createSpy();\n    newSpy.andCallFake = newSpy.and.callFake;\n    return newSpy;\n  }\n}\n\n\nfunction elementText(n) {\n  var hasShadowRoot = (n) => n instanceof Element && n.shadowRoot;\n  var hasNodes = (n) => {var children = DOM.childNodes(n); return children && children.length > 0;}\n\n  if (n instanceof Comment)         return '';\n\n  if (n instanceof Array)           return n.map((nn) => elementText(nn)).join(\"\");\n  if (n instanceof Element && DOM.tagName(n) == 'CONTENT')\n    return elementText(Array.prototype.slice.apply(n.getDistributedNodes()));\n  if (hasShadowRoot(n))             return elementText(DOM.childNodesAsList(n.shadowRoot));\n  if (hasNodes(n))                  return elementText(DOM.childNodesAsList(n));\n\n  return n.textContent;\n}"]}