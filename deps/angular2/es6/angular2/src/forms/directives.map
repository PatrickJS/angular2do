{"version":3,"sources":["directives.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/902","@traceur/generated/TemplateParser/903","@traceur/generated/TemplateParser/40"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/forms/directives.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/forms/","sourcesContent":["import {Template, Component, Decorator, NgElement, Ancestor, onChange} from 'angular2/core';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {isBlank, isPresent, CONST} from 'angular2/src/facade/lang';\nimport {StringMapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {ControlGroup, Control} from './model';\n\nclass ControlGroupDirectiveBase {\n  addDirective(directive):void {}\n  findControl(name:string):Control { return null; }\n}\n\n@CONST()\nexport class ControlValueAccessor {\n  readValue(el){}\n  writeValue(el, value):void {}\n}\n\n@CONST()\nclass DefaultControlValueAccessor extends ControlValueAccessor {\n  constructor() {\n    super();\n  }\n\n  readValue(el) {\n    return DOM.getValue(el);\n  }\n\n  writeValue(el, value):void {\n    DOM.setValue(el,value);\n  }\n}\n\n@CONST()\nclass CheckboxControlValueAccessor extends ControlValueAccessor {\n  constructor() {\n    super();\n  }\n\n  readValue(el):boolean {\n    return DOM.getChecked(el);\n  }\n\n  writeValue(el, value:boolean):void {\n    DOM.setChecked(el, value);\n  }\n}\n\nvar controlValueAccessors = {\n  \"checkbox\" : new CheckboxControlValueAccessor(),\n  \"text\" : new DefaultControlValueAccessor()\n};\n\nfunction controlValueAccessorFor(controlType:string):ControlValueAccessor {\n  var accessor = StringMapWrapper.get(controlValueAccessors, controlType);\n  if (isPresent(accessor)) {\n    return accessor;\n  } else {\n    return StringMapWrapper.get(controlValueAccessors, \"text\");\n  }\n}\n\n\nexport class ControlDirectiveBase {\n  _groupDecorator:ControlGroupDirectiveBase;\n  _el:NgElement;\n\n  controlName:string;\n  type:string;\n  valueAccessor:ControlValueAccessor;\n\n  constructor(groupDecorator, el:NgElement)  {\n    this._groupDecorator = groupDecorator;\n    this._el = el;\n  }\n\n  _initialize() {\n    if (isBlank(this.valueAccessor)) {\n      this.valueAccessor = controlValueAccessorFor(this.type);\n    }\n    this._groupDecorator.addDirective(this);\n    this._updateDomValue();\n    DOM.on(this._el.domElement, \"change\", (_) => this._updateControlValue());\n  }\n\n  _updateDomValue() {\n    this.valueAccessor.writeValue(this._el.domElement, this._control().value);\n  }\n\n  _updateControlValue() {\n    this._control().value = this.valueAccessor.readValue(this._el.domElement);\n  }\n\n  _control() {\n    return this._groupDecorator.findControl(this.controlName);\n  }\n}\n\n@Decorator({\n  lifecycle: [onChange],\n  selector: '[control-name]',\n  bind: {\n    'controlName' : 'control-name',\n    'type' : 'type'\n  }\n})\nexport class ControlNameDirective extends ControlDirectiveBase {\n  constructor(@Ancestor() groupDecorator:ControlGroupDirective, el:NgElement) {\n    super(groupDecorator, el);\n  }\n\n  onChange(_) {\n    this._initialize();\n  }\n}\n\n@Decorator({\n  lifecycle: [onChange],\n  selector: '[control]',\n  bind: {\n    'controlName' : 'control',\n    'type' : 'type'\n  }\n})\nexport class ControlDirective extends ControlDirectiveBase {\n  constructor(@Ancestor() groupDecorator:NewControlGroupDirective, el:NgElement) {\n    super(groupDecorator, el);\n  }\n\n  onChange(_) {\n    this._initialize();\n  }\n}\n\n@Decorator({\n  selector: '[control-group]',\n  bind: {\n    'controlGroup' : 'control-group'\n  }\n})\nexport class ControlGroupDirective extends ControlGroupDirectiveBase {\n  _controlGroup:ControlGroup;\n  _directives:List<ControlNameDirective>;\n\n  constructor() {\n    super();\n    this._directives = ListWrapper.create();\n  }\n\n  set controlGroup(controlGroup:ControlGroup) {\n    this._controlGroup = controlGroup;\n    ListWrapper.forEach(this._directives, (cd) => cd._updateDomValue());\n  }\n\n  addDirective(c:ControlNameDirective) {\n    ListWrapper.push(this._directives, c);\n  }\n\n  findControl(name:string):Control {\n    return this._controlGroup.controls[name];\n  }\n}\n\n@Component({\n  selector: '[new-control-group]',\n  bind: {\n    'initData' : 'new-control-group'\n  }\n})\n@Template({inline: '<content>'})\nexport class NewControlGroupDirective extends ControlGroupDirectiveBase {\n  _initData:any;\n  _controlGroup:ControlGroup;\n  _directives:List<ControlNameDirective>;\n\n  constructor() {\n    super();\n    this._directives = ListWrapper.create();\n  }\n\n  set initData(value) {\n    this._initData = value;\n  }\n\n  addDirective(c:ControlDirective) {\n    ListWrapper.push(this._directives, c);\n    this._controlGroup = null;\n  }\n\n  findControl(name:string):Control {\n    if (isBlank(this._controlGroup)) {\n      this._controlGroup = this._createControlGroup();\n    }\n    return this._controlGroup.controls[name];\n  }\n\n  _createControlGroup():ControlGroup {\n    var controls = ListWrapper.reduce(this._directives, (memo, cd) => {\n      var initControlValue = this._initData[cd.controlName];\n      memo[cd.controlName] = new Control(initControlValue);\n      return memo;\n    }, {});\n    return new ControlGroup(controls);\n  }\n\n  get value() {\n    return this._controlGroup.value;\n  }\n}\n\nexport var FormDirectives = [\n  ControlGroupDirective, ControlNameDirective,\n  ControlDirective, NewControlGroupDirective\n];\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any","assert.type.any","Object.getOwnPropertyDescriptor($__placeholder__0)"]}