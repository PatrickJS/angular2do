{"version":3,"sources":["xhr_mock.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/mock/xhr_mock.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/mock/","sourcesContent":["import {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent, normalizeBlank, BaseException} from 'angular2/src/facade/lang';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nexport class XHRMock extends XHR {\n  _expectations: List<_Expectation>;\n  _definitions: Map;\n  _requests: List<Promise>;\n\n  constructor() {\n    super();\n    this._expectations = [];\n    this._definitions = MapWrapper.create();\n    this._requests = [];\n  }\n\n  get(url: string): Promise<string> {\n    var request = new _PendingRequest(url);\n    ListWrapper.push(this._requests, request);\n    return request.getPromise();\n  }\n\n  expect(url: string, response: string) {\n    var expectation = new _Expectation(url, response);\n    ListWrapper.push(this._expectations, expectation);\n  }\n\n  when(url: string, response: string) {\n    MapWrapper.set(this._definitions, url, response);\n  }\n\n  flush() {\n    if (this._requests.length === 0) {\n      throw new BaseException('No pending requests to flush');\n    }\n\n    do {\n      var request = ListWrapper.removeAt(this._requests, 0);\n      this._processRequest(request);\n    } while (this._requests.length > 0);\n\n    this.verifyNoOustandingExpectations();\n  }\n\n  verifyNoOustandingExpectations() {\n    if (this._expectations.length === 0) return;\n\n    var urls = [];\n    for (var i = 0; i < this._expectations.length; i++) {\n      var expectation = this._expectations[i];\n      ListWrapper.push(urls, expectation.url);\n    }\n\n    throw new BaseException(`Unsatisfied requests: ${ListWrapper.join(urls, ', ')}`);\n  }\n\n  _processRequest(request: _PendingRequest) {\n    var url = request.url;\n\n    if (this._expectations.length > 0) {\n      var expectation = this._expectations[0];\n      if (expectation.url === url) {\n        ListWrapper.remove(this._expectations, expectation);\n        request.complete(expectation.response);\n        return;\n      }\n    }\n\n    if (MapWrapper.contains(this._definitions, url)) {\n      var response = MapWrapper.get(this._definitions, url);\n      request.complete(normalizeBlank(response));\n      return;\n    }\n\n    throw new BaseException(`Unexpected request ${url}`);\n  }\n}\n\nclass _PendingRequest {\n  url: string;\n  completer;\n\n  constructor(url) {\n    this.url = url;\n    this.completer = PromiseWrapper.completer();\n  }\n\n  complete(response: string) {\n    if (isBlank(response)) {\n      this.completer.reject(`Failed to load ${this.url}`);\n    } else {\n      this.completer.complete(response);\n    }\n  }\n\n  getPromise(): Promise<string> {\n    return this.completer.promise;\n  }\n}\n\nclass _Expectation {\n  url: string;\n  response: string;\n  constructor(url: string, response: string) {\n    this.url = url;\n    this.response = response;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}