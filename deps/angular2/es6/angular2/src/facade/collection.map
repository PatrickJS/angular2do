{"version":3,"sources":["collection.es6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/3865","@traceur/generated/TemplateParser/3866","@traceur/generated/TemplateParser/3867","@traceur/generated/TemplateParser/3872","@traceur/generated/TemplateParser/3873","@traceur/generated/TemplateParser/3874","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/3883","@traceur/generated/TemplateParser/3885","@traceur/generated/TemplateParser/3886"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/facade/collection.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/facade/","sourcesContent":["import {int, isJsObject, global} from 'angular2/src/facade/lang';\n\nexport var List = global.Array;\nexport var Map = global.Map;\nexport var Set = global.Set;\nexport var StringMap = global.Object;\n\nexport class MapWrapper {\n  static create():Map { return new Map(); }\n  static clone(m:Map):Map { return new Map(m); }\n  static createFromStringMap(stringMap):Map {\n    var result = MapWrapper.create();\n    for (var prop in stringMap) {\n      MapWrapper.set(result, prop, stringMap[prop]);\n    }\n    return result;\n  }\n  static createFromPairs(pairs:List):Map {return new Map(pairs);}\n  static get(m, k) { return m.get(k); }\n  static set(m, k, v) { m.set(k,v); }\n  static contains(m, k) { return  m.has(k); }\n  static forEach(m, fn) {\n    m.forEach(fn);\n  }\n  static size(m) {return m.size;}\n  static delete(m, k) { m.delete(k); }\n  static clear(m) { m.clear(); }\n  static iterable(m) { return m; }\n  static keys(m) { return m.keys(); }\n  static values(m) { return m.values(); }\n}\n\n/**\n * Wraps Javascript Objects\n */\nexport class StringMapWrapper {\n  static create():Object {\n    // Note: We are not using Object.create(null) here due to\n    // performance!\n    // http://jsperf.com/ng2-object-create-null\n    return { };\n  }\n  static contains(map, key) {\n    return map.hasOwnProperty(key);\n  }\n  static get(map, key) {\n    return map.hasOwnProperty(key) ? map[key] : undefined;\n  }\n  static set(map, key, value) {\n    map[key] = value;\n  }\n  static isEmpty(map) {\n    for (var prop in map) {\n      return false;\n    }\n    return true;\n  }\n  static forEach(map, callback) {\n    for (var prop in map) {\n      if (map.hasOwnProperty(prop)) {\n        callback(map[prop], prop);\n      }\n    }\n  }\n\n  static merge(m1, m2) {\n    var m = {};\n\n    for (var attr in m1) {\n      if (m1.hasOwnProperty(attr)){\n        m[attr] = m1[attr];\n      }\n    }\n\n    for (var attr in m2) {\n      if (m2.hasOwnProperty(attr)){\n        m[attr] = m2[attr];\n      }\n    }\n\n    return m;\n  }\n}\n\nexport class ListWrapper {\n  static create():List { return new List(); }\n  static createFixedSize(size):List { return new List(size); }\n  static get(m, k) { return m[k]; }\n  static set(m, k, v) { m[k] = v; }\n  static clone(array:List) {\n    return array.slice(0);\n  }\n  static map(array, fn) {\n    return array.map(fn);\n  }\n  static forEach(array, fn) {\n    for(var p of array) {\n      fn(p);\n    }\n  }\n  static push(array, el) {\n    array.push(el);\n  }\n  static first(array) {\n    if (!array) return null;\n    return array[0];\n  }\n  static last(array) {\n    if (!array || array.length == 0) return null;\n    return array[array.length - 1];\n  }\n  static find(list:List, pred:Function) {\n    for (var i = 0 ; i < list.length; ++i) {\n      if (pred(list[i])) return list[i];\n    }\n    return null;\n  }\n  static reduce(list:List, fn:Function, init) {\n    return list.reduce(fn, init);\n  }\n  static filter(array, pred:Function) {\n    return array.filter(pred);\n  }\n  static any(list:List, pred:Function) {\n    for (var i = 0 ; i < list.length; ++i) {\n      if (pred(list[i])) return true;\n    }\n    return false;\n  }\n  static contains(list:List, el) {\n    return list.indexOf(el) !== -1;\n  }\n  static reversed(array) {\n    var a = ListWrapper.clone(array);\n    return a.reverse();\n  }\n  static concat(a, b) {return a.concat(b);}\n  static isList(list) {\n    return Array.isArray(list);\n  }\n  static insert(list, index:int, value) {\n    list.splice(index, 0, value);\n  }\n  static removeAt(list, index:int) {\n    var res = list[index];\n    list.splice(index, 1);\n    return res;\n  }\n  static removeAll(list, items) {\n    for (var i = 0; i < items.length; ++i) {\n      var index = list.indexOf(items[i]);\n      list.splice(index, 1);\n    }\n  }\n  static removeLast(list:List) {\n    return list.pop();\n  }\n  static remove(list, el): boolean {\n    var index = list.indexOf(el);\n    if (index > -1) {\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  static clear(list) {\n    list.splice(0, list.length);\n  }\n  static join(list, s) {\n    return list.join(s);\n  }\n  static isEmpty(list) {\n    return list.length == 0;\n  }\n  static fill(list:List, value, start:int = 0, end:int = null) {\n    list.fill(value, start, end === null ? undefined: end);\n  }\n  static equals(a:List, b:List):boolean {\n    if(a.length != b.length) return false;\n    for (var i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  static slice(l:List, from:int, to:int):List {\n    return l.slice(from, to);\n  }\n  static sort(l:List, compareFn:Function) {\n    l.sort(compareFn);\n  }\n}\n\nexport function isListLikeIterable(obj):boolean {\n  if (!isJsObject(obj)) return false;\n  return ListWrapper.isList(obj) ||\n         (!(obj instanceof Map) &&  // JS Map are iterables but return entries as [k, v]\n         Symbol.iterator in obj);   // JS Iterable have a Symbol.iterator prop\n}\n\nexport function iterateListLike(obj, fn:Function) {\n  for (var item of obj) {\n    fn(item);\n  }\n}\n\nexport class SetWrapper {\n  static createFromList(lst:List) { return new Set(lst); }\n  static has(s:Set, key):boolean { return s.has(key); }\n}\n","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.$__placeholder__0)","assert.type.any","assert.type.any","assert.type.any"]}