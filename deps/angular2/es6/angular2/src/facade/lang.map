{"version":3,"sources":["lang.es6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/3936","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/385","@traceur/generated/TemplateParser/3943","@traceur/generated/TemplateParser/3949"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/facade/lang.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/facade/","sourcesContent":["var _global = typeof window === 'undefined' ? global : window;\nexport {_global as global};\n\nexport var Type = Function;\nexport var Math = _global.Math;\nexport var Date = _global.Date;\n\nvar assertionsEnabled_ = typeof assert !== 'undefined';\n\nvar int;\n// global assert support, as Dart has it...\n// TODO: `assert` calls need to be removed in production code!\nif (assertionsEnabled_) {\n  _global.assert = assert;\n  // `int` is not a valid JS type\n  int = assert.define('int', function(value) {\n    return typeof value === 'number' && value%1 === 0;\n  });\n} else {\n  int = {};\n  _global.assert = function() {};\n}\nexport {int};\n\nexport class FIELD {\n  constructor(definition) {\n    this.definition = definition;\n  }\n}\n\nexport class CONST {}\nexport class ABSTRACT {}\nexport class IMPLEMENTS {}\n\nexport function isPresent(obj):boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isBlank(obj):boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isString(obj):boolean {\n  return typeof obj === \"string\";\n}\n\nexport function stringify(token):string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token === undefined || token === null) {\n    return '' + token;\n  }\n\n  if (token.name) {\n    return token.name;\n  }\n\n  return token.toString();\n}\n\nexport class StringWrapper {\n  static fromCharCode(code:int):string {\n    return String.fromCharCode(code);\n  }\n\n  static charCodeAt(s:string, index:int) {\n    return s.charCodeAt(index);\n  }\n\n  static split(s:string, regExp:RegExp) {\n    return s.split(regExp.multiple);\n  }\n\n  static equals(s:string, s2:string):boolean {\n    return s === s2;\n  }\n\n  static replace(s:string, from , replace:string): string {\n    if (typeof(from) === \"string\") {\n      return s.replace(from, replace);\n    } else {\n      return s.replace(from.single, replace);\n    }\n  }\n\n  static replaceAll(s:string, from:RegExp, replace:string):string {\n    return s.replace(from.multiple, replace);\n  }\n\n  static startsWith(s:string, start:string) {\n    return s.startsWith(start);\n  }\n\n  static substring(s:string, start:int, end:int = null) {\n    return s.substring(start, end === null ? undefined: end);\n  }\n\n  static replaceAllMapped(s:string, from:RegExp, cb:Function): string {\n    return s.replace(from.multiple, function(...matches) {\n      // Remove offset & string from the result array\n      matches.splice(-2, 2);\n      // The callback receives match, p1, ..., pn\n      return cb(matches);\n    });\n  }\n\n  static contains(s:string, substr:string): boolean {\n    return s.indexOf(substr) != -1;\n  }\n}\n\nexport class StringJoiner {\n  constructor() {\n    this.parts = [];\n  }\n\n  add(part:string) {\n    this.parts.push(part);\n  }\n\n  toString():string {\n    return this.parts.join(\"\");\n  }\n}\n\nexport class NumberParseError extends Error {\n  constructor(message) {\n    super();\n    this.message = message;\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n\n\nexport class NumberWrapper {\n  static toFixed(n:number, fractionDigits:int):string {\n    return n.toFixed(fractionDigits);\n  }\n\n  static equal(a, b):boolean {\n    return a === b;\n  }\n\n  static parseIntAutoRadix(text:string):int {\n    var result:int = parseInt(text);\n    if (isNaN(result)) {\n      throw new NumberParseError(\"Invalid integer literal when parsing \" + text);\n    }\n    return result;\n  }\n\n  static parseInt(text:string, radix:int):int {\n    if (radix == 10) {\n      if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n        return parseInt(text, radix);\n      }\n    } else if (radix == 16) {\n      if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n        return parseInt(text, radix);\n      }\n    } else {\n      var result:int = parseInt(text, radix);\n      if (!isNaN(result)) {\n        return result;\n      }\n    }\n    throw new NumberParseError(\"Invalid integer literal when parsing \" + text + \" in base \" + radix);\n  }\n\n  // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\n  static parseFloat(text:string):number {\n    return parseFloat(text);\n  }\n\n  static get NaN():number {\n    return NaN;\n  }\n\n  static isNaN(value):boolean {\n    return isNaN(value);\n  }\n\n  static isInteger(value):boolean {\n    return Number.isInteger(value);\n  }\n}\n\nexport var RegExp;\nif (assertionsEnabled_) {\n  RegExp = assert.define('RegExp', function(obj) {\n    assert(obj).is(assert.structure({\n      single: _global.RegExp,\n      multiple: _global.RegExp\n    }));\n  });\n} else {\n  RegExp = {};\n}\n\nexport class RegExpWrapper {\n  static create(regExpStr, flags:string = ''):RegExp {\n    flags = flags.replace(/g/g, '');\n    return {\n      multiple: new _global.RegExp(regExpStr, flags + 'g'),\n      single: new _global.RegExp(regExpStr, flags)\n    };\n  }\n  static firstMatch(regExp, input) {\n    return input.match(regExp.single);\n  }\n  static matcher(regExp, input) {\n    return {\n      re: regExp.multiple,\n      input: input\n    };\n  }\n}\n\nexport class RegExpMatcherWrapper {\n  static next(matcher) {\n    return matcher.re.exec(matcher.input);\n  }\n}\n\nexport class FunctionWrapper {\n  static apply(fn:Function, posArgs) {\n    return fn.apply(null, posArgs);\n  }\n}\n\n// No subclass so that we preserve error stack.\nexport var BaseException = Error;\n\n// JS has NaN !== NaN\nexport function looseIdentical(a, b):boolean {\n  return a === b ||\n         typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b);\n}\n\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nexport function getMapKey(value) {\n  return value;\n}\n\nexport function normalizeBlank(obj) {\n  return isBlank(obj) ? null : obj;\n}\n\nexport function isJsObject(o):boolean {\n  return o !== null && (typeof o === \"function\" || typeof o === \"object\");\n}\n\nexport function assertionsEnabled():boolean {\n  return assertionsEnabled_;\n}\n\nexport function print(obj) {\n  if (obj instanceof Error) {\n    console.log(obj.stack);\n  } else {\n    console.log(obj);\n  }\n}\n\n// Can't be all uppercase as our transpiler would think it is a special directive...\nexport var Json = _global.JSON;\n\nexport class DateWrapper {\n  static fromMillis(ms) {\n    return new Date(ms);\n  }\n  static now() {\n    return new Date();\n  }\n}\n","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.$__placeholder__0)","assert.argumentTypes($__placeholder__0)","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type($__placeholder__0, $__placeholder__1)","assert.type.any","assert.type.any"]}