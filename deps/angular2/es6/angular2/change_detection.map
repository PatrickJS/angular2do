{"version":3,"sources":["change_detection.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/change_detection.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/","sourcesContent":["export {AST} from './src/change_detection/parser/ast';\nexport {Lexer} from './src/change_detection/parser/lexer';\nexport {Parser} from './src/change_detection/parser/parser';\nexport {ContextWithVariableBindings}\n    from './src/change_detection/parser/context_with_variable_bindings';\nexport {ExpressionChangedAfterItHasBeenChecked, ChangeDetectionError}\n    from './src/change_detection/exceptions';\nexport {ChangeRecord, ChangeDispatcher, ChangeDetector,\n    CHECK_ONCE, CHECK_ALWAYS, DETACHED, CHECKED} from './src/change_detection/interfaces';\nexport {ProtoChangeDetector, DynamicProtoChangeDetector, JitProtoChangeDetector}\n    from './src/change_detection/proto_change_detector';\nexport {DynamicChangeDetector}\n    from './src/change_detection/dynamic_change_detector';\nexport * from './src/change_detection/pipes/pipe_registry';\nexport * from './src/change_detection/pipes/pipe';\n\n\nimport {ProtoChangeDetector, DynamicProtoChangeDetector, JitProtoChangeDetector}\n    from './src/change_detection/proto_change_detector';\nimport {PipeRegistry} from './src/change_detection/pipes/pipe_registry';\nimport {ArrayChangesFactory} from './src/change_detection/pipes/array_changes';\nimport {NullPipeFactory} from './src/change_detection/pipes/null_pipe';\n\nexport class ChangeDetection {\n  createProtoChangeDetector(name:string):ProtoChangeDetector{\n    // TODO: this should be abstract, once supported in AtScript\n    return null;\n  }\n}\n\nexport var defaultPipes = {\n  \"iterableDiff\" : [\n    new ArrayChangesFactory(),\n    new NullPipeFactory()\n  ]\n};\n\nexport class DynamicChangeDetection extends ChangeDetection {\n  registry:PipeRegistry;\n\n  constructor(registry:PipeRegistry) {\n    super();\n    this.registry = registry;\n  }\n\n  createProtoChangeDetector(name:string):ProtoChangeDetector{\n    return new DynamicProtoChangeDetector(this.registry);\n  }\n}\n\nexport class JitChangeDetection extends ChangeDetection {\n  registry:PipeRegistry;\n\n  constructor(registry:PipeRegistry) {\n    super();\n    this.registry = registry;\n  }\n\n  createProtoChangeDetector(name:string):ProtoChangeDetector{\n    return new JitProtoChangeDetector(this.registry);\n  }\n}\n\nvar _registry = new PipeRegistry(defaultPipes);\n\nexport var dynamicChangeDetection = new DynamicChangeDetection(_registry);\nexport var jitChangeDetection = new JitChangeDetection(_registry);","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}