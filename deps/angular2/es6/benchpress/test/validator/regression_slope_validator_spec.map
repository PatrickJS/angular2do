{"version":3,"sources":["regression_slope_validator_spec.js"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/benchpress/test/validator/regression_slope_validator_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/benchpress/test/validator/","sourcesContent":["import {describe, ddescribe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\nimport { Date, DateWrapper } from 'angular2/src/facade/lang';\nimport { ListWrapper } from 'angular2/src/facade/collection';\n\nimport {\n  Validator, RegressionSlopeValidator, Injector, bind, MeasureValues\n} from 'benchpress/benchpress';\n\nexport function main() {\n  describe('regression slope validator', () => {\n    var validator;\n\n    function createValidator({size, metric}) {\n      validator = new Injector([\n        RegressionSlopeValidator.BINDINGS,\n        bind(RegressionSlopeValidator.METRIC).toValue(metric),\n        bind(RegressionSlopeValidator.SAMPLE_SIZE).toValue(size)\n      ]).get(RegressionSlopeValidator);\n    }\n\n    it('should return sampleSize and metric as description', () => {\n      createValidator({size: 2, metric: 'script'});\n      expect(validator.describe()).toEqual({\n        'sampleSize': 2,\n        'regressionSlopeMetric': 'script'\n      });\n    });\n\n    it('should return null while the completeSample is smaller than the given size', () => {\n      createValidator({size: 2, metric: 'script'});\n      expect(validator.validate([])).toBe(null);\n      expect(validator.validate([mv(0,0,{})])).toBe(null);\n    });\n\n    it('should return null while the regression slope is < 0', () => {\n      createValidator({size: 2, metric: 'script'});\n      expect(validator.validate([mv(0,0,{'script':2}), mv(1,1,{'script':1})])).toBe(null);\n    });\n\n    it('should return the last sampleSize runs when the regression slope is ==0', () => {\n      createValidator({size: 2, metric: 'script'});\n      var sample = [mv(0,0,{'script':1}), mv(1,1,{'script':1}), mv(2,2,{'script':1})];\n      expect(validator.validate(ListWrapper.slice(sample,0,2))).toEqual(ListWrapper.slice(sample,0,2));\n      expect(validator.validate(sample)).toEqual(ListWrapper.slice(sample,1,3));\n    });\n\n    it('should return the last sampleSize runs when the regression slope is >0', () => {\n      createValidator({size: 2, metric: 'script'});\n      var sample = [mv(0,0,{'script':1}), mv(1,1,{'script':2}), mv(2,2,{'script':3})];\n      expect(validator.validate(ListWrapper.slice(sample,0,2))).toEqual(ListWrapper.slice(sample,0,2));\n      expect(validator.validate(sample)).toEqual(ListWrapper.slice(sample,1,3));\n    });\n\n  });\n}\n\nfunction mv(runIndex, time, values) {\n  return new MeasureValues(runIndex, DateWrapper.fromMillis(time), values);\n}\n"]}