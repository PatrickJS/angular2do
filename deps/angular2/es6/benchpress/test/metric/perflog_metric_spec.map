{"version":3,"sources":["perflog_metric_spec.js","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/benchpress/test/metric/perflog_metric_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/benchpress/test/metric/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport { List, ListWrapper } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\n\nimport { Metric, PerflogMetric, WebDriverExtension, bind, Injector } from 'benchpress/benchpress';\n\nimport { TraceEventFactory } from '../trace_event_factory';\n\nexport function main() {\n  var commandLog;\n  var eventFactory = new TraceEventFactory('timeline', 'pid0');\n\n  function createMetric(perfLogs) {\n    commandLog = [];\n    return new Injector([\n      PerflogMetric.BINDINGS,\n      bind(PerflogMetric.SET_TIMEOUT).toValue( (fn, millis) => {\n        ListWrapper.push(commandLog, ['setTimeout', millis]);\n        fn();\n      }),\n      bind(WebDriverExtension).toValue(new MockDriverExtension(perfLogs, commandLog))\n    ]).get(PerflogMetric);\n  }\n\n  describe('perflog metric', () => {\n\n    it('should describe itself', () => {\n      expect(createMetric([[]]).describe()['script']).toBe('script execution time in ms');\n    });\n\n    describe('beginMeasure', () => {\n\n      it('should mark the timeline', (done) => {\n        var metric = createMetric([[]]);\n        metric.beginMeasure().then((_) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0']]);\n\n          done();\n        });\n      });\n\n    });\n\n    describe('endMeasure', () => {\n\n      it('should mark and aggregate events in between the marks', (done) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.start('script', 4),\n            eventFactory.end('script', 6),\n            eventFactory.markEnd('benchpress0', 10)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(2);\n\n            done();\n        });\n      });\n\n      it('should restart timing', (done) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.markEnd('benchpress0', 1),\n            eventFactory.markStart('benchpress1', 2),\n          ], [\n            eventFactory.markEnd('benchpress1', 3)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n\n            done();\n        });\n      });\n\n      it('should loop and aggregate until the end mark is present', (done) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 1) ],\n          [ eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress0', 10) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(3);\n\n            done();\n        });\n      });\n\n      it('should store events after the end mark for the next call', (done) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.markEnd('benchpress0', 1), eventFactory.markStart('benchpress1', 1),\n            eventFactory.start('script', 1), eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress1', 6) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (data) => {\n            expect(data['script']).toBe(0);\n            return metric.endMeasure(true)\n          })\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(3);\n\n            done();\n        });\n      });\n\n    });\n\n    describe('aggregation', () => {\n\n      function aggregate(events) {\n        ListWrapper.insert(events, 0, eventFactory.markStart('benchpress0', 0));\n        ListWrapper.push(events, eventFactory.markEnd('benchpress0', 10));\n        var metric = createMetric([events]);\n        return metric\n          .beginMeasure().then( (_) => metric.endMeasure(false) );\n      }\n\n\n      it('should report a single interval', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['script']).toBe(5);\n          done();\n        });\n      });\n\n      it('should sum up multiple intervals', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5),\n          eventFactory.start('script', 10),\n          eventFactory.end('script', 17)\n        ]).then((data) => {\n          expect(data['script']).toBe(12);\n          done();\n        });\n      });\n\n      it('should ignore not started intervals', (done) => {\n        aggregate([\n          eventFactory.end('script', 10)\n        ]).then((data) => {\n          expect(data['script']).toBe(0);\n          done();\n        });\n      });\n\n      it('should ignore not ended intervals', (done) => {\n        aggregate([\n          eventFactory.start('script', 10)\n        ]).then((data) => {\n          expect(data['script']).toBe(0);\n          done();\n        });\n      });\n\n      it('should ignore events from different processed as the start mark', (done) => {\n        var otherProcessEventFactory = new TraceEventFactory('timeline', 'pid1');\n        var metric = createMetric([[\n          eventFactory.markStart('benchpress0', 0),\n          eventFactory.start('script', 0, null),\n          eventFactory.end('script', 5, null),\n          otherProcessEventFactory.start('script', 10, null),\n          otherProcessEventFactory.end('script', 17, null),\n          eventFactory.markEnd('benchpress0', 20)\n        ]]);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then((data) => {\n            expect(data['script']).toBe(5);\n            done();\n          });\n      });\n\n      ['script', 'gcTime', 'render'].forEach( (metricName) => {\n        it(`should support ${metricName} metric`, (done) => {\n          aggregate([\n            eventFactory.start(metricName, 0),\n            eventFactory.end(metricName, 5)\n          ]).then((data) => {\n            expect(data[metricName]).toBe(5);\n            done();\n          });\n        });\n      });\n\n      it('should support gcAmount metric', (done) => {\n        aggregate([\n          eventFactory.start('gc', 0, {'usedHeapSize': 2500}),\n          eventFactory.end('gc', 5, {'usedHeapSize': 1000})\n        ]).then((data) => {\n          expect(data['gcAmount']).toBe(1.5);\n          done();\n        });\n      });\n\n      it('should subtract gcTime in script from script time', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.start('gc', 1, {'usedHeapSize': 1000}),\n          eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['script']).toBe(2);\n          done();\n        });\n      });\n\n      describe('gcTimeInScript / gcAmountInScript', () => {\n\n        it('should detect gc during script execution with begin/end events', (done) => {\n          aggregate([\n            eventFactory.start('script', 0),\n            eventFactory.start('gc', 1, {'usedHeapSize': 10000}),\n            eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n            eventFactory.end('script', 5)\n          ]).then((data) => {\n            expect(data['gcTimeInScript']).toBe(3);\n            expect(data['gcAmountInScript']).toBe(10.0);\n            done();\n          });\n        });\n\n        it('should detect gc during script execution with complete events', (done) => {\n          aggregate([\n            eventFactory.complete('script', 0, 5),\n            eventFactory.start('gc', 1, {'usedHeapSize': 10000}),\n            eventFactory.end('gc', 4, {'usedHeapSize': 0})\n          ]).then((data) => {\n            expect(data['gcTimeInScript']).toBe(3);\n            expect(data['gcAmountInScript']).toBe(10.0);\n            done();\n          });\n        });\n\n        it('should ignore gc outside of script execution', (done) => {\n          aggregate([\n            eventFactory.start('gc', 1, {'usedHeapSize': 10}),\n            eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n            eventFactory.start('script', 0),\n            eventFactory.end('script', 5)\n          ]).then((data) => {\n            expect(data['gcTimeInScript']).toEqual(0.0);\n            expect(data['gcAmountInScript']).toEqual(0.0);\n            done();\n          });\n        });\n\n      });\n\n    });\n\n  });\n}\n\nclass MockDriverExtension extends WebDriverExtension {\n  _perfLogs:List;\n  _commandLog:List;\n  constructor(perfLogs, commandLog) {\n    super();\n    this._perfLogs = perfLogs;\n    this._commandLog = commandLog;\n  }\n\n  timeBegin(name):Promise {\n    ListWrapper.push(this._commandLog, ['timeBegin', name]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  timeEnd(name, restartName):Promise {\n    ListWrapper.push(this._commandLog, ['timeEnd', name, restartName]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  readPerfLog():Promise {\n    ListWrapper.push(this._commandLog, 'readPerfLog');\n    if (this._perfLogs.length > 0) {\n      var next = this._perfLogs[0];\n      ListWrapper.removeAt(this._perfLogs, 0);\n      return PromiseWrapper.resolve(next);\n    } else {\n      return PromiseWrapper.resolve([]);\n    }\n  }\n}\n","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}