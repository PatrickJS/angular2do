{"version":3,"sources":["selenium_webdriver_adapter.es6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAE,OAAM;AAAG,eAAa,CAAE,KAAO,4BAA0B,CAAC;AACnE,KAAO,EAAE,IAAG,CAAE,KAAO,cAAY,CAAC;AAClC,KAAO,EAAE,gBAAe,CAAE,KAAO,wBAAsB,CAAC;AAExD,KAAO,CAAA,SAAQ,CAAA,IAAO,qBAAmB,CAAC;AAK1C,KAAO,MAAM,yBAAuB,QAAU,iBAAe;AAG3D,YAAU,CAAE,MAAK,CAAG;AAClB,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,QAAQ,EAAI,OAAK,CAAC;EACvB;AAAA,AAEA,gBAAc,CAAE,QAAO,CAAG;AACxB,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,cAAa,UAAU,AAAC,EAAC,CAAC;AAC1C,WAAO,KAAK,AAAC,CAIX,CAAC,IAAG,IAAM,CAAA,SAAQ,SAAS,AAAC,CAAC,qBAAoB,AAAC,CAAC,IAAG,CAAC,CAAC,CACxD,CAAA,SAAQ,OAAO,CACjB,CAAC;AACD,SAAO,CAAA,SAAQ,QAAQ,CAAC;EAC1B;AAAA,AAEA,QAAM,CAAE,QAAO;AC7BjB,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CD8Bd,IAAG,gBAAgB,AAAC,CAAC,IAAG,QAAQ,YAAY,AAAC,EAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC,CC9BjC,CD6BvB,QAAM,CC7BqC,CAAA;ED+B7D;AAEA,cAAY,CAAE,MAAK,AAAO;AEjC5B,SAAK,cAAc,QCAnB,CAAA,MAAK,KAAK,QDA4B,CAAA;ADAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CDkCd,IAAG,gBAAgB,AAAC,CAAC,IAAG,QAAQ,cAAc,AAAC,CAAC,MAAK,CAAC,CAAC,CClCvB,CDiCZ,QAAM,CCjC0B,CAAA;EDmC7D;AAEA,aAAW,CAAE,AAAD;ACrCd,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CDsCd,IAAG,gBAAgB,AAAC,CACzB,IAAG,QAAQ,gBAAgB,AAAC,EAAC,KAAK,AAAC,CAAE,CAAC,UAAS,IAAM,CAAA,UAAS,OAAO,AAAC,EAAC,CAAE,CAC3E,CCxCuC,CDqC1B,QAAM,CCrCwC,CAAA;EDyC7D;AAEA,KAAG,CAAE,IAAG,AAAO;AE3CjB,SAAK,cAAc,MCAnB,CAAA,MAAK,KAAK,QDA4B,CAAA;ADAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CD8Cd,IAAG,gBAAgB,AAAC,CAAC,IAAG,QAAQ,SAAS,AAAC,CAC/C,GAAI,CAAA,SAAQ,QAAQ,AAAC,CAAC,SAAQ,YAAY,QAAQ,CAAC,aACpC,AAAC,CAAC,MAAK,CAAG,KAAG,CAAC,CAC7B,CAAA,gCAA+B,EAAI,KAAG,CAAA,CAAI,IAAE,CAAC,CAAC,CCjDT,CD2CvB,QAAM,CC3CqC,CAAA;EDkD7D;AAEF;AAAA,AIpDA,KAAK,eAAe,AAAC,gEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,UCCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,uDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,UCCuC;EAAC,CAAC,CAAC,CAAC;AJqDrD,OAAS,sBAAoB,CAAE,IAAG,CAAG;AACnC,AAAI,IAAA,CAAA,UAAS,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,IAAG,CAAC,CAAC;AACrC,KAAI,EAAC,EAAE,WAAS,CAAA,GAAM,YAAU,CAAG;AACjC,SAAO,UAAQ,CAAC;EAClB;AAAA,AACA,OAAO,CAAA,IAAG,MAAM,AAAC,CAAC,UAAS,CAAC,CAAC;AAC/B;AAAA","file":"/Users/patrick/Documents/open source/angular/modules/benchpress/src/webdriver/selenium_webdriver_adapter.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/benchpress/src/webdriver/","sourcesContent":["import { Promise, PromiseWrapper } from 'angular2/src/facade/async';\nimport { bind } from 'angular2/di';\nimport { WebDriverAdapter } from '../web_driver_adapter';\n\nimport webdriver from 'selenium-webdriver';\n\n/**\n * Adapter for the selenium-webdriver.\n */\nexport class SeleniumWebDriverAdapter extends WebDriverAdapter {\n  _driver:any;\n\n  constructor(driver) {\n    super();\n    this._driver = driver;\n  }\n\n  _convertPromise(thenable) {\n    var completer = PromiseWrapper.completer();\n    thenable.then(\n      // selenium-webdriver uses an own Node.js context,\n      // so we need to convert data into objects of this context.\n      // (e.g. otherwise instanceof checks of rtts_assert would fail)\n      (data) => completer.complete(convertToLocalProcess(data)),\n      completer.reject\n    );\n    return completer.promise;\n  }\n\n  waitFor(callback):Promise {\n    return this._convertPromise(this._driver.controlFlow().execute(callback));\n  }\n\n  executeScript(script:string):Promise {\n    return this._convertPromise(this._driver.executeScript(script));\n  }\n\n  capabilities():Promise {\n    return this._convertPromise(\n      this._driver.getCapabilities().then( (capsObject) => capsObject.toJSON() )\n    );\n  }\n\n  logs(type:string):Promise {\n    // Needed as selenium-webdriver does not forward\n    // performance logs in the correct way via manage().logs\n    return this._convertPromise(this._driver.schedule(\n      new webdriver.Command(webdriver.CommandName.GET_LOG).\n          setParameter('type', type),\n      'WebDriver.manage().logs().get(' + type + ')'));\n  }\n\n}\n\nfunction convertToLocalProcess(data) {\n  var serialized = JSON.stringify(data);\n  if (''+serialized === 'undefined') {\n    return undefined;\n  }\n  return JSON.parse(serialized);\n}","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}