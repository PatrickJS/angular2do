{"version":3,"sources":["tree_benchmark.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/benchmarks/src/tree/tree_benchmark.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/benchmarks/src/tree/","sourcesContent":["import {Parser, Lexer, ChangeDetector, ChangeDetection, jitChangeDetection}\n  from 'angular2/change_detection';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\n\nimport {bootstrap, Component, Viewport, Template, ViewContainer, Compiler} from 'angular2/angular2';\n\nimport {CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {ShadowDomStrategy, NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {DOM, document, window, Element, gc} from 'angular2/src/facade/dom';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {getIntParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {XHRImpl} from 'angular2/src/core/compiler/xhr/xhr_impl';\n\nimport {If} from 'angular2/directives';\n\nfunction setupReflector() {\n  // TODO: Put the general calls to reflector.register... in a shared file\n  // as they are needed in all benchmarks...\n\n  reflector.registerType(AppComponent, {\n    'factory': () => new AppComponent(),\n    'parameters': [],\n    'annotations' : [\n      new Component({selector: 'app'}),\n      new Template({\n        directives: [TreeComponent],\n        inline: `<tree [data]='initData'></tree>`\n      })]\n  });\n\n  reflector.registerType(TreeComponent, {\n    'factory': () => new TreeComponent(),\n    'parameters': [],\n    'annotations' : [\n      new Component({\n        selector: 'tree',\n        bind: {'data': 'data'}\n      }),\n      new Template({\n        directives: [TreeComponent, If],\n        inline: `<span> {{data.value}} <span template='if data.right != null'><tree [data]='data.right'></tree></span><span template='if data.left != null'><tree [data]='data.left'></tree></span></span>`\n      })]\n  });\n\n  reflector.registerType(If, {\n    'factory': (vp) => new If(vp),\n    'parameters': [[ViewContainer]],\n    'annotations' : [new Viewport({\n      selector: '[if]',\n      bind: {\n        'condition': 'if'\n      }\n    })]\n  });\n\n  reflector.registerType(Compiler, {\n    'factory': (cd, templateLoader, reader, parser, compilerCache, strategy, resolver) =>\n      new Compiler(cd, templateLoader, reader, parser, compilerCache, strategy, resolver),\n    'parameters': [[ChangeDetection], [TemplateLoader], [DirectiveMetadataReader],\n                   [Parser], [CompilerCache], [ShadowDomStrategy], [TemplateResolver]],\n    'annotations': []\n  });\n\n  reflector.registerType(CompilerCache, {\n    'factory': () => new CompilerCache(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(Parser, {\n    'factory': (lexer) => new Parser(lexer),\n    'parameters': [[Lexer]],\n    'annotations': []\n  });\n\n  reflector.registerType(TemplateLoader, {\n    'factory': (xhr) => new TemplateLoader(xhr),\n    'parameters': [[XHR]],\n    'annotations': []\n  });\n\n  reflector.registerType(TemplateResolver, {\n    'factory': () => new TemplateResolver(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(XHR, {\n    'factory': () => new XHRImpl(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(DirectiveMetadataReader, {\n    'factory': () => new DirectiveMetadataReader(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(ShadowDomStrategy, {\n    'factory': () => new NativeShadowDomStrategy(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(Lexer, {\n    'factory': () => new Lexer(),\n    'parameters': [],\n    'annotations': []\n  });\n\n  reflector.registerType(ExceptionHandler, {\n    \"factory\": () => new ExceptionHandler(),\n    \"parameters\": [],\n    \"annotations\": []\n  });\n\n  reflector.registerType(LifeCycle, {\n    \"factory\": (exHandler, cd) => new LifeCycle(exHandler, cd),\n    \"parameters\": [[ExceptionHandler, ChangeDetector]],\n    \"annotations\": []\n  });\n\n\n  reflector.registerGetters({\n    'value': (a) => a.value,\n    'left': (a) => a.left,\n    'right': (a) => a.right,\n    'initData': (a) => a.initData,\n    'data': (a) => a.data,\n    'condition': (a) => a.condition,\n  });\n\n  reflector.registerSetters({\n    'value': (a,v) => a.value = v,\n    'left': (a,v) => a.left = v,\n    'right': (a,v) => a.right = v,\n    'initData': (a,v) => a.initData = v,\n    'data': (a,v) => a.data = v,\n    'condition': (a,v) => a.condition = v,\n  });\n}\n\nexport function main() {\n var maxDepth = getIntParameter('depth');\n\n setupReflector();\n\n  var app;\n  var lifeCycle;\n  var baselineRootTreeComponent;\n  var count = 0;\n\n  function ng2DestroyDom() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    app.initData = new TreeNode('', null, null);\n    lifeCycle.tick();\n  }\n\n  function profile(create, destroy, name) {\n    return function() {\n      window.console.profile(name + ' w GC');\n      var duration = 0;\n      var count = 0;\n      while(count++ < 150) {\n        gc();\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n\n      window.console.profile(name + ' w/o GC');\n      duration = 0;\n      count = 0;\n      while(count++ < 150) {\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w/o GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n    };\n  }\n\n  function ng2CreateDom() {\n    var values = count++ % 2 == 0 ?\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*'] :\n      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '-'];\n\n    app.initData = buildTree(maxDepth, values, 0);\n    lifeCycle.tick();\n  }\n\n  function noop() {}\n\n  function initNg2() {\n    bootstrap(AppComponent).then((injector) => {\n      lifeCycle = injector.get(LifeCycle);\n\n      app = injector.get(AppComponent);\n      bindAction('#ng2DestroyDom', ng2DestroyDom);\n      bindAction('#ng2CreateDom', ng2CreateDom);\n      bindAction('#ng2UpdateDomProfile', profile(ng2CreateDom, noop, 'ng2-update'));\n      bindAction('#ng2CreateDomProfile', profile(ng2CreateDom, ng2DestroyDom, 'ng2-create'));\n    });\n  }\n\n  function baselineDestroyDom() {\n    baselineRootTreeComponent.update(new TreeNode('', null, null));\n  }\n\n  function baselineCreateDom() {\n    var values = count++ % 2 == 0 ?\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*'] :\n      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '-'];\n\n    baselineRootTreeComponent.update(buildTree(maxDepth, values, 0));\n  }\n\n  function initBaseline() {\n    var tree = DOM.createElement('tree');\n    DOM.appendChild(DOM.querySelector(document, 'baseline'), tree);\n    baselineRootTreeComponent = new BaseLineTreeComponent(tree);\n\n    bindAction('#baselineDestroyDom', baselineDestroyDom);\n    bindAction('#baselineCreateDom', baselineCreateDom);\n\n    bindAction('#baselineUpdateDomProfile', profile(baselineCreateDom, noop, 'baseline-update'));\n    bindAction('#baselineCreateDomProfile', profile(baselineCreateDom, baselineDestroyDom, 'baseline-create'));\n  }\n\n  initNg2();\n  initBaseline();\n}\n\nclass TreeNode {\n  value:string;\n  left:TreeNode;\n  right:TreeNode;\n  constructor(value, left, right) {\n    this.value = value;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction buildTree(maxDepth, values, curDepth) {\n  if (maxDepth === curDepth) return new TreeNode('', null, null);\n  return new TreeNode(\n      values[curDepth],\n      buildTree(maxDepth, values, curDepth+1),\n      buildTree(maxDepth, values, curDepth+1));\n}\n\nvar BASELINE_TREE_TEMPLATE = DOM.createTemplate(\n    '<span>_<template class=\"ng-binding\"></template><template class=\"ng-binding\"></template></span>');\nvar BASELINE_IF_TEMPLATE = DOM.createTemplate(\n    '<span template=\"if\"><tree></tree></span>');\n// http://jsperf.com/nextsibling-vs-childnodes\n\nclass BaseLineTreeComponent {\n  element:Element;\n  value:BaseLineInterpolation;\n  left:BaseLineIf;\n  right:BaseLineIf;\n  constructor(element) {\n    this.element = element;\n    var clone = DOM.clone(BASELINE_TREE_TEMPLATE.content.firstChild);\n    var shadowRoot = this.element.createShadowRoot();\n    DOM.appendChild(shadowRoot, clone);\n\n    var child = clone.firstChild;\n    this.value = new BaseLineInterpolation(child);\n    child = DOM.nextSibling(child);\n    this.left = new BaseLineIf(child);\n    child = DOM.nextSibling(child);\n    this.right = new BaseLineIf(child);\n  }\n  update(value:TreeNode) {\n    this.value.update(value.value);\n    this.left.update(value.left);\n    this.right.update(value.right);\n  }\n}\n\nclass BaseLineInterpolation {\n  value:string;\n  textNode;\n  constructor(textNode) {\n    this.value = null;\n    this.textNode = textNode;\n  }\n  update(value:string) {\n    if (this.value !== value) {\n      this.value = value;\n      DOM.setText(this.textNode, value + ' ');\n    }\n  }\n}\n\nclass BaseLineIf {\n  condition:boolean;\n  component:BaseLineTreeComponent;\n  anchor:Element;\n  constructor(anchor) {\n    this.anchor = anchor;\n    this.condition = false;\n    this.component = null;\n  }\n  update(value:TreeNode) {\n    var newCondition = isPresent(value);\n    if (this.condition !== newCondition) {\n      this.condition = newCondition;\n      if (isPresent(this.component)) {\n        this.component.element.remove();\n        this.component = null;\n      }\n      if (this.condition) {\n        var element = DOM.firstChild(DOM.clone(BASELINE_IF_TEMPLATE).content);\n        this.anchor.parentNode.insertBefore(element, DOM.nextSibling(this.anchor));\n        this.component = new BaseLineTreeComponent(DOM.firstChild(element));\n      }\n    }\n    if (isPresent(this.component)) {\n      this.component.update(value);\n    }\n  }\n}\n\nclass AppComponent {\n  initData:TreeNode;\n  constructor() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    this.initData = new TreeNode('', null, null);\n  }\n}\n\nclass TreeComponent {\n  data:TreeNode;\n}\n\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}