{"version":3,"sources":["element_injector_benchmark.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/benchmarks/src/element_injector/element_injector_benchmark.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/benchmarks/src/element_injector/","sourcesContent":["import {reflector} from 'angular2/src/reflection/reflection';\nimport {Injector} from 'angular2/di';\nimport {ProtoElementInjector} from 'angular2/src/core/compiler/element_injector';\nimport {getIntParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nvar count = 0;\n\nfunction setupReflector() {\n  reflector.registerType(A, {\n    'factory': () => new A(),\n    'parameters': [],\n    'annotations' : []\n  });\n  reflector.registerType(B, {\n    'factory': () => new B(),\n    'parameters': [],\n    'annotations' : []\n  });\n  reflector.registerType(C, {\n    'factory': (a,b) => new C(a,b),\n    'parameters': [[A],[B]],\n    'annotations' : []\n  });\n}\n\nexport function main() {\n  var iterations = getIntParameter('iterations');\n\n  setupReflector();\n  var appInjector = new Injector([]);\n\n  var bindings = [A, B, C];\n  var proto = new ProtoElementInjector(null, 0, bindings);\n  var elementInjector = proto.instantiate(null,null, null);\n\n  function instantiate () {\n    for (var i = 0; i < iterations; ++i) {\n      var ei = proto.instantiate(null, null, null);\n      ei.instantiateDirectives(appInjector, null, null);\n    }\n  }\n\n  function instantiateDirectives () {\n    for (var i = 0; i < iterations; ++i) {\n      elementInjector.clearDirectives();\n      elementInjector.instantiateDirectives(appInjector, null, null);\n    }\n  }\n\n  bindAction('#instantiate', instantiate);\n  bindAction('#instantiateDirectives', instantiateDirectives);\n}\n\nclass A {\n  constructor() {\n    count++;\n  }\n}\n\nclass B {\n  constructor() {\n    count++;\n  }\n}\n\nclass C {\n  constructor(a:A, b:B) {\n    count++;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}