{"version":3,"sources":["naive_infinite_scroll_spec.es6"],"names":[],"mappings":"AAAI,EAAA,CAAA,QAAO,EAAI,CAAA,OAAM,AAAC,CAAC,6BAA4B,CAAC,CAAC;AAErD,OAAO,AAAC,CAAC,qCAAoC,CAAG,UAAU,AAAD,CAAG;AAE1D,AAAI,IAAA,CAAA,GAAE,EAAI,4DAA0D,CAAC;AAErE,UAAQ,AAAC,CAAC,QAAO,sBAAsB,CAAC,CAAC;AAEzC,GAAC,AAAC,CAAC,yBAAwB,CAAG,UAAS,AAAD,CAAG;AACvC,UAAM,IAAI,AAAC,CAAC,GAAE,CAAC,CAAC;AAChB,AAAI,MAAA,CAAA,gBAAe,EAAI,GAAC,CAAC;AACzB,AAAI,MAAA,CAAA,mBAAkB,EAAI,GAAC,CAAC;AAC5B,AAAI,MAAA,CAAA,cAAa,EAAI,iDAA+C,CAAC;AACrE,AAAI,MAAA,CAAA,KAAI,EAAI,IAAI,cAAa,gBAAiB,CAAC;AAC/C,AAAI,MAAA,CAAA,YAAW,EACX,IAAI,cAAa,0CAA2C,CAAC;AAEjE,AAAI,MAAA,CAAA,KAAI,EAAI,UAAS,QAAO,CAAG;AAC7B,WAAO,CAAA,OAAM,cAAc,AAAC,CAC1B,qCAAsC,QAAO,YAAa,CAC5D,CAAC;IACH,CAAA;AAEA,AAAI,MAAA,CAAA,YAAW,EAAI,UAAS,QAAO,CAAG;AACpC,WAAO,CAAA,OAAM,cAAc,AAAC,CAC1B,2BAA4B,QAAO,aAAc,CACnD,CAAC;IACH,CAAA;AAEA,AAAI,MAAA,CAAA,WAAU,EAAI,UAAS,QAAO,CAAG;AACnC,WAAO,CAAA,OAAM,cAAc,AAAC,CAC1B,kCAAmC,QAAO,eAAgB,CAC5D,CAAC;IACH,CAAA;AAGA,QAAI,AAAC,CAAC,cAAa,CAAC,KAAK,AAAC,CAAC,SAAS,CAAA,CAAG;AACrC,WAAK,AAAC,CAAC,CAAA,CAAC,KAAK,AAAC,CAAC,gBAAe,CAAC,CAAC;IAClC,CAAC,CAAC;AAGF,QAAI,AAAC,CAAC,KAAI,CAAC,KAAK,AAAC,CAAC,SAAS,CAAA,CAAG;AAC5B,WAAK,AAAC,CAAC,CAAA,CAAC,KAAK,AAAC,CAAC,gBAAe,EAAI,oBAAkB,CAAC,CAAC;IACxD,CAAC,CAAC;AAGF,cAAU,AAAC,CAAC,GAAI,YAAW,UAAW,CAAC,KAAK,AAAC,CAAC,SAAS,IAAG,CAAG;AAC3D,WAAK,AAAC,CAAC,IAAG,CAAC,KAAK,AAAC,CAAC,SAAQ,CAAC,CAAC;AAC5B,iBAAW,AAAC,CAAC,GAAI,YAAW,UAAW,CAAC,KAAK,AAAC,CAAC,SAAS,AAAD,CAAG;AACxD,kBAAU,AAAC,CAAC,GAAI,YAAW,UAAW,CAAC,KAAK,AAAC,CAAC,SAAS,IAAG,CAAG;AAC3D,eAAK,AAAC,CAAC,IAAG,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;QAC1B,CAAC,CAAA;MACH,CAAC,CAAC;IACJ,CAAC,CAAA;AAED,UAAM,cAAc,AAAC,CACjB,gEAA+D,CAAC,CAAC;AACrE,UAAM,cAAc,AAAC,CACjB,8DAA6D,CAAC,CAAC;AACnE,UAAM,KAAK,AAAC,CAAC,CAAC,AAAD,IAAM;AACjB,WAAO,CAAA,CAAA,AAAC,CAAC,OAAM,CAAC,QAAQ,AAAC,EAAC,KAAK,AAAC,CAC9B,SAAS,AAAD,CAAG;AAAE,aAAO,KAAG,CAAC;MAAE,CAC1B,UAAS,AAAD,CAAG;AAAE,aAAO,MAAI,CAAC;MAAE,CAAC,CAAC;IAC/B,CAAG,MAAI,CAAC,CAAC;EACb,CAAC,CAAC;AAEJ,CAAC,CAAC;AACF","file":"/Users/patrick/Documents/open source/angular/modules/benchmarks/e2e_test/naive_infinite_scroll_spec.es6","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/benchmarks/e2e_test/","sourcesContent":["var testUtil = require('angular2/e2e_test/test_util');\n\ndescribe('ng2 naive infinite scroll benchmark', function () {\n\n  var URL = 'benchmarks/src/naive_infinite_scroll/index.html?appSize=3';\n\n  afterEach(testUtil.verifyNoBrowserErrors);\n\n  it('should not throw errors', function() {\n    browser.get(URL);\n    var expectedRowCount = 18;\n    var expectedCellsPerRow = 11;\n    var allScrollItems = 'scroll-app /deep/ #testArea /deep/ scroll-item';\n    var cells = `${ allScrollItems } /deep/ .row *`;\n    var stageButtons =\n        `${ allScrollItems } /deep/ .row stage-buttons /deep/ button`;\n\n    var count = function(selector) {\n      return browser.executeScript(\n        `return document.querySelectorAll(\"${ selector }\").length;`\n      );\n    }\n\n    var clickFirstOf = function(selector) {\n      return browser.executeScript(\n        `document.querySelector(\"${ selector }\").click();`\n      );\n    }\n\n    var firstTextOf = function(selector) {\n      return browser.executeScript(\n        `return document.querySelector(\"${ selector }\").innerText;`\n      );\n    }\n\n    // Make sure rows are rendered\n    count(allScrollItems).then(function(c) {\n      expect(c).toBe(expectedRowCount);\n    });\n\n    // Make sure cells are rendered\n    count(cells).then(function(c) {\n      expect(c).toBe(expectedRowCount * expectedCellsPerRow);\n    });\n\n    // Click on first enabled button and verify stage changes\n    firstTextOf(`${ stageButtons }:enabled`).then(function(text) {\n      expect(text).toBe('Pitched');\n      clickFirstOf(`${ stageButtons }:enabled`).then(function() {\n        firstTextOf(`${ stageButtons }:enabled`).then(function(text) {\n          expect(text).toBe('Won');\n        })\n      });\n    })\n\n    browser.executeScript(\n        'document.querySelector(\"scroll-app /deep/ #reset-btn\").click()');\n    browser.executeScript(\n        'document.querySelector(\"scroll-app /deep/ #run-btn\").click()');\n    browser.wait(() => {\n      return $('#done').getText().then(\n        function() { return true; },\n        function() { return false; });\n      }, 10000);\n  });\n\n});\n"]}